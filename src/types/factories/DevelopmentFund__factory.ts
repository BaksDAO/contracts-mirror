/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DevelopmentFund,
  DevelopmentFundInterface,
} from "../DevelopmentFund";

const _abi = [
  {
    inputs: [],
    name: "BaksDAOOnlyDepositaryAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "BaksDAOOnlySuperUserAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "CallToNonContract",
    type: "error",
  },
  {
    inputs: [],
    name: "ContractAlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "GovernedCantGoverItself",
    type: "error",
  },
  {
    inputs: [],
    name: "GovernedGovernorZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "GovernedOnlyGovernorAllowedToCall",
    type: "error",
  },
  {
    inputs: [],
    name: "GovernedOnlyPendingGovernorAllowedToCall",
    type: "error",
  },
  {
    inputs: [],
    name: "SafeERC20NoReturnData",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "governor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newGovernor",
        type: "address",
      },
    ],
    name: "GovernanceTransited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "governor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newGovernor",
        type: "address",
      },
    ],
    name: "PendingGovernanceTransition",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "core",
    outputs: [
      {
        internalType: "contract ICore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICore",
        name: "_core",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingGovernor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newGovernor",
        type: "address",
      },
      {
        internalType: "bool",
        name: "force",
        type: "bool",
      },
    ],
    name: "transitGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506107ac806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063c4d66de81161005b578063c4d66de8146100ce578063ddc12526146100e1578063e3056a34146100f4578063f2f4eb261461010757600080fd5b80630c340a2414610082578063238efcbc146100b15780632e1a7d4d146100bb575b600080fd5b600154610095906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100b961011a565b005b6100b96100c9366004610658565b610193565b6100b96100dc366004610686565b61024b565b6100b96100ef3660046106b1565b61034a565b600254610095906001600160a01b031681565b600054610095906001600160a01b031681565b6002546001600160a01b031633146101455760405163aec80d4b60e01b815260040160405180910390fd5b600254600180546001600160a01b0319166001600160a01b03909216918217905560405181907f564590b81987d147246f63910a8e1ee4eb09c4d64cc75ee975a8ffedfcc2210e90600090a3565b6001546001600160a01b031633146101be576040516305e7700560e51b815260040160405180910390fd5b610248338260008054906101000a90046001600160a01b03166001600160a01b0316634c4e61e96040518163ffffffff1660e01b8152600401602060405180830381865afa158015610214573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023891906106ea565b6001600160a01b0316919061042d565b50565b600054600160a01b900460ff1615801561028057506000547501000000000000000000000000000000000000000000900460ff165b1561029e57604051631ee1e30360e21b815260040160405180910390fd5b600054600160a01b900460ff161580156102f357600080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff1675010100000000000000000000000000000000000000001790555b600080546001600160a01b0319166001600160a01b03841617905561031733610499565b801561034657600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1690555b5050565b6001546001600160a01b03163314610375576040516305e7700560e51b815260040160405180910390fd5b6001600160a01b03821661039c5760405163604b48b960e11b815260040160405180910390fd5b6001600160a01b0382163014156103c6576040516306b3e95d60e21b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b03841617905580610424576001546040516001600160a01b038085169216907fc606c9af1451cadeb333f6ff7b24a5540974f4e800bac274fa7fff9edc305cb190600090a35050565b61034682610499565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b1790526104949084906104e5565b505050565b600180546001600160a01b0319166001600160a01b03831690811790915560405181907f564590b81987d147246f63910a8e1ee4eb09c4d64cc75ee975a8ffedfcc2210e90600090a350565b6040805180820190915260208082527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564908201528290600090610534906001600160a01b038416908590610575565b80519091501561056f57808060200190518101906105529190610707565b61056f57604051639b8d506160e01b815260040160405180910390fd5b50505050565b6060833b6105a65760405163dc5dd7fd60e01b81526001600160a01b03851660048201526024015b60405180910390fd5b600080856001600160a01b0316856040516105c19190610750565b6000604051808303816000865af19150503d80600081146105fe576040519150601f19603f3d011682016040523d82523d6000602084013e610603565b606091505b509150915061061382828661061f565b925050505b9392505050565b6060831561062e575081610618565b82511561063e5782518060208501fd5b8160405162461bcd60e51b815260040161059d919061076c565b60006020828403121561066a57600080fd5b5035919050565b6001600160a01b038116811461024857600080fd5b60006020828403121561069857600080fd5b813561061881610671565b801515811461024857600080fd5b600080604083850312156106c457600080fd5b82356106cf81610671565b915060208301356106df816106a3565b809150509250929050565b6000602082840312156106fc57600080fd5b815161061881610671565b60006020828403121561071957600080fd5b8151610618816106a3565b60005b8381101561073f578181015183820152602001610727565b8381111561056f5750506000910152565b60008251610762818460208701610724565b9190910192915050565b602081526000825180602084015261078b816040850160208701610724565b601f01601f1916919091016040019291505056fea164736f6c634300080a000a";

type DevelopmentFundConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DevelopmentFundConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DevelopmentFund__factory extends ContractFactory {
  constructor(...args: DevelopmentFundConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DevelopmentFund> {
    return super.deploy(overrides || {}) as Promise<DevelopmentFund>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DevelopmentFund {
    return super.attach(address) as DevelopmentFund;
  }
  connect(signer: Signer): DevelopmentFund__factory {
    return super.connect(signer) as DevelopmentFund__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DevelopmentFundInterface {
    return new utils.Interface(_abi) as DevelopmentFundInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DevelopmentFund {
    return new Contract(address, _abi, signerOrProvider) as DevelopmentFund;
  }
}
