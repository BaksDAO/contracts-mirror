{
  "address": "0x98E0DbEe0c16fcc8468BC44014357d32Aa390fbD",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IWrappedNativeCurrency",
          "name": "_wrappedNativeCurrency",
          "type": "address"
        },
        {
          "internalType": "contract IMintableAndBurnableERC20",
          "name": "_stablecoin",
          "type": "address"
        },
        {
          "internalType": "contract IPriceOracle",
          "name": "_priceOracle",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_liquidator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_exchangeFund",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_investmentFund",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BaksDAOBorrowBelowMinimumPrincipalAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaksDAOBorrowZeroAmount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "BaksDAOCollateralTokenAlreadyListed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "BaksDAOCollateralTokenNotListed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "name": "BaksDAOCollateralTokenTooLargeDecimals",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "BaksDAOCollateralTokenZeroDecimals",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaksDAODepositZeroAmount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "BaksDAOInactiveLoan",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialLoanToValueRatio",
          "type": "uint256"
        }
      ],
      "name": "BaksDAOInitialLoanToValueRatioTooHigh",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minimumRequiredSecurityAmount",
          "type": "uint256"
        }
      ],
      "name": "BaksDAOInsufficientSecurityAmount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "BaksDAOLoanIsSubjectToLiquidation",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "BaksDAOLoanNotSubjectToLiquidation",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "BaksDAONativeCurrencyCollateralNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaksDAONativeCurrencyTransferFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaksDAONoNeedToRebalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaksDAOPlainNativeCurrencyTransferNotAllowed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stabilizationFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "exchangeFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "investmentFee",
          "type": "uint256"
        }
      ],
      "name": "BaksDAOPlatformFeesDontSumUpToOne",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaksDAORepayZeroAmount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shortage",
          "type": "uint256"
        }
      ],
      "name": "BaksDAOStabilizationFundOutOfFunds",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "BaksDAOTokenNotAllowedAsCollateral",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "BaksDAOTokenNotAllowedToBeSalvaged",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "CallToNonContract",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "prod1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "denominator",
          "type": "uint256"
        }
      ],
      "name": "FixedPointMathMulDivOverflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GovernedCantGoverItself",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GovernedGovernorZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GovernedOnlyGovernorAllowedToCall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GovernedOnlyPendingGovernorAllowedToCall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SafeERC20NoReturnData",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "principalAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "initialLoanToValueRatio",
          "type": "uint256"
        }
      ],
      "name": "Borrow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "CollateralTokenListed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "CollateralTokenUnlisted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "governor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newGovernor",
          "type": "address"
        }
      ],
      "name": "GovernanceTransited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "initialLoanToValueRatio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newInitialLoanToValueRatio",
          "type": "uint256"
        }
      ],
      "name": "InitialLoanToValueRatioUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Liquidated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liqudationLoanToValueRatio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newLiquidationLoanToValueRatio",
          "type": "uint256"
        }
      ],
      "name": "LiquidationLoanToValueRatioUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "marginCallLoanToValueRatio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newMarginCallLoanToValueRatio",
          "type": "uint256"
        }
      ],
      "name": "MarginCallLoanToValueRatioUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minimumPrincipalAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newMinimumPrincipalAmount",
          "type": "uint256"
        }
      ],
      "name": "MinimumPrincipalAmountUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "governor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newGovernor",
          "type": "address"
        }
      ],
      "name": "PendingGovernanceTransition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stabilizationFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newStabilizationFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "exchangeFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newExchangeFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "investmentFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newInvestmentFee",
          "type": "uint256"
        }
      ],
      "name": "PlatformFeesUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "delta",
          "type": "int256"
        }
      ],
      "name": "Rebalance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rebalancingThreshold",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRebalancingThreshold",
          "type": "uint256"
        }
      ],
      "name": "RebalancingThresholdUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Repaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "principalAmount",
          "type": "uint256"
        }
      ],
      "name": "Repay",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stabilityFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newStabilityFee",
          "type": "uint256"
        }
      ],
      "name": "StabilityFeeUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "borrow",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isNativeCurrency",
              "type": "bool"
            },
            {
              "internalType": "contract IPriceOracle",
              "name": "priceOracle",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "stabilityFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stabilizationFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "exchangeFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "investmentFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "principalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastDepositAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastRepaymentAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct Loan.Data",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "borrowInNativeCurrency",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isNativeCurrency",
              "type": "bool"
            },
            {
              "internalType": "contract IPriceOracle",
              "name": "priceOracle",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "stabilityFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stabilizationFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "exchangeFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "investmentFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "principalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastDepositAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastRepaymentAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct Loan.Data",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "calculateLoanByCollateralAmount",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isNativeCurrency",
              "type": "bool"
            },
            {
              "internalType": "contract IPriceOracle",
              "name": "priceOracle",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "stabilityFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stabilizationFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "exchangeFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "investmentFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "principalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastDepositAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastRepaymentAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct Loan.Data",
          "name": "loan",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "principalAmount",
          "type": "uint256"
        }
      ],
      "name": "calculateLoanByPrincipalAmount",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isNativeCurrency",
              "type": "bool"
            },
            {
              "internalType": "contract IPriceOracle",
              "name": "priceOracle",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "stabilityFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stabilizationFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "exchangeFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "investmentFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "principalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastDepositAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastRepaymentAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct Loan.Data",
          "name": "loan",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "securityAmount",
          "type": "uint256"
        }
      ],
      "name": "calculateLoanBySecurityAmount",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isNativeCurrency",
              "type": "bool"
            },
            {
              "internalType": "contract IPriceOracle",
              "name": "priceOracle",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "stabilityFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stabilizationFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "exchangeFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "investmentFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "principalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastDepositAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastRepaymentAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct Loan.Data",
          "name": "loan",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "checkHealth",
      "outputs": [
        {
          "internalType": "enum BaksDAO.Health",
          "name": "health",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "name": "collateralTokens",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "internalType": "contract IPriceOracle",
          "name": "priceOracle",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "stabilityFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stabilizationFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "exchangeFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "investmentFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initialLoanToValueRatio",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "marginCallLoanToValueRatio",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidationLoanToValueRatio",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "depositInNativeCurrency",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exchangeFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exchangeFund",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllowedCollateralTokens",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "internalType": "contract IPriceOracle",
              "name": "priceOracle",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "stabilityFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stabilizationFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "exchangeFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "investmentFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialLoanToValueRatio",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "marginCallLoanToValueRatio",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "liquidationLoanToValueRatio",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct CollateralToken.Data[]",
          "name": "allowedCollateralTokens",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "getLoanToValueRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "loanToValueRatio",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        }
      ],
      "name": "getLoans",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isNativeCurrency",
              "type": "bool"
            },
            {
              "internalType": "contract IPriceOracle",
              "name": "priceOracle",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "stabilityFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stabilizationFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "exchangeFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "investmentFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "principalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastDepositAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastRepaymentAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct Loan.Data[]",
          "name": "_loans",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalValueLocked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalValueLocked",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "investmentFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "investmentFund",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "liquidate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidationLoanToValueRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialLoanToValueRatio",
          "type": "uint256"
        }
      ],
      "name": "listCollateralToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "loanIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "loans",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isNativeCurrency",
          "type": "bool"
        },
        {
          "internalType": "contract IPriceOracle",
          "name": "priceOracle",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "stabilityFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stabilizationFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "exchangeFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "investmentFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "principalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastDepositAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastRepaymentAt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marginCallLoanToValueRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumPrincipalAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingGovernor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceOracle",
      "outputs": [
        {
          "internalType": "contract IPriceOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rebalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rebalancingThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "repay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "salvage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "newInitialLoanToValueRatio",
          "type": "uint256"
        }
      ],
      "name": "setInitialLoanToValueRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newLiquidationLoanToValueRatio",
          "type": "uint256"
        }
      ],
      "name": "setLiquidationLoanToValueRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMarginCallLoanToValueRatio",
          "type": "uint256"
        }
      ],
      "name": "setMarginCallLoanToValueRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMinimumPrincipalAmount",
          "type": "uint256"
        }
      ],
      "name": "setMinimumPrincipalAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newStabilizationFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newExchangeFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newInvestmentFee",
          "type": "uint256"
        }
      ],
      "name": "setPlatformFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newRebalancingThreshold",
          "type": "uint256"
        }
      ],
      "name": "setRebalancingThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newStabilityFee",
          "type": "uint256"
        }
      ],
      "name": "setStabilityFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stabilityFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stabilizationFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stablecoin",
      "outputs": [
        {
          "internalType": "contract IMintableAndBurnableERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newGovernor",
          "type": "address"
        }
      ],
      "name": "transitGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "unlistCollateralToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wrappedNativeCurrency",
      "outputs": [
        {
          "internalType": "contract IWrappedNativeCurrency",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xe29e0bba26574850e614d921b3f870f4af11836c7106edaff2e55feb1d19cfc6",
  "receipt": {
    "to": null,
    "from": "0x21309DA9AD64eA82431758B27cbD63E5d53A556c",
    "contractAddress": "0x98E0DbEe0c16fcc8468BC44014357d32Aa390fbD",
    "transactionIndex": 7,
    "gasUsed": "4159613",
    "logsBloom": "0x
    "blockHash": "0x948ca88cb46ad7f66fde0129e8f18c680ba10ee2099fe32dc7c5cb6ca4e40b88",
    "transactionHash": "0xe29e0bba26574850e614d921b3f870f4af11836c7106edaff2e55feb1d19cfc6",
    "logs": [
      {
        "transactionIndex": 7,
        "blockNumber": 13131712,
        "transactionHash": "0xe29e0bba26574850e614d921b3f870f4af11836c7106edaff2e55feb1d19cfc6",
        "address": "0x98E0DbEe0c16fcc8468BC44014357d32Aa390fbD",
        "topics": [
          "0xc606c9af1451cadeb333f6ff7b24a5540974f4e800bac274fa7fff9edc305cb1",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000021309da9ad64ea82431758b27cbd63e5d53a556c"
        ],
        "data": "0x",
        "logIndex": 34,
        "blockHash": "0x948ca88cb46ad7f66fde0129e8f18c680ba10ee2099fe32dc7c5cb6ca4e40b88"
      },
      {
        "transactionIndex": 7,
        "blockNumber": 13131712,
        "transactionHash": "0xe29e0bba26574850e614d921b3f870f4af11836c7106edaff2e55feb1d19cfc6",
        "address": "0x98E0DbEe0c16fcc8468BC44014357d32Aa390fbD",
        "topics": [
          "0x564590b81987d147246f63910a8e1ee4eb09c4d64cc75ee975a8ffedfcc2210e",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000021309da9ad64ea82431758b27cbd63e5d53a556c"
        ],
        "data": "0x",
        "logIndex": 35,
        "blockHash": "0x948ca88cb46ad7f66fde0129e8f18c680ba10ee2099fe32dc7c5cb6ca4e40b88"
      }
    ],
    "blockNumber": 13131712,
    "cumulativeGasUsed": "5850419",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x2Cf210ad0a8f31D8A7b5742931B9C3ECb663cdB8",
    "0xA11F4daE4D8Af423FD1462afB78949c3156268E1",
    "0x4d401b7d54fd335722FDb08a28095cc1Af7E796b",
    "0xb02E726015885207D534ea5EBB339e7F0cee61D7",
    "0xDD81C8c2791df0aF2D85aa4331964f4D65ACaE60",
    "0x5E9A48115E905cAcFFce91B3731C308A77c533bd",
    "0xE8C90f681552B68E2828dB24ebB64F3444163B0c"
  ],
  "solcInputHash": "5568b0a9718327e41dc7fa1463148b81",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IWrappedNativeCurrency\",\"name\":\"_wrappedNativeCurrency\",\"type\":\"address\"},{\"internalType\":\"contract IMintableAndBurnableERC20\",\"name\":\"_stablecoin\",\"type\":\"address\"},{\"internalType\":\"contract IPriceOracle\",\"name\":\"_priceOracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_liquidator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_exchangeFund\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_investmentFund\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BaksDAOBorrowBelowMinimumPrincipalAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaksDAOBorrowZeroAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"BaksDAOCollateralTokenAlreadyListed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"BaksDAOCollateralTokenNotListed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"BaksDAOCollateralTokenTooLargeDecimals\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"BaksDAOCollateralTokenZeroDecimals\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaksDAODepositZeroAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"BaksDAOInactiveLoan\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialLoanToValueRatio\",\"type\":\"uint256\"}],\"name\":\"BaksDAOInitialLoanToValueRatioTooHigh\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minimumRequiredSecurityAmount\",\"type\":\"uint256\"}],\"name\":\"BaksDAOInsufficientSecurityAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"BaksDAOLoanIsSubjectToLiquidation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"BaksDAOLoanNotSubjectToLiquidation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"BaksDAONativeCurrencyCollateralNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaksDAONativeCurrencyTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaksDAONoNeedToRebalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaksDAOPlainNativeCurrencyTransferNotAllowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stabilizationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentFee\",\"type\":\"uint256\"}],\"name\":\"BaksDAOPlatformFeesDontSumUpToOne\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaksDAORepayZeroAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shortage\",\"type\":\"uint256\"}],\"name\":\"BaksDAOStabilizationFundOutOfFunds\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"BaksDAOTokenNotAllowedAsCollateral\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"BaksDAOTokenNotAllowedToBeSalvaged\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"CallToNonContract\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"prod1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"FixedPointMathMulDivOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GovernedCantGoverItself\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GovernedGovernorZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GovernedOnlyGovernorAllowedToCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GovernedOnlyPendingGovernorAllowedToCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeERC20NoReturnData\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"principalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"initialLoanToValueRatio\",\"type\":\"uint256\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"CollateralTokenListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"CollateralTokenUnlisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"GovernanceTransited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"initialLoanToValueRatio\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newInitialLoanToValueRatio\",\"type\":\"uint256\"}],\"name\":\"InitialLoanToValueRatioUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Liquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liqudationLoanToValueRatio\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newLiquidationLoanToValueRatio\",\"type\":\"uint256\"}],\"name\":\"LiquidationLoanToValueRatioUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"marginCallLoanToValueRatio\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMarginCallLoanToValueRatio\",\"type\":\"uint256\"}],\"name\":\"MarginCallLoanToValueRatioUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minimumPrincipalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMinimumPrincipalAmount\",\"type\":\"uint256\"}],\"name\":\"MinimumPrincipalAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"PendingGovernanceTransition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stabilizationFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newStabilizationFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"exchangeFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newExchangeFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"investmentFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newInvestmentFee\",\"type\":\"uint256\"}],\"name\":\"PlatformFeesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"Rebalance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rebalancingThreshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRebalancingThreshold\",\"type\":\"uint256\"}],\"name\":\"RebalancingThresholdUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Repaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"principalAmount\",\"type\":\"uint256\"}],\"name\":\"Repay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stabilityFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newStabilityFee\",\"type\":\"uint256\"}],\"name\":\"StabilityFeeUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"borrow\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isNativeCurrency\",\"type\":\"bool\"},{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stabilityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stabilizationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastDepositAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRepaymentAt\",\"type\":\"uint256\"}],\"internalType\":\"struct Loan.Data\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"borrowInNativeCurrency\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isNativeCurrency\",\"type\":\"bool\"},{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stabilityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stabilizationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastDepositAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRepaymentAt\",\"type\":\"uint256\"}],\"internalType\":\"struct Loan.Data\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"calculateLoanByCollateralAmount\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isNativeCurrency\",\"type\":\"bool\"},{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stabilityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stabilizationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastDepositAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRepaymentAt\",\"type\":\"uint256\"}],\"internalType\":\"struct Loan.Data\",\"name\":\"loan\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"principalAmount\",\"type\":\"uint256\"}],\"name\":\"calculateLoanByPrincipalAmount\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isNativeCurrency\",\"type\":\"bool\"},{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stabilityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stabilizationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastDepositAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRepaymentAt\",\"type\":\"uint256\"}],\"internalType\":\"struct Loan.Data\",\"name\":\"loan\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"securityAmount\",\"type\":\"uint256\"}],\"name\":\"calculateLoanBySecurityAmount\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isNativeCurrency\",\"type\":\"bool\"},{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stabilityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stabilizationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastDepositAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRepaymentAt\",\"type\":\"uint256\"}],\"internalType\":\"struct Loan.Data\",\"name\":\"loan\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"checkHealth\",\"outputs\":[{\"internalType\":\"enum BaksDAO.Health\",\"name\":\"health\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"collateralTokens\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stabilityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stabilizationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialLoanToValueRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"marginCallLoanToValueRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationLoanToValueRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"depositInNativeCurrency\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllowedCollateralTokens\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stabilityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stabilizationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialLoanToValueRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"marginCallLoanToValueRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationLoanToValueRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct CollateralToken.Data[]\",\"name\":\"allowedCollateralTokens\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"getLoanToValueRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"loanToValueRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"getLoans\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isNativeCurrency\",\"type\":\"bool\"},{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stabilityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stabilizationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastDepositAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRepaymentAt\",\"type\":\"uint256\"}],\"internalType\":\"struct Loan.Data[]\",\"name\":\"_loans\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalValueLocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalValueLocked\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"investmentFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"investmentFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidationLoanToValueRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialLoanToValueRatio\",\"type\":\"uint256\"}],\"name\":\"listCollateralToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loanIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isNativeCurrency\",\"type\":\"bool\"},{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stabilityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stabilizationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastDepositAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRepaymentAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marginCallLoanToValueRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumPrincipalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingGovernor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceOracle\",\"outputs\":[{\"internalType\":\"contract IPriceOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalancingThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"salvage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newInitialLoanToValueRatio\",\"type\":\"uint256\"}],\"name\":\"setInitialLoanToValueRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newLiquidationLoanToValueRatio\",\"type\":\"uint256\"}],\"name\":\"setLiquidationLoanToValueRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMarginCallLoanToValueRatio\",\"type\":\"uint256\"}],\"name\":\"setMarginCallLoanToValueRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMinimumPrincipalAmount\",\"type\":\"uint256\"}],\"name\":\"setMinimumPrincipalAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newStabilizationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newExchangeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newInvestmentFee\",\"type\":\"uint256\"}],\"name\":\"setPlatformFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newRebalancingThreshold\",\"type\":\"uint256\"}],\"name\":\"setRebalancingThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newStabilityFee\",\"type\":\"uint256\"}],\"name\":\"setStabilityFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stabilityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stabilizationFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stablecoin\",\"outputs\":[{\"internalType\":\"contract IMintableAndBurnableERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"transitGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"unlistCollateralToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrappedNativeCurrency\",\"outputs\":[{\"internalType\":\"contract IWrappedNativeCurrency\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Andrey Gulitsky\",\"errors\":{\"BaksDAOBorrowBelowMinimumPrincipalAmount()\":[{\"details\":\"Thrown when trying to borrow below minimum principal amount.\"}],\"BaksDAOBorrowZeroAmount()\":[{\"details\":\"Thrown when borrowing a zero amount of stablecoin.\"}],\"BaksDAOCollateralTokenAlreadyListed(address)\":[{\"details\":\"Thrown when trying to list collateral token that's already listed.\",\"params\":{\"token\":\"The address of the collateral token contract.\"}}],\"BaksDAOCollateralTokenNotListed(address)\":[{\"details\":\"Thrown when trying to unlist collateral token that's not listed.\",\"params\":{\"token\":\"The address of the collateral token contract.\"}}],\"BaksDAOCollateralTokenTooLargeDecimals(address,uint8)\":[{\"details\":\"Thrown when trying to list collateral token that has too large decimals.\",\"params\":{\"token\":\"The address of the collateral token contract.\"}}],\"BaksDAOCollateralTokenZeroDecimals(address)\":[{\"details\":\"Thrown when trying to list collateral token that has zero decimals.\",\"params\":{\"token\":\"The address of the collateral token contract.\"}}],\"BaksDAODepositZeroAmount()\":[{\"details\":\"Thrown when depositing a zero amount of collateral token.\"}],\"BaksDAOInactiveLoan(uint256)\":[{\"details\":\"Thrown when trying to interact with inactive loan with `id` id.\",\"params\":{\"id\":\"The loan id.\"}}],\"BaksDAOInitialLoanToValueRatioTooHigh(address,uint256)\":[{\"details\":\"Thrown when trying to set initial loan-to-value ratio that higher than margin call or liquidation ones.\",\"params\":{\"initialLoanToValueRatio\":\"The initial loan-to-value ratio that was tried to set.\",\"token\":\"The address of the collateral token contract.\"}}],\"BaksDAOLoanIsSubjectToLiquidation(uint256)\":[{\"details\":\"Thrown when trying to interact with loan with `id` id that is subject to liquidation.\",\"params\":{\"id\":\"The loan id.\"}}],\"BaksDAOLoanNotSubjectToLiquidation(uint256)\":[{\"details\":\"Thrown when trying to liquidate healthy loan with `id` id.\",\"params\":{\"id\":\"The loan id.\"}}],\"BaksDAONativeCurrencyCollateralNotAllowed(uint256)\":[{\"details\":\"Thrown when trying to deposit native currency collateral to the non-wrapped native currency token loan with `id` id.\",\"params\":{\"id\":\"The loan id.\"}}],\"BaksDAONoNeedToRebalance()\":[{\"details\":\"Thrown when there's no need to rebalance the platform.\"}],\"BaksDAOPlatformFeesDontSumUpToOne(uint256,uint256,uint256)\":[{\"details\":\"Thrown when trying to set platform fees that don't sum up to one.\",\"params\":{\"exchangeFee\":\"The stabilization fee that was tried to set.\",\"investmentFee\":\"The stabilization fee that was tried to set.\",\"stabilizationFee\":\"The stabilization fee that was tried to set.\"}}],\"BaksDAORepayZeroAmount()\":[{\"details\":\"Thrown when repaying a zero amount of stablecoin.\"}],\"BaksDAOStabilizationFundOutOfFunds(uint256)\":[{\"details\":\"Thrown when trying to rebalance the platform and there is a shortage of funds to burn.\",\"params\":{\"shortage\":\"Shoratge of funds to burn.\"}}],\"BaksDAOTokenNotAllowedAsCollateral(address)\":[{\"details\":\"Thrown when interacting with a token that's not allowed as collateral.\",\"params\":{\"token\":\"The address of the collateral token contract.\"}}],\"BaksDAOTokenNotAllowedToBeSalvaged(address)\":[{\"details\":\"Thrown when trying to salvage one of allowed collateral tokens or stablecoin.\",\"params\":{\"token\":\"The address of the token contract.\"}}]},\"kind\":\"dev\",\"methods\":{\"borrow(address,uint256)\":{\"details\":\"The caller must have allowed this contract to spend a sufficient amount of collateral tokens to cover initial loan-to-value ratio.\",\"params\":{\"amount\":\"The amount of stablecoin to borrow and issue.\",\"collateralToken\":\"The address of the collateral token contract.\"}},\"deposit(uint256,uint256)\":{\"details\":\"The caller must have allowed this contract to spend `amount` of collateral tokens.\",\"params\":{\"amount\":\"The amount of collateral token to deposit.\",\"loanId\":\"The loan id.\"}},\"repay(uint256,uint256)\":{\"params\":{\"amount\":\"The amount of stablecoin to repay.\",\"loanId\":\"The loan id.\"}}},\"title\":\"Core smart contract of BaksDAO platform\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"borrow(address,uint256)\":{\"notice\":\"Increases loan's principal on `collateralToken` collateral token and mints `amount` of stablecoin.\"},\"borrowInNativeCurrency(uint256)\":{\"notice\":\"Increases loan's principal on wrapped native currency token and mints stablecoin.\"},\"deposit(uint256,uint256)\":{\"notice\":\"Deposits `amount` of collateral token to loan with `id` id.\"},\"depositInNativeCurrency(uint256)\":{\"notice\":\"Deposits wrapped native currency token to loan with `id` id.\"},\"repay(uint256,uint256)\":{\"notice\":\"Decreases principal of loan with `id` id by `amount` of stablecoin.\"}},\"notice\":\"You should use this contract to interact with the BaksDAO platform.Only this contract can issue stablecoins.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BaksDAO.sol\":\"BaksDAO\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/BaksDAO.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.9;\\n\\nimport \\\"./interfaces/IWrappedNativeCurrency.sol\\\";\\nimport \\\"./libraries/AmountNormalization.sol\\\";\\nimport \\\"./libraries/CollateralToken.sol\\\";\\nimport \\\"./libraries/EnumerableAddressSet.sol\\\";\\nimport \\\"./libraries/FixedPointMath.sol\\\";\\nimport \\\"./libraries/Loan.sol\\\";\\nimport \\\"./libraries/Math.sol\\\";\\nimport \\\"./libraries/ReentrancyGuard.sol\\\";\\nimport \\\"./libraries/SafeERC20.sol\\\";\\nimport {Governed} from \\\"./Governance.sol\\\";\\nimport {IERC20, IMintableAndBurnableERC20} from \\\"./interfaces/IERC20.sol\\\";\\nimport {IPriceOracle} from \\\"./interfaces/IPriceOracle.sol\\\";\\n\\n/// @dev Thrown when trying to list collateral token that has zero decimals.\\n/// @param token The address of the collateral token contract.\\nerror BaksDAOCollateralTokenZeroDecimals(IERC20 token);\\n\\n/// @dev Thrown when trying to list collateral token that has too large decimals.\\n/// @param token The address of the collateral token contract.\\nerror BaksDAOCollateralTokenTooLargeDecimals(IERC20 token, uint8 decimals);\\n\\n/// @dev Thrown when trying to list collateral token that's already listed.\\n/// @param token The address of the collateral token contract.\\nerror BaksDAOCollateralTokenAlreadyListed(IERC20 token);\\n\\n/// @dev Thrown when trying to unlist collateral token that's not listed.\\n/// @param token The address of the collateral token contract.\\nerror BaksDAOCollateralTokenNotListed(IERC20 token);\\n\\n/// @dev Thrown when interacting with a token that's not allowed as collateral.\\n/// @param token The address of the collateral token contract.\\nerror BaksDAOTokenNotAllowedAsCollateral(IERC20 token);\\n\\n/// @dev Thrown when trying to set initial loan-to-value ratio that higher than margin call or liquidation ones.\\n/// @param token The address of the collateral token contract.\\n/// @param initialLoanToValueRatio The initial loan-to-value ratio that was tried to set.\\nerror BaksDAOInitialLoanToValueRatioTooHigh(IERC20 token, uint256 initialLoanToValueRatio);\\n\\n/// @dev Thrown when trying to set platform fees that don't sum up to one.\\n/// @param stabilizationFee The stabilization fee that was tried to set.\\n/// @param exchangeFee The stabilization fee that was tried to set.\\n/// @param investmentFee The stabilization fee that was tried to set.\\nerror BaksDAOPlatformFeesDontSumUpToOne(uint256 stabilizationFee, uint256 exchangeFee, uint256 investmentFee);\\n\\n/// @dev Thrown when trying to interact with inactive loan with `id` id.\\n/// @param id The loan id.\\nerror BaksDAOInactiveLoan(uint256 id);\\n\\n/// @dev Thrown when trying to liquidate healthy loan with `id` id.\\n/// @param id The loan id.\\nerror BaksDAOLoanNotSubjectToLiquidation(uint256 id);\\n/// @dev Thrown when trying to interact with loan with `id` id that is subject to liquidation.\\n/// @param id The loan id.\\nerror BaksDAOLoanIsSubjectToLiquidation(uint256 id);\\n\\n/// @dev Thrown when borrowing a zero amount of stablecoin.\\nerror BaksDAOBorrowZeroAmount();\\n\\n/// @dev Thrown when trying to borrow below minimum principal amount.\\nerror BaksDAOBorrowBelowMinimumPrincipalAmount();\\n\\n/// @dev Thrown when depositing a zero amount of collateral token.\\nerror BaksDAODepositZeroAmount();\\n\\n/// @dev Thrown when repaying a zero amount of stablecoin.\\nerror BaksDAORepayZeroAmount();\\n\\n/// @dev Thrown when there's no need to rebalance the platform.\\nerror BaksDAONoNeedToRebalance();\\n\\n/// @dev Thrown when trying to rebalance the platform and there is a shortage of funds to burn.\\n/// @param shortage Shoratge of funds to burn.\\nerror BaksDAOStabilizationFundOutOfFunds(uint256 shortage);\\n\\n/// @dev Thrown when trying to salvage one of allowed collateral tokens or stablecoin.\\n/// @param token The address of the token contract.\\nerror BaksDAOTokenNotAllowedToBeSalvaged(IERC20 token);\\n\\n/// @dev Thrown when trying to deposit native currency collateral to the non-wrapped native currency token loan\\n/// with `id` id.\\n/// @param id The loan id.\\nerror BaksDAONativeCurrencyCollateralNotAllowed(uint256 id);\\n\\nerror BaksDAONativeCurrencyTransferFailed();\\n\\nerror BaksDAOPlainNativeCurrencyTransferNotAllowed();\\n\\nerror BaksDAOInsufficientSecurityAmount(uint256 minimumRequiredSecurityAmount);\\n\\n/// @title Core smart contract of BaksDAO platform\\n/// @author Andrey Gulitsky\\n/// @notice You should use this contract to interact with the BaksDAO platform.\\n/// @notice Only this contract can issue stablecoins.\\ncontract BaksDAO is Governed, ReentrancyGuard {\\n    using AmountNormalization for IERC20;\\n    using AmountNormalization for IWrappedNativeCurrency;\\n    using CollateralToken for CollateralToken.Data;\\n    using EnumerableAddressSet for EnumerableAddressSet.Set;\\n    using FixedPointMath for uint256;\\n    using Loan for Loan.Data;\\n    using SafeERC20 for IWrappedNativeCurrency;\\n    using SafeERC20 for IERC20;\\n    using SafeERC20 for IMintableAndBurnableERC20;\\n\\n    enum Health {\\n        Ok,\\n        MarginCall,\\n        Liquidation\\n    }\\n\\n    uint256 internal constant ONE = 100e16;\\n    uint8 internal constant DECIMALS = 18;\\n\\n    IWrappedNativeCurrency public immutable wrappedNativeCurrency;\\n    IMintableAndBurnableERC20 public immutable stablecoin;\\n    IPriceOracle public immutable priceOracle;\\n\\n    address public immutable operator;\\n    address public immutable liquidator;\\n    address public immutable exchangeFund;\\n    address public immutable investmentFund;\\n\\n    uint256 public minimumPrincipalAmount = 50e18; // 50 BAKS\\n    uint256 public stabilityFee = 3e16; // 3 %\\n    uint256 public stabilizationFee = 85e16; // 85 %\\n    uint256 public exchangeFee = 15e16; // 15 %\\n    uint256 public investmentFee = 0;\\n    uint256 public marginCallLoanToValueRatio = 75e16; // 75 %\\n    uint256 public liquidationLoanToValueRatio = 83e16; // 83 %\\n    uint256 public rebalancingThreshold = 1e16; // 1 %\\n\\n    Loan.Data[] public loans;\\n    mapping(address => uint256[]) public loanIds;\\n\\n    mapping(IERC20 => CollateralToken.Data) public collateralTokens;\\n    EnumerableAddressSet.Set internal collateralTokensSet;\\n\\n    event CollateralTokenListed(IERC20 indexed token);\\n    event CollateralTokenUnlisted(IERC20 indexed token);\\n\\n    event MinimumPrincipalAmountUpdated(uint256 minimumPrincipalAmount, uint256 newMinimumPrincipalAmount);\\n    event StabilityFeeUpdated(uint256 stabilityFee, uint256 newStabilityFee);\\n    event RebalancingThresholdUpdated(uint256 rebalancingThreshold, uint256 newRebalancingThreshold);\\n    event PlatformFeesUpdated(\\n        uint256 stabilizationFee,\\n        uint256 newStabilizationFee,\\n        uint256 exchangeFee,\\n        uint256 newExchangeFee,\\n        uint256 investmentFee,\\n        uint256 newInvestmentFee\\n    );\\n    event MarginCallLoanToValueRatioUpdated(uint256 marginCallLoanToValueRatio, uint256 newMarginCallLoanToValueRatio);\\n    event LiquidationLoanToValueRatioUpdated(\\n        uint256 liqudationLoanToValueRatio,\\n        uint256 newLiquidationLoanToValueRatio\\n    );\\n    event InitialLoanToValueRatioUpdated(\\n        IERC20 indexed token,\\n        uint256 initialLoanToValueRatio,\\n        uint256 newInitialLoanToValueRatio\\n    );\\n\\n    event Borrow(\\n        uint256 indexed id,\\n        address indexed borrower,\\n        IERC20 indexed token,\\n        uint256 principalAmount,\\n        uint256 collateralAmount,\\n        uint256 initialLoanToValueRatio\\n    );\\n    event Deposit(uint256 indexed id, uint256 collateralAmount);\\n    event Repay(uint256 indexed id, uint256 principalAmount);\\n    event Repaid(uint256 indexed id);\\n\\n    event Liquidated(uint256 indexed id);\\n\\n    event Rebalance(int256 delta);\\n\\n    modifier tokenAllowedAsCollateral(IERC20 token) {\\n        if (!collateralTokensSet.contains(address(token))) {\\n            revert BaksDAOTokenNotAllowedAsCollateral(token);\\n        }\\n        _;\\n    }\\n\\n    modifier onActiveLoan(uint256 id) {\\n        if (id >= loans.length || !loans[id].isActive) {\\n            revert BaksDAOInactiveLoan(id);\\n        }\\n        _;\\n    }\\n\\n    modifier notOnSubjectToLiquidation(uint256 loanId) {\\n        if (checkHealth(loanId) == Health.Liquidation) {\\n            revert BaksDAOLoanIsSubjectToLiquidation(loanId);\\n        }\\n        _;\\n    }\\n\\n    modifier onSubjectToLiquidation(uint256 loanId) {\\n        if (checkHealth(loanId) != Health.Liquidation) {\\n            revert BaksDAOLoanNotSubjectToLiquidation(loanId);\\n        }\\n        _;\\n    }\\n\\n    constructor(\\n        IWrappedNativeCurrency _wrappedNativeCurrency,\\n        IMintableAndBurnableERC20 _stablecoin,\\n        IPriceOracle _priceOracle,\\n        address _operator,\\n        address _liquidator,\\n        address _exchangeFund,\\n        address _investmentFund\\n    ) {\\n        wrappedNativeCurrency = _wrappedNativeCurrency;\\n        stablecoin = _stablecoin;\\n        priceOracle = _priceOracle;\\n        operator = _operator;\\n        liquidator = _liquidator;\\n        exchangeFund = _exchangeFund;\\n        investmentFund = _investmentFund;\\n    }\\n\\n    receive() external payable {\\n        if (msg.sender != address(wrappedNativeCurrency)) {\\n            revert BaksDAOPlainNativeCurrencyTransferNotAllowed();\\n        }\\n    }\\n\\n    /// @notice Increases loan's principal on `collateralToken` collateral token and mints `amount` of stablecoin.\\n    /// @dev The caller must have allowed this contract to spend a sufficient amount of collateral tokens to cover\\n    /// initial loan-to-value ratio.\\n    /// @param collateralToken The address of the collateral token contract.\\n    /// @param amount The amount of stablecoin to borrow and issue.\\n    function borrow(IERC20 collateralToken, uint256 amount)\\n        external\\n        nonReentrant\\n        tokenAllowedAsCollateral(collateralToken)\\n        returns (Loan.Data memory)\\n    {\\n        Loan.Data memory loan = calculateLoanByPrincipalAmount(collateralToken, amount);\\n\\n        collateralToken.safeTransferFrom(msg.sender, operator, collateralToken.denormalizeAmount(loan.stabilityFee));\\n        collateralToken.safeTransferFrom(\\n            msg.sender,\\n            address(this),\\n            collateralToken.denormalizeAmount(loan.collateralAmount)\\n        );\\n\\n        return _createLoan(loan);\\n    }\\n\\n    /// @notice Increases loan's principal on wrapped native currency token and mints stablecoin.\\n    function borrowInNativeCurrency(uint256 amount) external payable nonReentrant returns (Loan.Data memory) {\\n        Loan.Data memory loan = calculateLoanByPrincipalAmount(wrappedNativeCurrency, amount);\\n        loan.isNativeCurrency = true;\\n\\n        uint256 securityAmount = loan.collateralAmount + loan.stabilityFee;\\n        if (msg.value < securityAmount) {\\n            revert BaksDAOInsufficientSecurityAmount(securityAmount);\\n        }\\n\\n        wrappedNativeCurrency.deposit{value: securityAmount}();\\n        wrappedNativeCurrency.safeTransfer(operator, wrappedNativeCurrency.denormalizeAmount(loan.stabilityFee));\\n\\n        uint256 change;\\n        unchecked {\\n            change = msg.value - securityAmount;\\n        }\\n        if (change > 0) {\\n            (bool success, ) = msg.sender.call{value: change}(\\\"\\\");\\n            if (!success) {\\n                revert BaksDAONativeCurrencyTransferFailed();\\n            }\\n        }\\n\\n        return _createLoan(loan);\\n    }\\n\\n    /// @notice Deposits `amount` of collateral token to loan with `id` id.\\n    /// @dev The caller must have allowed this contract to spend `amount` of collateral tokens.\\n    /// @param loanId The loan id.\\n    /// @param amount The amount of collateral token to deposit.\\n    function deposit(uint256 loanId, uint256 amount)\\n        external\\n        nonReentrant\\n        onActiveLoan(loanId)\\n        notOnSubjectToLiquidation(loanId)\\n    {\\n        loans[loanId].collateralToken.safeTransferFrom(msg.sender, address(this), amount);\\n        _deposit(loanId, amount);\\n    }\\n\\n    /// @notice Deposits wrapped native currency token to loan with `id` id.\\n    function depositInNativeCurrency(uint256 loanId)\\n        external\\n        payable\\n        nonReentrant\\n        onActiveLoan(loanId)\\n        notOnSubjectToLiquidation(loanId)\\n    {\\n        if (loans[loanId].collateralToken != wrappedNativeCurrency) {\\n            revert BaksDAONativeCurrencyCollateralNotAllowed(loanId);\\n        }\\n        wrappedNativeCurrency.deposit{value: msg.value}();\\n        _deposit(loanId, msg.value);\\n    }\\n\\n    /// @notice Decreases principal of loan with `id` id by `amount` of stablecoin.\\n    /// @param loanId The loan id.\\n    /// @param amount The amount of stablecoin to repay.\\n    function repay(uint256 loanId, uint256 amount)\\n        external\\n        nonReentrant\\n        onActiveLoan(loanId)\\n        notOnSubjectToLiquidation(loanId)\\n    {\\n        if (amount == 0) {\\n            revert BaksDAORepayZeroAmount();\\n        }\\n        Loan.Data storage loan = loans[loanId];\\n        loan.principalAmount -= amount;\\n\\n        stablecoin.burn(msg.sender, amount);\\n        loan.lastRepaymentAt = block.timestamp;\\n        if (loan.principalAmount > 0) {\\n            emit Repay(loanId, amount);\\n        } else {\\n            uint256 denormalizedCollateralAmount = loan.collateralToken.denormalizeAmount(loan.collateralAmount);\\n            collateralTokens[loan.collateralToken].collateralAmount -= loan.collateralAmount;\\n\\n            loan.collateralAmount = 0;\\n\\n            stablecoin.burn(address(this), loan.stabilizationFee);\\n\\n            loan.isActive = false;\\n            emit Repaid(loanId);\\n\\n            if (!loan.isNativeCurrency) {\\n                loan.collateralToken.safeTransfer(loan.borrower, denormalizedCollateralAmount);\\n            } else {\\n                wrappedNativeCurrency.withdraw(denormalizedCollateralAmount);\\n                (bool success, ) = msg.sender.call{value: denormalizedCollateralAmount}(\\\"\\\");\\n                if (!success) {\\n                    revert BaksDAONativeCurrencyTransferFailed();\\n                }\\n            }\\n        }\\n    }\\n\\n    function liquidate(uint256 loanId) external nonReentrant onActiveLoan(loanId) onSubjectToLiquidation(loanId) {\\n        Loan.Data storage loan = loans[loanId];\\n\\n        collateralTokens[loan.collateralToken].collateralAmount -= loan.collateralAmount;\\n        loan.collateralToken.safeTransfer(liquidator, loan.collateralToken.denormalizeAmount(loan.collateralAmount));\\n\\n        uint256 collateralValue = loan.getCollateralValue();\\n        stablecoin.burn(liquidator, loan.principalAmount);\\n        stablecoin.burn(address(this), collateralValue - loan.principalAmount);\\n\\n        loan.isActive = false;\\n        emit Liquidated(loanId);\\n    }\\n\\n    function rebalance() external nonReentrant {\\n        uint256 totalValueLocked = getTotalValueLocked();\\n        uint256 totalSupply = stablecoin.totalSupply();\\n\\n        int256 delta = int256(totalSupply) - int256(totalValueLocked);\\n        uint256 absoluteDelta = Math.abs(delta);\\n        uint256 p = absoluteDelta.div(totalSupply);\\n        if (p < rebalancingThreshold) {\\n            revert BaksDAONoNeedToRebalance();\\n        }\\n\\n        if (delta > 0) {\\n            try stablecoin.burn(address(this), absoluteDelta) {} catch {\\n                uint256 balance = stablecoin.balanceOf(address(this));\\n                revert BaksDAOStabilizationFundOutOfFunds(absoluteDelta - balance);\\n            }\\n        } else {\\n            stablecoin.mint(address(this), absoluteDelta);\\n        }\\n\\n        emit Rebalance(delta);\\n    }\\n\\n    function listCollateralToken(IERC20 token, uint256 initialLoanToValueRatio) external onlyGovernor {\\n        if (collateralTokensSet.contains(address(token))) {\\n            revert BaksDAOCollateralTokenAlreadyListed(token);\\n        }\\n\\n        if (initialLoanToValueRatio >= marginCallLoanToValueRatio) {\\n            revert BaksDAOInitialLoanToValueRatioTooHigh(token, initialLoanToValueRatio);\\n        }\\n\\n        uint8 decimals = token.decimals();\\n        if (decimals == 0) {\\n            revert BaksDAOCollateralTokenZeroDecimals(token);\\n        }\\n        if (decimals > DECIMALS) {\\n            revert BaksDAOCollateralTokenTooLargeDecimals(token, decimals);\\n        }\\n\\n        if (collateralTokensSet.add(address(token))) {\\n            collateralTokens[token] = CollateralToken.Data({\\n                collateralToken: token,\\n                priceOracle: priceOracle,\\n                stabilityFee: stabilityFee,\\n                stabilizationFee: stabilizationFee,\\n                exchangeFee: exchangeFee,\\n                investmentFee: investmentFee,\\n                initialLoanToValueRatio: initialLoanToValueRatio,\\n                marginCallLoanToValueRatio: marginCallLoanToValueRatio,\\n                liquidationLoanToValueRatio: liquidationLoanToValueRatio,\\n                collateralAmount: 0\\n            });\\n\\n            emit CollateralTokenListed(token);\\n            emit InitialLoanToValueRatioUpdated(token, 0, initialLoanToValueRatio);\\n        }\\n    }\\n\\n    function unlistCollateralToken(IERC20 token) external onlyGovernor {\\n        if (!collateralTokensSet.contains(address(token))) {\\n            revert BaksDAOCollateralTokenNotListed(token);\\n        }\\n\\n        if (collateralTokensSet.remove(address(token))) {\\n            delete collateralTokens[token];\\n            emit CollateralTokenUnlisted(token);\\n        }\\n    }\\n\\n    function setMinimumPrincipalAmount(uint256 newMinimumPrincipalAmount) external onlyGovernor {\\n        emit StabilityFeeUpdated(minimumPrincipalAmount, newMinimumPrincipalAmount);\\n        minimumPrincipalAmount = newMinimumPrincipalAmount;\\n    }\\n\\n    function setStabilityFee(uint256 newStabilityFee) external onlyGovernor {\\n        emit StabilityFeeUpdated(stabilityFee, newStabilityFee);\\n        stabilityFee = newStabilityFee;\\n    }\\n\\n    function setPlatformFees(\\n        uint256 newStabilizationFee,\\n        uint256 newExchangeFee,\\n        uint256 newInvestmentFee\\n    ) external onlyGovernor {\\n        if (newStabilizationFee + newExchangeFee + newInvestmentFee != ONE) {\\n            revert BaksDAOPlatformFeesDontSumUpToOne(newStabilizationFee, newExchangeFee, newInvestmentFee);\\n        }\\n        emit PlatformFeesUpdated(\\n            stabilizationFee,\\n            newStabilizationFee,\\n            exchangeFee,\\n            newExchangeFee,\\n            investmentFee,\\n            newInvestmentFee\\n        );\\n        stabilizationFee = newStabilizationFee;\\n        exchangeFee = newExchangeFee;\\n        investmentFee = newInvestmentFee;\\n    }\\n\\n    function setMarginCallLoanToValueRatio(uint256 newMarginCallLoanToValueRatio) external onlyGovernor {\\n        emit MarginCallLoanToValueRatioUpdated(marginCallLoanToValueRatio, newMarginCallLoanToValueRatio);\\n        marginCallLoanToValueRatio = newMarginCallLoanToValueRatio;\\n    }\\n\\n    function setLiquidationLoanToValueRatio(uint256 newLiquidationLoanToValueRatio) external onlyGovernor {\\n        emit LiquidationLoanToValueRatioUpdated(liquidationLoanToValueRatio, newLiquidationLoanToValueRatio);\\n        liquidationLoanToValueRatio = newLiquidationLoanToValueRatio;\\n    }\\n\\n    function setRebalancingThreshold(uint256 newRebalancingThreshold) external onlyGovernor {\\n        emit RebalancingThresholdUpdated(rebalancingThreshold, newRebalancingThreshold);\\n        rebalancingThreshold = newRebalancingThreshold;\\n    }\\n\\n    function setInitialLoanToValueRatio(IERC20 token, uint256 newInitialLoanToValueRatio) external onlyGovernor {\\n        if (!collateralTokensSet.contains(address(token))) {\\n            revert BaksDAOCollateralTokenNotListed(token);\\n        }\\n\\n        CollateralToken.Data storage collateralToken = collateralTokens[token];\\n        if (newInitialLoanToValueRatio >= collateralToken.marginCallLoanToValueRatio) {\\n            revert BaksDAOInitialLoanToValueRatioTooHigh(token, newInitialLoanToValueRatio);\\n        }\\n\\n        uint256 initialLoanToValueRatio = collateralToken.initialLoanToValueRatio;\\n        collateralToken.initialLoanToValueRatio = newInitialLoanToValueRatio;\\n\\n        emit InitialLoanToValueRatioUpdated(token, initialLoanToValueRatio, newInitialLoanToValueRatio);\\n    }\\n\\n    function salvage(IERC20 token) external onlyGovernor {\\n        address tokenAddress = address(token);\\n        if (tokenAddress == address(stablecoin) || collateralTokensSet.contains(tokenAddress)) {\\n            revert BaksDAOTokenNotAllowedToBeSalvaged(token);\\n        }\\n        token.safeTransfer(operator, token.balanceOf(address(this)));\\n    }\\n\\n    function getLoans(address borrower) external view returns (Loan.Data[] memory _loans) {\\n        uint256 length = loanIds[borrower].length;\\n        _loans = new Loan.Data[](length);\\n\\n        for (uint256 i = 0; i < length; i++) {\\n            _loans[i] = loans[loanIds[borrower][i]];\\n        }\\n    }\\n\\n    function getAllowedCollateralTokens()\\n        external\\n        view\\n        returns (CollateralToken.Data[] memory allowedCollateralTokens)\\n    {\\n        uint256 length = collateralTokensSet.elements.length;\\n        allowedCollateralTokens = new CollateralToken.Data[](length);\\n\\n        for (uint256 i = 0; i < length; i++) {\\n            allowedCollateralTokens[i] = collateralTokens[IERC20(collateralTokensSet.elements[i])];\\n        }\\n    }\\n\\n    function calculateLoanByPrincipalAmount(IERC20 collateralToken, uint256 principalAmount)\\n        public\\n        view\\n        returns (Loan.Data memory loan)\\n    {\\n        loan = collateralTokens[collateralToken].calculateLoanByPrincipalAmount(principalAmount);\\n    }\\n\\n    function calculateLoanByCollateralAmount(IERC20 collateralToken, uint256 collateralAmount)\\n        public\\n        view\\n        returns (Loan.Data memory loan)\\n    {\\n        loan = collateralTokens[collateralToken].calculateLoanByCollateralAmount(collateralAmount);\\n    }\\n\\n    function calculateLoanBySecurityAmount(IERC20 collateralToken, uint256 securityAmount)\\n        public\\n        view\\n        returns (Loan.Data memory loan)\\n    {\\n        loan = collateralTokens[collateralToken].calculateLoanBySecurityAmount(securityAmount);\\n    }\\n\\n    function getTotalValueLocked() public view returns (uint256 totalValueLocked) {\\n        for (uint256 i = 0; i < collateralTokensSet.elements.length; i++) {\\n            totalValueLocked += collateralTokens[IERC20(collateralTokensSet.elements[i])].getCollateralValue();\\n        }\\n    }\\n\\n    function getLoanToValueRatio(uint256 loanId) public view returns (uint256 loanToValueRatio) {\\n        Loan.Data memory loan = loans[loanId];\\n        loanToValueRatio = loan.calculateLoanToValueRatio();\\n    }\\n\\n    function checkHealth(uint256 loanId) public view returns (Health health) {\\n        uint256 loanToValueRatio = getLoanToValueRatio(loanId);\\n        health = loanToValueRatio >= liquidationLoanToValueRatio\\n            ? Health.Liquidation\\n            : loanToValueRatio >= marginCallLoanToValueRatio\\n            ? Health.MarginCall\\n            : Health.Ok;\\n    }\\n\\n    function _createLoan(Loan.Data memory loan) internal returns (Loan.Data memory) {\\n        if (loan.principalAmount == 0) {\\n            revert BaksDAOBorrowZeroAmount();\\n        }\\n        if (loan.principalAmount < minimumPrincipalAmount) {\\n            revert BaksDAOBorrowBelowMinimumPrincipalAmount();\\n        }\\n\\n        stablecoin.mint(address(this), loan.stabilizationFee);\\n        stablecoin.mint(exchangeFund, loan.exchangeFee);\\n        stablecoin.mint(investmentFund, loan.investmentFee);\\n        stablecoin.mint(loan.borrower, loan.principalAmount);\\n\\n        uint256 id = loans.length;\\n        loan.id = id;\\n\\n        loans.push(loan);\\n        loanIds[loan.borrower].push(id);\\n\\n        collateralTokens[loan.collateralToken].collateralAmount += loan.collateralAmount;\\n\\n        emit Borrow(\\n            id,\\n            loan.borrower,\\n            loan.collateralToken,\\n            loan.principalAmount,\\n            loan.collateralAmount,\\n            collateralTokens[loan.collateralToken].initialLoanToValueRatio\\n        );\\n\\n        return loan;\\n    }\\n\\n    function _deposit(uint256 loanId, uint256 amount) internal {\\n        if (amount == 0) {\\n            revert BaksDAODepositZeroAmount();\\n        }\\n\\n        Loan.Data storage loan = loans[loanId];\\n\\n        uint256 normalizedCollateralAmount = loan.collateralToken.normalizeAmount(amount);\\n        loan.collateralAmount += normalizedCollateralAmount;\\n        loan.lastDepositAt = block.timestamp;\\n        collateralTokens[loan.collateralToken].collateralAmount += normalizedCollateralAmount;\\n\\n        emit Deposit(loanId, normalizedCollateralAmount);\\n    }\\n}\\n\",\"keccak256\":\"0x0ae41925fb5e654a4c3300d46ed9e5e06ab4f8549ac032cba57da2d3f52757cf\",\"license\":\"BUSL-1.1\"},\"contracts/Governance.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.9;\\n\\nerror GovernedOnlyGovernorAllowedToCall();\\nerror GovernedOnlyPendingGovernorAllowedToCall();\\nerror GovernedGovernorZeroAddress();\\nerror GovernedCantGoverItself();\\n\\nabstract contract Governed {\\n    address public governor;\\n    address public pendingGovernor;\\n\\n    event PendingGovernanceTransition(address indexed governor, address indexed newGovernor);\\n    event GovernanceTransited(address indexed governor, address indexed newGovernor);\\n\\n    modifier onlyGovernor() {\\n        if (msg.sender != governor) {\\n            revert GovernedOnlyGovernorAllowedToCall();\\n        }\\n        _;\\n    }\\n\\n    constructor() {\\n        governor = msg.sender;\\n        emit PendingGovernanceTransition(address(0), governor);\\n        emit GovernanceTransited(address(0), governor);\\n    }\\n\\n    function transitGovernance(address newGovernor) external onlyGovernor {\\n        if (newGovernor == address(0)) {\\n            revert GovernedGovernorZeroAddress();\\n        }\\n        if (newGovernor == address(this)) {\\n            revert GovernedCantGoverItself();\\n        }\\n\\n        pendingGovernor = newGovernor;\\n        emit PendingGovernanceTransition(governor, newGovernor);\\n    }\\n\\n    function acceptGovernance() external {\\n        if (msg.sender != pendingGovernor) {\\n            revert GovernedOnlyPendingGovernorAllowedToCall();\\n        }\\n\\n        governor = pendingGovernor;\\n        emit GovernanceTransited(governor, pendingGovernor);\\n    }\\n}\\n\",\"keccak256\":\"0x81655e56aecd1a2f5896c12fee267066cc58b447afc1d79c3695f98926714da8\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\ninterface IERC20 {\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n}\\n\\ninterface IMintableAndBurnableERC20 is IERC20 {\\n    function mint(address to, uint256 amount) external;\\n\\n    function burn(address from, uint256 amount) external;\\n}\\n\",\"keccak256\":\"0x555b3bf9906cdd22fd702e227764b81c027180c0af11c48222ba6273441c63f3\",\"license\":\"MIT\"},\"contracts/interfaces/IPriceOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./../libraries/FixedPointMath.sol\\\";\\n\\n/// @notice Thrown when oracle doesn't provide price for `token` token.\\n/// @param token The address of the token contract.\\nerror PriceOracleTokenUnknown(IERC20 token);\\n/// @notice Thrown when oracle provide stale price `price` for `token` token.\\n/// @param token The address of the token contract.\\n/// @param price Provided price.\\nerror PriceOracleStalePrice(IERC20 token, uint256 price);\\n/// @notice Thrown when oracle provide negative, zero or in other ways invalid price `price` for `token` token.\\n/// @param token The address of the token contract.\\n/// @param price Provided price.\\nerror PriceOracleInvalidPrice(IERC20 token, int256 price);\\n\\ninterface IPriceOracle {\\n    /// @notice Gets normalized to 18 decimals price for the `token` token.\\n    /// @param token The address of the token contract.\\n    /// @return normalizedPrice Normalized price.\\n    function getNormalizedPrice(IERC20 token) external view returns (uint256 normalizedPrice);\\n}\\n\",\"keccak256\":\"0x21c070369f7fe028994543eb4963d468e0968a6e088ee66d50ffdf05774ed202\",\"license\":\"MIT\"},\"contracts/interfaces/IWrappedNativeCurrency.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\ninterface IWrappedNativeCurrency is IERC20 {\\n    function deposit() external payable;\\n\\n    function withdraw(uint256 amount) external;\\n}\\n\",\"keccak256\":\"0xee9b433d476acee060d6a33b8dd3bd96d21a6851d823d5a2c756abcb343cf444\",\"license\":\"MIT\"},\"contracts/libraries/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nerror CallToNonContract(address target);\\n\\nlibrary Address {\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        if (!isContract(target)) {\\n            revert CallToNonContract(target);\\n        }\\n\\n        (bool success, bytes memory returnData) = target.call(data);\\n        return verifyCallResult(success, returnData, errorMessage);\\n    }\\n\\n    function delegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        if (!isContract(target)) {\\n            revert CallToNonContract(target);\\n        }\\n\\n        (bool success, bytes memory returnData) = target.delegatecall(data);\\n        return verifyCallResult(success, returnData, errorMessage);\\n    }\\n\\n    function isContract(address account) internal view returns (bool) {\\n        uint256 codeSize;\\n        assembly {\\n            codeSize := extcodesize(account)\\n        }\\n\\n        return codeSize > 0;\\n    }\\n\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returnData,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returnData;\\n        } else {\\n            if (returnData.length > 0) {\\n                assembly {\\n                    let returnDataSize := mload(returnData)\\n                    revert(add(returnData, 32), returnDataSize)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0600a1e06b9ff00c4175ca0f55c0b85cbc9283a101cc0c2a0624c600c456c003\",\"license\":\"MIT\"},\"contracts/libraries/AmountNormalization.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nimport \\\"./../interfaces/IERC20.sol\\\";\\n\\nlibrary AmountNormalization {\\n    uint8 internal constant DECIMALS = 18;\\n\\n    function normalizeAmount(IERC20 self, uint256 denormalizedAmount) internal view returns (uint256 normalizedAmount) {\\n        uint256 scale = 10**(DECIMALS - self.decimals());\\n        if (scale != 1) {\\n            return denormalizedAmount * scale;\\n        }\\n        return denormalizedAmount;\\n    }\\n\\n    function denormalizeAmount(IERC20 self, uint256 normalizedAmount)\\n        internal\\n        view\\n        returns (uint256 denormalizedAmount)\\n    {\\n        uint256 scale = 10**(DECIMALS - self.decimals());\\n        if (scale != 1) {\\n            return normalizedAmount / scale;\\n        }\\n        return normalizedAmount;\\n    }\\n}\\n\",\"keccak256\":\"0x420a9fd7d1520d9f1f6d021f99fa08aaaeb728b6ef4e4759a875d1dda90799e4\",\"license\":\"MIT\"},\"contracts/libraries/CollateralToken.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.9;\\n\\nimport \\\"./FixedPointMath.sol\\\";\\nimport \\\"./Loan.sol\\\";\\nimport {IERC20} from \\\"./../interfaces/IERC20.sol\\\";\\nimport {IPriceOracle} from \\\"./../interfaces/IPriceOracle.sol\\\";\\n\\nlibrary CollateralToken {\\n    using FixedPointMath for uint256;\\n\\n    struct Data {\\n        IERC20 collateralToken;\\n        IPriceOracle priceOracle;\\n        uint256 stabilityFee;\\n        uint256 stabilizationFee;\\n        uint256 exchangeFee;\\n        uint256 investmentFee;\\n        uint256 initialLoanToValueRatio;\\n        uint256 marginCallLoanToValueRatio;\\n        uint256 liquidationLoanToValueRatio;\\n        uint256 collateralAmount;\\n    }\\n\\n    uint256 internal constant ONE = 100e16;\\n\\n    function calculateLoanByPrincipalAmount(Data memory self, uint256 principalAmount)\\n        public\\n        view\\n        returns (Loan.Data memory)\\n    {\\n        uint256 collateralTokenPrice = self.priceOracle.getNormalizedPrice(self.collateralToken);\\n\\n        uint256 restOfIssuance = principalAmount.mul(ONE - self.initialLoanToValueRatio).div(\\n            self.initialLoanToValueRatio\\n        );\\n        uint256 stabilizationFee = restOfIssuance.mul(self.stabilizationFee);\\n        uint256 exchangeFee = restOfIssuance.mul(self.exchangeFee);\\n        uint256 investmentFee = restOfIssuance.mul(self.investmentFee);\\n\\n        uint256 collateralAmount = principalAmount.div(self.initialLoanToValueRatio.mul(collateralTokenPrice));\\n        uint256 stabilityFee = self.stabilityFee.mul(principalAmount).div(collateralTokenPrice);\\n\\n        return\\n            Loan.Data({\\n                id: 0,\\n                isActive: true,\\n                borrower: msg.sender,\\n                collateralToken: self.collateralToken,\\n                isNativeCurrency: false,\\n                priceOracle: self.priceOracle,\\n                stabilityFee: stabilityFee,\\n                stabilizationFee: stabilizationFee,\\n                exchangeFee: exchangeFee,\\n                investmentFee: investmentFee,\\n                principalAmount: principalAmount,\\n                collateralAmount: collateralAmount,\\n                lastDepositAt: block.timestamp,\\n                lastRepaymentAt: block.timestamp\\n            });\\n    }\\n\\n    function calculateLoanByCollateralAmount(Data memory self, uint256 collateralAmount)\\n        public\\n        view\\n        returns (Loan.Data memory)\\n    {\\n        uint256 collateralTokenPrice = self.priceOracle.getNormalizedPrice(self.collateralToken);\\n        uint256 principalAmount = collateralAmount.mul(self.initialLoanToValueRatio).mul(collateralTokenPrice);\\n\\n        uint256 restOfIssuance = principalAmount.mul(ONE - self.initialLoanToValueRatio).div(\\n            self.initialLoanToValueRatio\\n        );\\n        uint256 stabilizationFee = restOfIssuance.mul(self.stabilizationFee);\\n        uint256 exchangeFee = restOfIssuance.mul(self.exchangeFee);\\n        uint256 investmentFee = restOfIssuance.mul(self.investmentFee);\\n\\n        uint256 stabilityFee = self.stabilityFee.mul(principalAmount).div(collateralTokenPrice);\\n\\n        return\\n            Loan.Data({\\n                id: 0,\\n                isActive: true,\\n                borrower: msg.sender,\\n                collateralToken: self.collateralToken,\\n                isNativeCurrency: false,\\n                priceOracle: self.priceOracle,\\n                stabilityFee: stabilityFee,\\n                stabilizationFee: stabilizationFee,\\n                exchangeFee: exchangeFee,\\n                investmentFee: investmentFee,\\n                principalAmount: principalAmount,\\n                collateralAmount: collateralAmount,\\n                lastDepositAt: block.timestamp,\\n                lastRepaymentAt: block.timestamp\\n            });\\n    }\\n\\n    function calculateLoanBySecurityAmount(Data memory self, uint256 securityAmount)\\n        public\\n        view\\n        returns (Loan.Data memory)\\n    {\\n        uint256 collateralTokenPrice = self.priceOracle.getNormalizedPrice(self.collateralToken);\\n        uint256 c = self.stabilityFee.mul(self.initialLoanToValueRatio);\\n        uint256 principalAmount = securityAmount.mul(self.initialLoanToValueRatio).mul(collateralTokenPrice).div(\\n            c + ONE\\n        );\\n        return calculateLoanByPrincipalAmount(self, principalAmount);\\n    }\\n\\n    function getCollateralValue(Data memory self) internal view returns (uint256 collateralValue) {\\n        uint256 collateralTokenPrice = self.priceOracle.getNormalizedPrice(self.collateralToken);\\n        collateralValue = self.collateralAmount.mul(collateralTokenPrice);\\n    }\\n}\\n\",\"keccak256\":\"0x338b116e1e1e16406d9eb032cda64dc013c00e251bb97b65aed94852c9148c3b\",\"license\":\"BUSL-1.1\"},\"contracts/libraries/EnumerableAddressSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nlibrary EnumerableAddressSet {\\n    struct Set {\\n        address[] elements;\\n        mapping(address => uint256) indexes;\\n    }\\n\\n    function add(Set storage self, address element) internal returns (bool) {\\n        if (contains(self, element)) {\\n            return false;\\n        }\\n\\n        self.elements.push(element);\\n        self.indexes[element] = self.elements.length;\\n\\n        return true;\\n    }\\n\\n    function remove(Set storage self, address element) internal returns (bool) {\\n        uint256 elementIndex = indexOf(self, element);\\n        if (elementIndex == 0) {\\n            return false;\\n        }\\n\\n        uint256 indexToRemove = elementIndex - 1;\\n        uint256 lastIndex = count(self) - 1;\\n        if (indexToRemove != lastIndex) {\\n            address lastElement = self.elements[lastIndex];\\n            self.elements[indexToRemove] = lastElement;\\n            self.indexes[lastElement] = elementIndex;\\n        }\\n        self.elements.pop();\\n        delete self.indexes[element];\\n\\n        return true;\\n    }\\n\\n    function indexOf(Set storage self, address element) internal view returns (uint256) {\\n        return self.indexes[element];\\n    }\\n\\n    function contains(Set storage self, address element) internal view returns (bool) {\\n        return indexOf(self, element) != 0;\\n    }\\n\\n    function count(Set storage self) internal view returns (uint256) {\\n        return self.elements.length;\\n    }\\n}\\n\",\"keccak256\":\"0xa1fa015d00e86c38628437f420fc58879e4b87e28ee7266616a1e3e9485a9467\",\"license\":\"MIT\"},\"contracts/libraries/FixedPointMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nerror FixedPointMathMulDivOverflow(uint256 prod1, uint256 denominator);\\n\\n/// @title Fixed point math implementation\\nlibrary FixedPointMath {\\n    uint256 internal constant SCALE = 1e18;\\n    /// @dev Largest power of two divisor of scale.\\n    uint256 internal constant SCALE_LPOTD = 262144;\\n    /// @dev Scale inverted mod 2**256.\\n    uint256 internal constant SCALE_INVERSE =\\n        78156646155174841979727994598816262306175212592076161876661508869554232690281;\\n\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 result) {\\n        uint256 prod0;\\n        uint256 prod1;\\n        assembly {\\n            let mm := mulmod(a, b, not(0))\\n            prod0 := mul(a, b)\\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n        }\\n\\n        if (prod1 >= SCALE) {\\n            revert FixedPointMathMulDivOverflow(prod1, SCALE);\\n        }\\n\\n        uint256 remainder;\\n        uint256 roundUpUnit;\\n        assembly {\\n            remainder := mulmod(a, b, SCALE)\\n            roundUpUnit := gt(remainder, 499999999999999999)\\n        }\\n\\n        if (prod1 == 0) {\\n            assembly {\\n                result := add(div(prod0, SCALE), roundUpUnit)\\n            }\\n            return result;\\n        }\\n\\n        assembly {\\n            result := add(\\n                mul(\\n                    or(\\n                        div(sub(prod0, remainder), SCALE_LPOTD),\\n                        mul(sub(prod1, gt(remainder, prod0)), add(div(sub(0, SCALE_LPOTD), SCALE_LPOTD), 1))\\n                    ),\\n                    SCALE_INVERSE\\n                ),\\n                roundUpUnit\\n            )\\n        }\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256 result) {\\n        result = mulDiv(a, SCALE, b);\\n    }\\n\\n    /// @notice Calculates \\u230aa \\u00d7 b \\u00f7 denominator\\u230b with full precision.\\n    /// @dev Credit to Remco Bloemen under MIT license https://2\\u03c0.com/21/muldiv.\\n    function mulDiv(\\n        uint256 a,\\n        uint256 b,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        uint256 prod0;\\n        uint256 prod1;\\n        assembly {\\n            let mm := mulmod(a, b, not(0))\\n            prod0 := mul(a, b)\\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n        }\\n\\n        if (prod1 >= denominator) {\\n            revert FixedPointMathMulDivOverflow(prod1, denominator);\\n        }\\n\\n        if (prod1 == 0) {\\n            assembly {\\n                result := div(prod0, denominator)\\n            }\\n            return result;\\n        }\\n\\n        uint256 remainder;\\n        assembly {\\n            remainder := mulmod(a, b, denominator)\\n\\n            prod1 := sub(prod1, gt(remainder, prod0))\\n            prod0 := sub(prod0, remainder)\\n        }\\n\\n        unchecked {\\n            uint256 lpotdod = denominator & (~denominator + 1);\\n            assembly {\\n                denominator := div(denominator, lpotdod)\\n                prod0 := div(prod0, lpotdod)\\n                lpotdod := add(div(sub(0, lpotdod), lpotdod), 1)\\n            }\\n            prod0 |= prod1 * lpotdod;\\n\\n            uint256 inverse = (3 * denominator) ^ 2;\\n            inverse *= 2 - denominator * inverse;\\n            inverse *= 2 - denominator * inverse;\\n            inverse *= 2 - denominator * inverse;\\n            inverse *= 2 - denominator * inverse;\\n            inverse *= 2 - denominator * inverse;\\n            inverse *= 2 - denominator * inverse;\\n\\n            result = prod0 * inverse;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9d0813682bbe12845de0111298ec16fb9ebf5ac404cce4bee155a455fa547eb4\",\"license\":\"MIT\"},\"contracts/libraries/Loan.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.9;\\n\\nimport \\\"./FixedPointMath.sol\\\";\\nimport {IERC20} from \\\"./../interfaces/IERC20.sol\\\";\\nimport {IPriceOracle} from \\\"./../interfaces/IPriceOracle.sol\\\";\\n\\nlibrary Loan {\\n    using FixedPointMath for uint256;\\n\\n    struct Data {\\n        uint256 id;\\n        bool isActive;\\n        address borrower;\\n        IERC20 collateralToken;\\n        bool isNativeCurrency;\\n        IPriceOracle priceOracle;\\n        uint256 stabilityFee;\\n        uint256 stabilizationFee;\\n        uint256 exchangeFee;\\n        uint256 investmentFee;\\n        uint256 principalAmount;\\n        uint256 collateralAmount;\\n        uint256 lastDepositAt;\\n        uint256 lastRepaymentAt;\\n    }\\n\\n    function getCollateralValue(Data memory self) internal view returns (uint256 collateralValue) {\\n        uint256 collateralTokenPrice = self.priceOracle.getNormalizedPrice(self.collateralToken);\\n        collateralValue = self.collateralAmount.mul(collateralTokenPrice);\\n    }\\n\\n    function calculateLoanToValueRatio(Data memory self) internal view returns (uint256 loanToValueRatio) {\\n        if (self.principalAmount == 0) {\\n            return 0;\\n        }\\n        if (self.collateralAmount == 0) {\\n            return type(uint256).max;\\n        }\\n\\n        loanToValueRatio = self.principalAmount.div(getCollateralValue(self));\\n    }\\n}\\n\",\"keccak256\":\"0x8fa04f3f18ab9719d3bac5b448e91c1020c3f3af4bb5ae6d2d974844c9941239\",\"license\":\"BUSL-1.1\"},\"contracts/libraries/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nlibrary Math {\\n    function abs(int256 a) internal pure returns (uint256) {\\n        return a >= 0 ? uint256(a) : uint256(-a);\\n    }\\n}\\n\",\"keccak256\":\"0x7b7d9101e211b3e41539ffa11689c67241e1d76fa6794e12cc1c34a44b45b0af\",\"license\":\"MIT\"},\"contracts/libraries/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nerror ReentrancyGuardReentrantCall();\\n\\nabstract contract ReentrancyGuard {\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private status;\\n\\n    modifier nonReentrant() {\\n        if (status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        status = ENTERED;\\n\\n        _;\\n\\n        status = NOT_ENTERED;\\n    }\\n\\n    constructor() {\\n        status = NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0c49a9dd65f669ba3be9e175ef8c81bd8e99567765015d22e6e0488f3ecf8d81\",\"license\":\"MIT\"},\"contracts/libraries/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nimport \\\"./../interfaces/IERC20.sol\\\";\\nimport \\\"./Address.sol\\\";\\n\\nerror SafeERC20NoReturnData();\\n\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        callWithOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, amount));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        callWithOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, amount));\\n    }\\n\\n    function callWithOptionalReturn(IERC20 token, bytes memory data) internal {\\n        address tokenAddress = address(token);\\n\\n        bytes memory returnData = tokenAddress.functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returnData.length > 0) {\\n            if (!abi.decode(returnData, (bool))) {\\n                revert SafeERC20NoReturnData();\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd7b7718703221bb866280a0481db20e00867409fea715d45c228d8df16b90a7f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "$5fe12db1329d7e41995fe042c0d943eb24$__9263b951bd11926113f1928791016142ac565b6101c06040518083038186803b15801561140a57600080fd5b505af415801561141e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df19190614337565b6000546001600160a01b0316331461146d576040516305e7700560e51b815260040160405180910390fd5b6001600160a01b0382166000908152600f60205260409020546114ae57604051634cbfe6c960e11b81526001600160a01b0383166004820152602401610b61565b6001600160a01b0382166000908152600d60205260409020600781015482106114fc57604051630d12026b60e31b81526001600160a01b038416600482015260248101839052604401610b61565b6006810180549083905560408051828152602081018590526001600160a01b038616917fc6a8c526618a1ece6f5d33564501b92330c354faa23902079359e52c8efd72f391015b60405180910390a250505050565b611559613ecb565b60028054141561157c57604051633ee5aeb560e01b815260040160405180910390fd5b600280556001600160a01b0383166000908152600f602052604090205483906115c3576040516308cfe49560e31b81526001600160a01b0382166004820152602401610b61565b60006115cf858561219a565b9050611628337f00000000000000000000000000000000000000000000000000000000000000006116168460c00151896001600160a01b031661305290919063ffffffff16565b6001600160a01b0389169291906137ac565b61164e3330611616846101600151896001600160a01b031661305290919063ffffffff16565b610cf281613193565b6000546001600160a01b03163314611682576040516305e7700560e51b815260040160405180910390fd5b6001600160a01b0381166116a95760405163604b48b960e11b815260040160405180910390fd5b6001600160a01b0381163014156116d3576040516306b3e95d60e21b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fc606c9af1451cadeb333f6ff7b24a5540974f4e800bac274fa7fff9edc305cb19190a350565b6000546001600160a01b0316331461174f576040516305e7700560e51b815260040160405180910390fd5b60085460408051918252602082018390527fd2a3e4f854a80a895407f8743c1363ac14b698c432d22d8c65519e13a9e4983d910160405180910390a1600855565b6002805414156117b357604051633ee5aeb560e01b815260040160405180910390fd5b6002805560006117c16120ad565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561181e57600080fd5b505afa158015611832573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611856919061440a565b905060006118648383614423565b90506000611871826137ea565b9050600061187f8285613802565b9050600a548110156118a4576040516363b74cfb60e01b815260040160405180910390fd5b60008313156119f157604051632770a7eb60e21b8152306004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690639dc29fac90604401600060405180830381600087803b15801561191557600080fd5b505af1925050508015611926575060015b6119ec576040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561198c57600080fd5b505afa1580156119a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119c4919061440a565b90506119d08184614295565b60405163dc14e6f760e01b8152600401610b6191815260200190565b611a72565b6040516340c10f1960e01b8152306004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340c10f1990604401600060405180830381600087803b158015611a5957600080fd5b505af1158015611a6d573d6000803e3d6000fd5b505050505b6040518381527fa3cc94864c69eaba081615f691669aa27c9f8697ad249e6c01a4d792b2aace949060200160405180910390a150506001600255505050565b6000546001600160a01b03163314611adc576040516305e7700560e51b815260040160405180910390fd5b60008190507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b03161480611b3857506001600160a01b0381166000908152600f602052604090205415155b15611b605760405162919e6d60e01b81526001600160a01b0383166004820152602401610b61565b6040516370a0823160e01b8152306004820152611c0e907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b038516906370a082319060240160206040518083038186803b158015611bc557600080fd5b505afa158015611bd9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bfd919061440a565b6001600160a01b0385169190613103565b5050565b6000546001600160a01b03163314611c3d576040516305e7700560e51b815260040160405180910390fd5b6001600160a01b0382166000908152600f602052604090205415611c7f5760405163ca6d908160e01b81526001600160a01b0383166004820152602401610b61565b6008548110611cb357604051630d12026b60e31b81526001600160a01b038316600482015260248101829052604401610b61565b6000826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015611cee57600080fd5b505afa158015611d02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d26919061447b565b905060ff8116611d545760405163016058a160e51b81526001600160a01b0384166004820152602401610b61565b601260ff82161115611d8d5760405163dbba24db60e01b81526001600160a01b038416600482015260ff82166024820152604401610b61565b611d98600e84613817565b15611f7257604051806101400160405280846001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020016004548152602001600554815260200160065481526020016007548152602001838152602001600854815260200160095481526020016000815250600d6000856001600160a01b03166001600160a01b0316815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e0820151816007015561010082015181600801556101208201518160090155905050826001600160a01b03167f55dcc5a02a669292f3baba7762915a1182901a9c28a30cc15d3325afcbb4bccc60405160405180910390a26040805160008152602081018490526001600160a01b038516917fc6a8c526618a1ece6f5d33564501b92330c354faa23902079359e52c8efd72f3910160405180910390a25b505050565b611f7f613ecb565b6001600160a01b038084166000908152600d6020908152604091829020825161014081018452815485168152600182015490941691840191909152600281015483830152600381015460608401526004808201546080850152600582015460a0850152600682015460c0850152600782015460e085015260088201546101008501526009909101546101208401529051635751bfb360e11b815273__$5fe12db1329d7e41995fe042c0d943eb24$__9263aea37f66926113f1928791016142ac565b6000546001600160a01b0316331461206c576040516305e7700560e51b815260040160405180910390fd5b600a5460408051918252602082018390527f5eb53b71d73d0607121e658859e0125d7bbbf83c4288d44c18438d4fe94d1e07910160405180910390a1600a55565b6000805b600e5481101561219657612178600d6000600e60000184815481106120d8576120d861427f565b60009182526020808320909101546001600160a01b0390811684528382019490945260409283019091208251610140810184528154851681526001820154909416918401919091526002810154918301919091526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e0830152600881015461010083015260090154610120820152613887565b6121829083614267565b91508061218e8161449e565b9150506120b1565b5090565b6121a2613ecb565b6001600160a01b038084166000908152600d6020908152604091829020825161014081018452815485168152600182015490941691840191909152600281015483830152600381015460608401526004808201546080850152600582015460a0850152600682015460c0850152600782015460e08501526008820154610100850152600990910154610120840152905163719eae4d60e11b815273__$5fe12db1329d7e41995fe042c0d943eb24$__9263e33d5c9a926113f1928791016142ac565b6000546001600160a01b0316331461228f576040516305e7700560e51b815260040160405180910390fd5b6001600160a01b0381166000908152600f60205260409020546122d057604051634cbfe6c960e11b81526001600160a01b0382166004820152602401610b61565b6122db600e8261391e565b15612371576001600160a01b0381166000818152600d602052604080822080546001600160a01b03199081168255600182018054909116905560028101839055600381018390556004810183905560058101839055600681018390556007810183905560088101839055600901829055517f6d08717837ebdfd34a4ddffe3e4566e0a68e8dde2464854e9242a8f7e6399a339190a25b50565b600e546060908067ffffffffffffffff811115612393576123936142c9565b60405190808252806020026020018201604052801561242c57816020015b61241960405180610140016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001906001900390816123b15790505b50915060005b8181101561252157600d6000600e60000183815481106124545761245461427f565b60009182526020808320909101546001600160a01b0390811684528382019490945260409283019091208251610140810184528154851681526001820154909416918401919091526002810154918301919091526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e083015260088101546101008301526009015461012082015283518490839081106125035761250361427f565b602002602001018190525080806125199061449e565b915050612432565b505090565b60028054141561254957604051633ee5aeb560e01b815260040160405180910390fd5b60028055600b548190811015806125875750600b818154811061256e5761256e61427f565b600091825260209091206001600c90920201015460ff16155b156125a8576040516372c4e6fd60e01b815260048101829052602401610b61565b8160026125b482612cf9565b60028111156125c5576125c56141e7565b14156125e757604051633d240fc360e01b815260048101829052602401610b61565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316600b84815481106126245761262461427f565b600091825260209091206002600c9092020101546001600160a01b03161461266257604051635d64f43b60e01b815260048101849052602401610b61565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156126bd57600080fd5b505af11580156126d1573d6000803e3d6000fd5b50505050506126e08334613a57565b5050600160025550565b60028054141561270d57604051633ee5aeb560e01b815260040160405180910390fd5b60028055600b5482908110158061274b5750600b81815481106127325761273261427f565b600091825260209091206001600c90920201015460ff16155b1561276c576040516372c4e6fd60e01b815260048101829052602401610b61565b82600261277882612cf9565b6002811115612789576127896141e7565b14156127ab57604051633d240fc360e01b815260048101829052602401610b61565b826127c957604051631d23e67d60e21b815260040160405180910390fd5b6000600b85815481106127de576127de61427f565b90600052602060002090600c02019050838160080160008282546128029190614295565b9091555050604051632770a7eb60e21b8152336004820152602481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690639dc29fac90604401600060405180830381600087803b15801561286f57600080fd5b505af1158015612883573d6000803e3d6000fd5b505042600b84015550506008810154156128d657847f552544cb36551120f07c66c5cd4b2987725a0c72198587f2ce796099bb66c58c856040516128c991815260200190565b60405180910390a2612b1f565b600981015460028201546000916128f6916001600160a01b031690613052565b60098084015460028501546001600160a01b03166000908152600d6020526040812090920180549394509092909190612930908490614295565b9091555050600060098301556005820154604051632770a7eb60e21b815230600482015260248101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690639dc29fac90604401600060405180830381600087803b1580156129aa57600080fd5b505af11580156129be573d6000803e3d6000fd5b50505060018301805460ff191690555060405186907f33a382daad6aace935340a474d09fec82af4bec7e2b69518d283231b03a65f2490600090a26002820154600160a01b900460ff16612a385760018201546002830154612a33916001600160a01b03918216916101009091041683613103565b612b1d565b604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b158015612a9a57600080fd5b505af1158015612aae573d6000803e3d6000fd5b50506040516000925033915083908381818185875af1925050503d8060008114612af4576040519150601f19603f3d011682016040523d82523d6000602084013e612af9565b606091505b5050905080612b1b57604051638762150d60e01b815260040160405180910390fd5b505b505b50506001600255505050565b6001600160a01b0381166000908152600c60205260409020546060908067ffffffffffffffff811115612b6057612b606142c9565b604051908082528060200260200182016040528015612b9957816020015b612b86613ecb565b815260200190600190039081612b7e5790505b50915060005b81811015612cf2576001600160a01b0384166000908152600c602052604090208054600b919083908110612bd557612bd561427f565b906000526020600020015481548110612bf057612bf061427f565b6000918252602091829020604080516101c081018252600c90930290910180548352600181015460ff8082161515958501959095526001600160a01b036101009182900481169385019390935260028201548084166060860152600160a01b900490941615156080840152600381015490911660a0830152600481015460c0830152600581015460e0830152600681015492820192909252600782015461012082015260088201546101408201526009820154610160820152600a820154610180820152600b909101546101a08201528351849083908110612cd457612cd461427f565b60200260200101819052508080612cea9061449e565b915050612b9f565b5050919050565b600080612d0583610d00565b9050600954811015612d2957600854811015612d22576000610df1565b6001610df1565b60029392505050565b6000546001600160a01b03163314612d5d576040516305e7700560e51b815260040160405180910390fd5b670de0b6b3a764000081612d718486614267565b612d7b9190614267565b14612daa5760405163245c170760e21b8152600481018490526024810183905260448101829052606401610b61565b600554600654600754604080519384526020840187905283019190915260608201849052608082015260a081018290527f1f7068a9be898db6fcd350ac2ff32fc5f1e6fc46c8e6cc973cde53793ff3ab5e9060c00160405180910390a1600592909255600655600755565b600b8181548110612e2557600080fd5b60009182526020909120600c9091020180546001820154600283015460038401546004850154600586015460068701546007880154600889015460098a0154600a8b0154600b909b0154999b5060ff808a169b610100909a046001600160a01b039081169b818b169b600160a01b909b0490921699981697908e565b600280541415612ec457604051633ee5aeb560e01b815260040160405180910390fd5b60028055600b54829081101580612f025750600b8181548110612ee957612ee961427f565b600091825260209091206001600c90920201015460ff16155b15612f23576040516372c4e6fd60e01b815260048101829052602401610b61565b826002612f2f82612cf9565b6002811115612f4057612f406141e7565b1415612f6257604051633d240fc360e01b815260048101829052602401610b61565b612fa0333085600b8881548110612f7b57612f7b61427f565b600091825260209091206002600c9092020101546001600160a01b03169291906137ac565b612faa8484613a57565b505060016002555050565b600c6020528160005260406000208181548110612fd157600080fd5b90600052602060002001600091509150505481565b6000546001600160a01b03163314613011576040516305e7700560e51b815260040160405180910390fd5b60045460408051918252602082018390527fde9fa07b6ca9d540214c05366e57cb33adf8f132014d9d1b2802a5b89a99512a910160405180910390a1600455565b600080836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561308e57600080fd5b505afa1580156130a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130c6919061447b565b6130d19060126144b9565b6130dc90600a6145c0565b9050806001146130f8576130f081846145cf565b9150506130fd565b829150505b92915050565b6040516001600160a01b038316602482015260448101829052611f7290849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152613b3c565b61319b613ecb565b6101408201516131be576040516379d1504360e01b815260040160405180910390fd5b60035482610140015110156131e657604051631efe3f1960e11b815260040160405180910390fd5b60e08201516040516340c10f1960e01b815230600482015260248101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340c10f1990604401600060405180830381600087803b15801561325457600080fd5b505af1158015613268573d6000803e3d6000fd5b505050506101008201516040516340c10f1960e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015260248201929092527f0000000000000000000000000000000000000000000000000000000000000000909116906340c10f1990604401600060405180830381600087803b1580156132ff57600080fd5b505af1158015613313573d6000803e3d6000fd5b505050506101208201516040516340c10f1960e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015260248201929092527f0000000000000000000000000000000000000000000000000000000000000000909116906340c10f1990604401600060405180830381600087803b1580156133aa57600080fd5b505af11580156133be573d6000803e3d6000fd5b5050505060408281015161014084015191516340c10f1960e01b81526001600160a01b03918216600482015260248101929092527f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b15801561343857600080fd5b505af115801561344c573d6000803e3d6000fd5b505050506000600b80549050905080836000018181525050600b8390806001815401808255809150506001900390600052602060002090600c02016000909190919091506000820151816000015560208201518160010160006101000a81548160ff02191690831515021790555060408201518160010160016101000a8154816001600160a01b0302191690836001600160a01b0316021790555060608201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060808201518160020160146101000a81548160ff02191690831515021790555060a08201518160030160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060c0820151816004015560e08201518160050155610100820151816006015561012082015181600701556101408201518160080155610160820151816009015561018082015181600a01556101a082015181600b01555050600c600084604001516001600160a01b03166001600160a01b03168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190915055826101600151600d600085606001516001600160a01b03166001600160a01b03168152602001908152602001600020600901600082825461364a9190614267565b90915550506060838101516040808601516101408701516101608801516001600160a01b039485166000818152600d6020908152908690206006015486519485529084019290925293820152919392169184917f1c719a9a8ef2d44db7255e8d65b4a18a23f44758d6ebc0d6b80fe018d25433fb910160405180910390a45090919050565b6000816101400151600014156136e757506000919050565b6101608201516136fa5750600019919050565b6130fd61370683613712565b61014084015190613802565b60a08101516060820151604051630787c49960e21b81526001600160a01b03918216600482015260009283921690631e1f12649060240160206040518083038186803b15801561376157600080fd5b505afa158015613775573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613799919061440a565b610160840151909150610df19082613bc6565b6040516001600160a01b03808516602483015283166044820152606481018290526137e49085906323b872dd60e01b9060840161312f565b50505050565b600080821215612196576137fd826145f1565b6130fd565b6000610df183670de0b6b3a764000084613c96565b6001600160a01b03811660009081526001830160205260408120541561383f575060006130fd565b508154600180820184556000848152602080822090930180546001600160a01b0319166001600160a01b03959095169485179055845493815293810190915260409092205590565b60208101518151604051630787c49960e21b81526001600160a01b03918216600482015260009283921690631e1f12649060240160206040518083038186803b1580156138d357600080fd5b505afa1580156138e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061390b919061440a565b610120840151909150610df19082613bc6565b6001600160a01b0381166000908152600183016020526040812054806139485760009150506130fd565b6000613955600183614295565b905060006001613963875490565b61396d9190614295565b90508082146139f957600086600001828154811061398d5761398d61427f565b60009182526020909120015487546001600160a01b03909116915081908890859081106139bc576139bc61427f565b600091825260208083209190910180546001600160a01b0319166001600160a01b0394851617905592909116815260018801909152604090208390555b8554869080613a0a57613a0a61460e565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b038716825260018881019091526040822091909155935050505092915050565b80613a7557604051635491c16d60e01b815260040160405180910390fd5b6000600b8381548110613a8a57613a8a61427f565b6000918252602082206002600c9092020190810154909250613ab5906001600160a01b031684613d51565b905080826009016000828254613acb9190614267565b909155505042600a83015560028201546001600160a01b03166000908152600d602052604081206009018054839290613b05908490614267565b909155505060405181815284907fa3af609bf46297028ce551832669030f9effef2b02606d02cbbcc40fe6b47c5590602001611543565b6040805180820190915260208082527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564908201528290600090613b8b906001600160a01b038416908590613def565b8051909150156137e45780806020019051810190613ba99190614624565b6137e457604051639b8d506160e01b815260040160405180910390fd5b60008080600019848609848602925082811083820303915050670de0b6b3a76400008110613c185760405163072fa3c960e31b815260048101829052670de0b6b3a76400006024820152604401610b61565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff811182613c525780670de0b6b3a76400008504019450505050506130fd565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b60008080600019858709858702925082811083820303915050838110613cd95760405163072fa3c960e31b81526004810182905260248101859052604401610b61565b80613ce957508290049050610df1565b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b600080836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015613d8d57600080fd5b505afa158015613da1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613dc5919061447b565b613dd09060126144b9565b613ddb90600a6145c0565b9050806001146130f8576130f0818461463f565b6060833b613e1b5760405163dc5dd7fd60e01b81526001600160a01b0385166004820152602401610b61565b600080856001600160a01b031685604051613e36919061468a565b6000604051808303816000865af19150503d8060008114613e73576040519150601f19603f3d011682016040523d82523d6000602084013e613e78565b606091505b5091509150613e88828286613e92565b9695505050505050565b60608315613ea1575081610df1565b825115613eb15782518060208501fd5b8160405162461bcd60e51b8152600401610b6191906146a6565b604051806101c001604052806000815260200160001515815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160001515815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600060208284031215613f6b57600080fd5b5035919050565b805182526020810151613f89602084018215159052565b506040810151613fa460408401826001600160a01b03169052565b506060810151613fbf60608401826001600160a01b03169052565b506080810151613fd3608084018215159052565b5060a0810151613fee60a08401826001600160a01b03169052565b5060c0818101519083015260e08082015190830152610100808201519083015261012080820151908301526101408082015190830152610160808201519083015261018080820151908301526101a090810151910152565b6101c081016130fd8284613f72565b6001600160a01b038116811461237157600080fd5b6000806040838503121561407d57600080fd5b823561408881614055565b946020939093013593505050565b6000602082840312156140a857600080fd5b8135610df181614055565b80516001600160a01b0316825260208101516140da60208401826001600160a01b03169052565b5060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152505050565b6020808252825182820181905260009190848201906040850190845b81811015614176576141628385516140b3565b92840192610140929092019160010161414f565b50909695505050505050565b6000806040838503121561419557600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b81811015614176576141d3838551613f72565b928401926101c092909201916001016141c0565b634e487b7160e01b600052602160045260246000fd5b602081016003831061421f57634e487b7160e01b600052602160045260246000fd5b91905290565b60008060006060848603121561423a57600080fd5b505081359360208301359350604090920135919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561427a5761427a614251565b500190565b634e487b7160e01b600052603260045260246000fd5b6000828210156142a7576142a7614251565b500390565b61016081016142bb82856140b3565b826101408301529392505050565b634e487b7160e01b600052604160045260246000fd5b6040516101c0810167ffffffffffffffff8111828210171561431157634e487b7160e01b600052604160045260246000fd5b60405290565b8051801515811461432757600080fd5b919050565b805161432781614055565b60006101c0828403121561434a57600080fd5b6143526142df565b8251815261436260208401614317565b60208201526143736040840161432c565b60408201526143846060840161432c565b606082015261439560808401614317565b60808201526143a660a0840161432c565b60a082015260c0838101519082015260e08084015190820152610100808401519082015261012080840151908201526101408084015190820152610160808401519082015261018080840151908201526101a0928301519281019290925250919050565b60006020828403121561441c57600080fd5b5051919050565b60008083128015600160ff1b85018412161561444157614441614251565b837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01831381161561447557614475614251565b50500390565b60006020828403121561448d57600080fd5b815160ff81168114610df157600080fd5b60006000198214156144b2576144b2614251565b5060010190565b600060ff821660ff8416808210156144d3576144d3614251565b90039392505050565b600181815b808511156145175781600019048211156144fd576144fd614251565b8085161561450a57918102915b93841c93908002906144e1565b509250929050565b60008261452e575060016130fd565b8161453b575060006130fd565b8160018114614551576002811461455b57614577565b60019150506130fd565b60ff84111561456c5761456c614251565b50506001821b6130fd565b5060208310610133831016604e8410600b841016171561459a575081810a6130fd565b6145a483836144dc565b80600019048211156145b8576145b8614251565b029392505050565b6000610df160ff84168361451f565b6000826145ec57634e487b7160e01b600052601260045260246000fd5b500490565b6000600160ff1b82141561460757614607614251565b5060000390565b634e487b7160e01b600052603160045260246000fd5b60006020828403121561463657600080fd5b610df182614317565b600081600019048311821515161561465957614659614251565b500290565b60005b83811015614679578181015183820152602001614661565b838111156137e45750506000910152565b6000825161469c81846020870161465e565b9190910192915050565b60208152600082518060208401526146c581604085016020870161465e565b601f01601f1916919091016040019291505056fea164736f6c6343000809000a",
  "libraries": {
    "AmountNormalization": "0xE0EBb2c8E2545A38371ba7beb5Ff4724c3c148Dc",
    "EnumerableAddressSet": "0xBb5f50577Ef53ba14B834d3AB69d1a73Dd8fC57a",
    "FixedPointMath": "0x8caF0dE4A26Bbcf38c1DDa4FbF3699D3c512a662",
    "Loan": "0x5e8Ea1a357FC60280175DA0007bDd2e6db56Edb5",
    "Math": "0x5338341F2C998A3f46dE614B2CEBb3e50C417DCe",
    "SafeERC20": "0x4242b9535887912767902a8421f522cA0E349475",
    "CollateralToken": "0x5b77C87b2121ef9b0F3F09bfa3fC91AC3737B1c3"
  },
  "devdoc": {
    "author": "Andrey Gulitsky",
    "errors": {
      "BaksDAOBorrowBelowMinimumPrincipalAmount()": [
        {
          "details": "Thrown when trying to borrow below minimum principal amount."
        }
      ],
      "BaksDAOBorrowZeroAmount()": [
        {
          "details": "Thrown when borrowing a zero amount of stablecoin."
        }
      ],
      "BaksDAOCollateralTokenAlreadyListed(address)": [
        {
          "details": "Thrown when trying to list collateral token that's already listed.",
          "params": {
            "token": "The address of the collateral token contract."
          }
        }
      ],
      "BaksDAOCollateralTokenNotListed(address)": [
        {
          "details": "Thrown when trying to unlist collateral token that's not listed.",
          "params": {
            "token": "The address of the collateral token contract."
          }
        }
      ],
      "BaksDAOCollateralTokenTooLargeDecimals(address,uint8)": [
        {
          "details": "Thrown when trying to list collateral token that has too large decimals.",
          "params": {
            "token": "The address of the collateral token contract."
          }
        }
      ],
      "BaksDAOCollateralTokenZeroDecimals(address)": [
        {
          "details": "Thrown when trying to list collateral token that has zero decimals.",
          "params": {
            "token": "The address of the collateral token contract."
          }
        }
      ],
      "BaksDAODepositZeroAmount()": [
        {
          "details": "Thrown when depositing a zero amount of collateral token."
        }
      ],
      "BaksDAOInactiveLoan(uint256)": [
        {
          "details": "Thrown when trying to interact with inactive loan with `id` id.",
          "params": {
            "id": "The loan id."
          }
        }
      ],
      "BaksDAOInitialLoanToValueRatioTooHigh(address,uint256)": [
        {
          "details": "Thrown when trying to set initial loan-to-value ratio that higher than margin call or liquidation ones.",
          "params": {
            "initialLoanToValueRatio": "The initial loan-to-value ratio that was tried to set.",
            "token": "The address of the collateral token contract."
          }
        }
      ],
      "BaksDAOLoanIsSubjectToLiquidation(uint256)": [
        {
          "details": "Thrown when trying to interact with loan with `id` id that is subject to liquidation.",
          "params": {
            "id": "The loan id."
          }
        }
      ],
      "BaksDAOLoanNotSubjectToLiquidation(uint256)": [
        {
          "details": "Thrown when trying to liquidate healthy loan with `id` id.",
          "params": {
            "id": "The loan id."
          }
        }
      ],
      "BaksDAONativeCurrencyCollateralNotAllowed(uint256)": [
        {
          "details": "Thrown when trying to deposit native currency collateral to the non-wrapped native currency token loan with `id` id.",
          "params": {
            "id": "The loan id."
          }
        }
      ],
      "BaksDAONoNeedToRebalance()": [
        {
          "details": "Thrown when there's no need to rebalance the platform."
        }
      ],
      "BaksDAOPlatformFeesDontSumUpToOne(uint256,uint256,uint256)": [
        {
          "details": "Thrown when trying to set platform fees that don't sum up to one.",
          "params": {
            "exchangeFee": "The stabilization fee that was tried to set.",
            "investmentFee": "The stabilization fee that was tried to set.",
            "stabilizationFee": "The stabilization fee that was tried to set."
          }
        }
      ],
      "BaksDAORepayZeroAmount()": [
        {
          "details": "Thrown when repaying a zero amount of stablecoin."
        }
      ],
      "BaksDAOStabilizationFundOutOfFunds(uint256)": [
        {
          "details": "Thrown when trying to rebalance the platform and there is a shortage of funds to burn.",
          "params": {
            "shortage": "Shoratge of funds to burn."
          }
        }
      ],
      "BaksDAOTokenNotAllowedAsCollateral(address)": [
        {
          "details": "Thrown when interacting with a token that's not allowed as collateral.",
          "params": {
            "token": "The address of the collateral token contract."
          }
        }
      ],
      "BaksDAOTokenNotAllowedToBeSalvaged(address)": [
        {
          "details": "Thrown when trying to salvage one of allowed collateral tokens or stablecoin.",
          "params": {
            "token": "The address of the token contract."
          }
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "borrow(address,uint256)": {
        "details": "The caller must have allowed this contract to spend a sufficient amount of collateral tokens to cover initial loan-to-value ratio.",
        "params": {
          "amount": "The amount of stablecoin to borrow and issue.",
          "collateralToken": "The address of the collateral token contract."
        }
      },
      "deposit(uint256,uint256)": {
        "details": "The caller must have allowed this contract to spend `amount` of collateral tokens.",
        "params": {
          "amount": "The amount of collateral token to deposit.",
          "loanId": "The loan id."
        }
      },
      "repay(uint256,uint256)": {
        "params": {
          "amount": "The amount of stablecoin to repay.",
          "loanId": "The loan id."
        }
      }
    },
    "title": "Core smart contract of BaksDAO platform",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "borrow(address,uint256)": {
        "notice": "Increases loan's principal on `collateralToken` collateral token and mints `amount` of stablecoin."
      },
      "borrowInNativeCurrency(uint256)": {
        "notice": "Increases loan's principal on wrapped native currency token and mints stablecoin."
      },
      "deposit(uint256,uint256)": {
        "notice": "Deposits `amount` of collateral token to loan with `id` id."
      },
      "depositInNativeCurrency(uint256)": {
        "notice": "Deposits wrapped native currency token to loan with `id` id."
      },
      "repay(uint256,uint256)": {
        "notice": "Decreases principal of loan with `id` id by `amount` of stablecoin."
      }
    },
    "notice": "You should use this contract to interact with the BaksDAO platform.Only this contract can issue stablecoins.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4049,
        "contract": "contracts/BaksDAO.sol:BaksDAO",
        "label": "governor",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 4051,
        "contract": "contracts/BaksDAO.sol:BaksDAO",
        "label": "pendingGovernor",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 5652,
        "contract": "contracts/BaksDAO.sol:BaksDAO",
        "label": "status",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 250,
        "contract": "contracts/BaksDAO.sol:BaksDAO",
        "label": "minimumPrincipalAmount",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 253,
        "contract": "contracts/BaksDAO.sol:BaksDAO",
        "label": "stabilityFee",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 256,
        "contract": "contracts/BaksDAO.sol:BaksDAO",
        "label": "stabilizationFee",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 259,
        "contract": "contracts/BaksDAO.sol:BaksDAO",
        "label": "exchangeFee",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 262,
        "contract": "contracts/BaksDAO.sol:BaksDAO",
        "label": "investmentFee",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 265,
        "contract": "contracts/BaksDAO.sol:BaksDAO",
        "label": "marginCallLoanToValueRatio",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 268,
        "contract": "contracts/BaksDAO.sol:BaksDAO",
        "label": "liquidationLoanToValueRatio",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 271,
        "contract": "contracts/BaksDAO.sol:BaksDAO",
        "label": "rebalancingThreshold",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 275,
        "contract": "contracts/BaksDAO.sol:BaksDAO",
        "label": "loans",
        "offset": 0,
        "slot": "11",
        "type": "t_array(t_struct(Data)5474_storage)dyn_storage"
      },
      {
        "astId": 280,
        "contract": "contracts/BaksDAO.sol:BaksDAO",
        "label": "loanIds",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 286,
        "contract": "contracts/BaksDAO.sol:BaksDAO",
        "label": "collateralTokens",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_contract(IERC20)4310,t_struct(Data)4760_storage)"
      },
      {
        "astId": 289,
        "contract": "contracts/BaksDAO.sol:BaksDAO",
        "label": "collateralTokensSet",
        "offset": 0,
        "slot": "14",
        "type": "t_struct(Set)5059_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Data)5474_storage)dyn_storage": {
        "base": "t_struct(Data)5474_storage",
        "encoding": "dynamic_array",
        "label": "struct Loan.Data[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)4310": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IPriceOracle)4363": {
        "encoding": "inplace",
        "label": "contract IPriceOracle",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_contract(IERC20)4310,t_struct(Data)4760_storage)": {
        "encoding": "mapping",
        "key": "t_contract(IERC20)4310",
        "label": "mapping(contract IERC20 => struct CollateralToken.Data)",
        "numberOfBytes": "32",
        "value": "t_struct(Data)4760_storage"
      },
      "t_struct(Data)4760_storage": {
        "encoding": "inplace",
        "label": "struct CollateralToken.Data",
        "members": [
          {
            "astId": 4740,
            "contract": "contracts/BaksDAO.sol:BaksDAO",
            "label": "collateralToken",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)4310"
          },
          {
            "astId": 4743,
            "contract": "contracts/BaksDAO.sol:BaksDAO",
            "label": "priceOracle",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IPriceOracle)4363"
          },
          {
            "astId": 4745,
            "contract": "contracts/BaksDAO.sol:BaksDAO",
            "label": "stabilityFee",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 4747,
            "contract": "contracts/BaksDAO.sol:BaksDAO",
            "label": "stabilizationFee",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 4749,
            "contract": "contracts/BaksDAO.sol:BaksDAO",
            "label": "exchangeFee",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 4751,
            "contract": "contracts/BaksDAO.sol:BaksDAO",
            "label": "investmentFee",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 4753,
            "contract": "contracts/BaksDAO.sol:BaksDAO",
            "label": "initialLoanToValueRatio",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 4755,
            "contract": "contracts/BaksDAO.sol:BaksDAO",
            "label": "marginCallLoanToValueRatio",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 4757,
            "contract": "contracts/BaksDAO.sol:BaksDAO",
            "label": "liquidationLoanToValueRatio",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 4759,
            "contract": "contracts/BaksDAO.sol:BaksDAO",
            "label": "collateralAmount",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_struct(Data)5474_storage": {
        "encoding": "inplace",
        "label": "struct Loan.Data",
        "members": [
          {
            "astId": 5445,
            "contract": "contracts/BaksDAO.sol:BaksDAO",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 5447,
            "contract": "contracts/BaksDAO.sol:BaksDAO",
            "label": "isActive",
            "offset": 0,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 5449,
            "contract": "contracts/BaksDAO.sol:BaksDAO",
            "label": "borrower",
            "offset": 1,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 5452,
            "contract": "contracts/BaksDAO.sol:BaksDAO",
            "label": "collateralToken",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IERC20)4310"
          },
          {
            "astId": 5454,
            "contract": "contracts/BaksDAO.sol:BaksDAO",
            "label": "isNativeCurrency",
            "offset": 20,
            "slot": "2",
            "type": "t_bool"
          },
          {
            "astId": 5457,
            "contract": "contracts/BaksDAO.sol:BaksDAO",
            "label": "priceOracle",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IPriceOracle)4363"
          },
          {
            "astId": 5459,
            "contract": "contracts/BaksDAO.sol:BaksDAO",
            "label": "stabilityFee",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 5461,
            "contract": "contracts/BaksDAO.sol:BaksDAO",
            "label": "stabilizationFee",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 5463,
            "contract": "contracts/BaksDAO.sol:BaksDAO",
            "label": "exchangeFee",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 5465,
            "contract": "contracts/BaksDAO.sol:BaksDAO",
            "label": "investmentFee",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 5467,
            "contract": "contracts/BaksDAO.sol:BaksDAO",
            "label": "principalAmount",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 5469,
            "contract": "contracts/BaksDAO.sol:BaksDAO",
            "label": "collateralAmount",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 5471,
            "contract": "contracts/BaksDAO.sol:BaksDAO",
            "label": "lastDepositAt",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 5473,
            "contract": "contracts/BaksDAO.sol:BaksDAO",
            "label": "lastRepaymentAt",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "384"
      },
      "t_struct(Set)5059_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableAddressSet.Set",
        "members": [
          {
            "astId": 5054,
            "contract": "contracts/BaksDAO.sol:BaksDAO",
            "label": "elements",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 5058,
            "contract": "contracts/BaksDAO.sol:BaksDAO",
            "label": "indexes",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_uint256)"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}