{
  "address": "0x381eDd2872C28A1118f5E58e5f7C39c635841B78",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "CallToNonContract",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ContractAlreadyInitialized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "ExchangeFundDepositableTokenAlreadyListed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "ExchangeFundDepositableTokenNotListed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "name": "ExchangeFundDepositableTokenTooLargeDecimals",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "ExchangeFundDepositableTokenZeroDecimals",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ExchangeFundInsufficientDeposits",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ExchangeFundInsufficientLiquidity",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "ExchangeFundSameTokenSwap",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "ExchangeFundTokenNotAllowedToBeDeposited",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "ExchangeFundTokenNotAllowedToBeSalvaged",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "ExchangeFundTokenNotAllowedToBeSwapped",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "ExchangeFundTokenNotAllowedToBeWithdrawn",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "prod1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "denominator",
          "type": "uint256"
        }
      ],
      "name": "FixedPointMathMulDivOverflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GovernedCantGoverItself",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GovernedGovernorZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GovernedOnlyGovernorAllowedToCall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GovernedOnlyPendingGovernorAllowedToCall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SafeERC20NoReturnData",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IUniswapV2Pair",
          "name": "pair",
          "type": "address"
        }
      ],
      "name": "DepositableTokenListed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "DepositableTokenUnlisted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Divest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "governor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newGovernor",
          "type": "address"
        }
      ],
      "name": "GovernanceTransited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Invest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "governor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newGovernor",
          "type": "address"
        }
      ],
      "name": "PendingGovernanceTransition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "slippageTolerance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newSlippageTolerance",
          "type": "uint256"
        }
      ],
      "name": "SlippageToleranceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "tokenA",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "tokenB",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        }
      ],
      "name": "Swap",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "swapDeadline",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newSwapDeadline",
          "type": "uint256"
        }
      ],
      "name": "SwapDeadlineUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "name": "depositableTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "name": "deposits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "divest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDepositableTokens",
      "outputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_wrappedNativeCurrency",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_stablecoin",
          "type": "address"
        },
        {
          "internalType": "contract IPriceOracle",
          "name": "_priceOracle",
          "type": "address"
        },
        {
          "internalType": "contract IUniswapV2Router",
          "name": "_uniswapV2Router",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "invest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "name": "liquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "listDepositableToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingGovernor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceOracle",
      "outputs": [
        {
          "internalType": "contract IPriceOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "quote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stablecoinAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "salvage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newSlippageTolerance",
          "type": "uint256"
        }
      ],
      "name": "setSlippageTolerance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newSwapDeadline",
          "type": "uint256"
        }
      ],
      "name": "setSwapDeadline",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "slippageTolerance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stablecoin",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "useWrappedNativeCurrencyAsIntermediateToken",
          "type": "bool"
        }
      ],
      "name": "swap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapDeadline",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newGovernor",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "force",
          "type": "bool"
        }
      ],
      "name": "transitGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV2Router",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Router",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "unlistDepositableToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wrappedNativeCurrency",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xa5334e9e06a253cc3ebbc2a211be7597e584ea72adfcc14cb98395a3cb92372c",
  "receipt": {
    "to": null,
    "from": "0x21309DA9AD64eA82431758B27cbD63E5d53A556c",
    "contractAddress": "0x381eDd2872C28A1118f5E58e5f7C39c635841B78",
    "transactionIndex": 1,
    "gasUsed": "2656430",
    "logsBloom": "0x
    "blockHash": "0x24859090445a0a6c1298c0106977753feb0e7f70c2591b92b8cb9a2b5ef0deab",
    "transactionHash": "0xa5334e9e06a253cc3ebbc2a211be7597e584ea72adfcc14cb98395a3cb92372c",
    "logs": [],
    "blockNumber": 13812486,
    "cumulativeGasUsed": "2695738",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "bc61a727c19226a6a876172a110a900c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"CallToNonContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ContractAlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"ExchangeFundDepositableTokenAlreadyListed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"ExchangeFundDepositableTokenNotListed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"ExchangeFundDepositableTokenTooLargeDecimals\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"ExchangeFundDepositableTokenZeroDecimals\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExchangeFundInsufficientDeposits\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExchangeFundInsufficientLiquidity\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"ExchangeFundSameTokenSwap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"ExchangeFundTokenNotAllowedToBeDeposited\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"ExchangeFundTokenNotAllowedToBeSalvaged\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"ExchangeFundTokenNotAllowedToBeSwapped\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"ExchangeFundTokenNotAllowedToBeWithdrawn\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"prod1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"FixedPointMathMulDivOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GovernedCantGoverItself\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GovernedGovernorZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GovernedOnlyGovernorAllowedToCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GovernedOnlyPendingGovernorAllowedToCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeERC20NoReturnData\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IUniswapV2Pair\",\"name\":\"pair\",\"type\":\"address\"}],\"name\":\"DepositableTokenListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"DepositableTokenUnlisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Divest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"GovernanceTransited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Invest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"PendingGovernanceTransition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slippageTolerance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSlippageTolerance\",\"type\":\"uint256\"}],\"name\":\"SlippageToleranceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenA\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenB\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"swapDeadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSwapDeadline\",\"type\":\"uint256\"}],\"name\":\"SwapDeadlineUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"depositableTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"divest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDepositableTokens\",\"outputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_wrappedNativeCurrency\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_stablecoin\",\"type\":\"address\"},{\"internalType\":\"contract IPriceOracle\",\"name\":\"_priceOracle\",\"type\":\"address\"},{\"internalType\":\"contract IUniswapV2Router\",\"name\":\"_uniswapV2Router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"invest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"listDepositableToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingGovernor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceOracle\",\"outputs\":[{\"internalType\":\"contract IPriceOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stablecoinAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"salvage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newSlippageTolerance\",\"type\":\"uint256\"}],\"name\":\"setSlippageTolerance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newSwapDeadline\",\"type\":\"uint256\"}],\"name\":\"setSwapDeadline\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slippageTolerance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stablecoin\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"useWrappedNativeCurrencyAsIntermediateToken\",\"type\":\"bool\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"}],\"name\":\"transitGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"unlistDepositableToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrappedNativeCurrency\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ExchangeFundDepositableTokenAlreadyListed(address)\":[{\"details\":\"Thrown when trying to list depositable token that's already listed.\",\"params\":{\"token\":\"The address of the token contract.\"}}],\"ExchangeFundDepositableTokenNotListed(address)\":[{\"details\":\"Thrown when trying to unlist depositable token that's not listed.\",\"params\":{\"token\":\"The address of the token contract.\"}}],\"ExchangeFundDepositableTokenTooLargeDecimals(address,uint8)\":[{\"details\":\"Thrown when trying to list depositable token that has too large decimals.\",\"params\":{\"token\":\"The address of the token contract.\"}}],\"ExchangeFundDepositableTokenZeroDecimals(address)\":[{\"details\":\"Thrown when trying to list depositable token that has zero decimals.\",\"params\":{\"token\":\"The address of the token contract.\"}}],\"ExchangeFundTokenNotAllowedToBeDeposited(address)\":[{\"details\":\"Thrown when interacting with a token that's not allowed to be deposited.\",\"params\":{\"token\":\"The address of the token contract.\"}}],\"ExchangeFundTokenNotAllowedToBeSalvaged(address)\":[{\"details\":\"Thrown when trying to salvage one of depositable tokens or stablecoin.\",\"params\":{\"token\":\"The address of the token contract.\"}}],\"ExchangeFundTokenNotAllowedToBeSwapped(address)\":[{\"details\":\"Thrown when trying to swap token that's not allowed to be swapped.\",\"params\":{\"token\":\"The address of the token contract.\"}}],\"ExchangeFundTokenNotAllowedToBeWithdrawn(address)\":[{\"details\":\"Thrown when interacting with a token that's not allowed to be withdrawn.\",\"params\":{\"token\":\"The address of the token contract.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ExchangeFund.sol\":\"ExchangeFund\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/ExchangeFund.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.9;\\n\\nimport \\\"./libraries/AmountNormalization.sol\\\";\\nimport \\\"./libraries/EnumerableAddressSet.sol\\\";\\nimport \\\"./libraries/FixedPointMath.sol\\\";\\nimport \\\"./libraries/ReentrancyGuard.sol\\\";\\nimport \\\"./libraries/SafeERC20.sol\\\";\\nimport {Governed} from \\\"./Governance.sol\\\";\\nimport {Initializable} from \\\"./libraries/Upgradability.sol\\\";\\nimport {IERC20} from \\\"./interfaces/ERC20.sol\\\";\\nimport {IPriceOracle} from \\\"./interfaces/IPriceOracle.sol\\\";\\nimport {IUniswapV2Factory, IUniswapV2Router, IUniswapV2Pair} from \\\"./interfaces/UniswapV2.sol\\\";\\n\\n/// @dev Thrown when trying to list depositable token that has zero decimals.\\n/// @param token The address of the token contract.\\nerror ExchangeFundDepositableTokenZeroDecimals(IERC20 token);\\n\\n/// @dev Thrown when trying to list depositable token that has too large decimals.\\n/// @param token The address of the token contract.\\nerror ExchangeFundDepositableTokenTooLargeDecimals(IERC20 token, uint8 decimals);\\n\\n/// @dev Thrown when trying to list depositable token that's already listed.\\n/// @param token The address of the token contract.\\nerror ExchangeFundDepositableTokenAlreadyListed(IERC20 token);\\n\\n/// @dev Thrown when trying to unlist depositable token that's not listed.\\n/// @param token The address of the token contract.\\nerror ExchangeFundDepositableTokenNotListed(IERC20 token);\\n\\n/// @dev Thrown when interacting with a token that's not allowed to be deposited.\\n/// @param token The address of the token contract.\\nerror ExchangeFundTokenNotAllowedToBeDeposited(IERC20 token);\\n\\n/// @dev Thrown when interacting with a token that's not allowed to be withdrawn.\\n/// @param token The address of the token contract.\\nerror ExchangeFundTokenNotAllowedToBeWithdrawn(IERC20 token);\\n\\n/// @dev Thrown when trying to salvage one of depositable tokens or stablecoin.\\n/// @param token The address of the token contract.\\nerror ExchangeFundTokenNotAllowedToBeSalvaged(IERC20 token);\\n\\nerror ExchangeFundInsufficientDeposits();\\n\\nerror ExchangeFundInsufficientLiquidity();\\n\\nerror ExchangeFundSameTokenSwap(IERC20 token);\\n\\n/// @dev Thrown when trying to swap token that's not allowed to be swapped.\\n/// @param token The address of the token contract.\\nerror ExchangeFundTokenNotAllowedToBeSwapped(IERC20 token);\\n\\ncontract ExchangeFund is Initializable, Governed, ReentrancyGuard {\\n    using AmountNormalization for IERC20;\\n    using EnumerableAddressSet for EnumerableAddressSet.Set;\\n    using FixedPointMath for uint256;\\n    using SafeERC20 for IERC20;\\n\\n    uint256 internal constant ONE = 100e16;\\n    uint8 internal constant DECIMALS = 18;\\n\\n    IERC20 public wrappedNativeCurrency;\\n\\n    IERC20 public stablecoin;\\n    IPriceOracle public priceOracle;\\n    IUniswapV2Router public uniswapV2Router;\\n\\n    address public operator;\\n\\n    uint256 public slippageTolerance;\\n    uint256 public swapDeadline;\\n\\n    mapping(address => mapping(IERC20 => uint256)) public deposits;\\n    mapping(address => mapping(IERC20 => uint256)) public liquidity;\\n\\n    mapping(IERC20 => bool) public depositableTokens;\\n    EnumerableAddressSet.Set internal depositableTokensSet;\\n\\n    event DepositableTokenListed(IERC20 indexed token, IUniswapV2Pair pair);\\n    event DepositableTokenUnlisted(IERC20 indexed token);\\n\\n    event SlippageToleranceUpdated(uint256 slippageTolerance, uint256 newSlippageTolerance);\\n    event SwapDeadlineUpdated(uint256 swapDeadline, uint256 newSwapDeadline);\\n\\n    event Deposit(address indexed account, IERC20 indexed token, uint256 amount);\\n    event Swap(address indexed account, IERC20 indexed tokenA, IERC20 indexed tokenB, uint256 amountA, uint256 amountB);\\n    event Invest(address indexed account, IERC20 indexed token, uint256 amount);\\n    event Divest(address indexed account, IERC20 indexed token, uint256 amount);\\n    event Withdrawal(address indexed account, IERC20 indexed token, uint256 amount);\\n\\n    modifier tokenAllowedToBeDeposited(IERC20 token) {\\n        if (!depositableTokensSet.contains(address(token))) {\\n            revert ExchangeFundTokenNotAllowedToBeDeposited(token);\\n        }\\n        _;\\n    }\\n\\n    modifier tokenAllowedToBeSwapped(IERC20 token) {\\n        if (token != stablecoin && !depositableTokensSet.contains(address(token))) {\\n            revert ExchangeFundTokenNotAllowedToBeSwapped(token);\\n        }\\n        _;\\n    }\\n\\n    function initialize(\\n        IERC20 _wrappedNativeCurrency,\\n        IERC20 _stablecoin,\\n        IPriceOracle _priceOracle,\\n        IUniswapV2Router _uniswapV2Router,\\n        address _operator\\n    ) external initializer {\\n        setGovernor(msg.sender);\\n\\n        wrappedNativeCurrency = _wrappedNativeCurrency;\\n\\n        stablecoin = _stablecoin;\\n        priceOracle = _priceOracle;\\n        uniswapV2Router = _uniswapV2Router;\\n        operator = _operator;\\n\\n        slippageTolerance = 5e15; // 0.5 %\\n        swapDeadline = 20 minutes;\\n\\n        _stablecoin.approve(address(_uniswapV2Router), type(uint256).max);\\n    }\\n\\n    function deposit(IERC20 token, uint256 amount) external nonReentrant tokenAllowedToBeDeposited(token) {\\n        token.safeTransferFrom(msg.sender, address(this), amount);\\n\\n        uint256 normalizedAmount = token.normalizeAmount(amount);\\n        deposits[msg.sender][token] += normalizedAmount;\\n\\n        emit Deposit(msg.sender, token, normalizedAmount);\\n    }\\n\\n    function swap(\\n        IERC20 tokenA,\\n        IERC20 tokenB,\\n        uint256 amount,\\n        bool useWrappedNativeCurrencyAsIntermediateToken\\n    ) external nonReentrant tokenAllowedToBeSwapped(tokenA) tokenAllowedToBeSwapped(tokenB) {\\n        uint256 normalizedAmount = tokenA.normalizeAmount(amount);\\n        if (normalizedAmount > deposits[msg.sender][tokenA]) {\\n            revert ExchangeFundInsufficientDeposits();\\n        }\\n\\n        if (tokenA == tokenB) {\\n            revert ExchangeFundSameTokenSwap(tokenA);\\n        }\\n\\n        IERC20[] memory path = new IERC20[](useWrappedNativeCurrencyAsIntermediateToken ? 3 : 2);\\n        path[0] = tokenA;\\n        path[1] = useWrappedNativeCurrencyAsIntermediateToken ? wrappedNativeCurrency : tokenB;\\n        if (useWrappedNativeCurrencyAsIntermediateToken) {\\n            path[2] = tokenB;\\n        }\\n\\n        uint256[] memory amounts = uniswapV2Router.getAmountsOut(amount, path);\\n        uint256 normalizedAmountOut = tokenB.normalizeAmount(amounts[amounts.length - 1]);\\n\\n        amounts = uniswapV2Router.swapExactTokensForTokens(\\n            amount,\\n            tokenB.denormalizeAmount(normalizedAmountOut.mul(ONE - slippageTolerance)),\\n            path,\\n            address(this),\\n            block.timestamp + swapDeadline\\n        );\\n\\n        uint256 normalizedTokenAAmount = tokenA.normalizeAmount(amounts[0]);\\n        uint256 normalizedTokenBAmount = tokenB.normalizeAmount(amounts[amounts.length - 1]);\\n\\n        deposits[msg.sender][tokenA] -= normalizedTokenAAmount;\\n        deposits[msg.sender][tokenB] += normalizedTokenBAmount;\\n\\n        emit Swap(msg.sender, tokenA, tokenB, normalizedTokenAAmount, normalizedTokenBAmount);\\n    }\\n\\n    function invest(IERC20 token, uint256 amount) external nonReentrant {\\n        uint256 normalizedAmount = token.normalizeAmount(amount);\\n        if (normalizedAmount > deposits[msg.sender][token]) {\\n            revert ExchangeFundInsufficientDeposits();\\n        }\\n\\n        uint256 tokenValue = quote(token, amount);\\n        (, uint256 amountSent, uint256 liquidityMinted) = uniswapV2Router.addLiquidity(\\n            stablecoin,\\n            token,\\n            tokenValue,\\n            amount,\\n            tokenValue.mul(ONE - slippageTolerance),\\n            token.denormalizeAmount(normalizedAmount.mul(ONE - slippageTolerance)),\\n            address(this),\\n            block.timestamp + swapDeadline\\n        );\\n\\n        deposits[msg.sender][token] -= token.normalizeAmount(amountSent);\\n        liquidity[msg.sender][token] += liquidityMinted;\\n\\n        emit Invest(msg.sender, token, normalizedAmount);\\n    }\\n\\n    function divest(IERC20 token, uint256 amount) external nonReentrant {\\n        if (amount > liquidity[msg.sender][token]) {\\n            revert ExchangeFundInsufficientLiquidity();\\n        }\\n\\n        (, uint256 amountReceived) = uniswapV2Router.removeLiquidity(\\n            stablecoin,\\n            token,\\n            amount,\\n            0,\\n            0,\\n            address(this),\\n            block.timestamp + swapDeadline\\n        );\\n\\n        deposits[msg.sender][token] += token.normalizeAmount(amountReceived);\\n        liquidity[msg.sender][token] -= amount;\\n\\n        emit Divest(msg.sender, token, amount);\\n    }\\n\\n    function withdraw(IERC20 token, uint256 amount) external nonReentrant {\\n        if (token == stablecoin) {\\n            revert ExchangeFundTokenNotAllowedToBeWithdrawn(token);\\n        }\\n\\n        uint256 normalizedAmount = token.normalizeAmount(amount);\\n        if (normalizedAmount > deposits[msg.sender][token]) {\\n            revert ExchangeFundInsufficientDeposits();\\n        }\\n\\n        deposits[msg.sender][token] -= normalizedAmount;\\n        token.safeTransfer(msg.sender, amount);\\n\\n        emit Withdrawal(msg.sender, token, normalizedAmount);\\n    }\\n\\n    function listDepositableToken(IERC20 token) external onlyGovernor {\\n        if (depositableTokensSet.contains(address(token))) {\\n            revert ExchangeFundDepositableTokenAlreadyListed(token);\\n        }\\n\\n        uint8 decimals = token.decimals();\\n        if (decimals == 0) {\\n            revert ExchangeFundDepositableTokenZeroDecimals(token);\\n        }\\n        if (decimals > DECIMALS) {\\n            revert ExchangeFundDepositableTokenTooLargeDecimals(token, decimals);\\n        }\\n\\n        if (depositableTokensSet.add(address(token))) {\\n            token.approve(address(uniswapV2Router), type(uint256).max);\\n\\n            IUniswapV2Factory uniswapV2Factory = uniswapV2Router.factory();\\n            IUniswapV2Pair uniswapV2Pair = uniswapV2Factory.getPair(stablecoin, token);\\n            if (address(uniswapV2Pair) == address(0)) {\\n                uniswapV2Pair = uniswapV2Factory.createPair(stablecoin, token);\\n            }\\n            uniswapV2Pair.approve(address(uniswapV2Router), type(uint256).max);\\n\\n            depositableTokens[token] = true;\\n            emit DepositableTokenListed(token, uniswapV2Pair);\\n        }\\n    }\\n\\n    function unlistDepositableToken(IERC20 token) external onlyGovernor {\\n        if (!depositableTokensSet.contains(address(token))) {\\n            revert ExchangeFundDepositableTokenNotListed(token);\\n        }\\n\\n        if (depositableTokensSet.remove(address(token))) {\\n            token.approve(address(uniswapV2Router), 0);\\n\\n            IUniswapV2Factory uniswapV2Factory = uniswapV2Router.factory();\\n            IUniswapV2Pair uniswapV2Pair = uniswapV2Factory.getPair(stablecoin, token);\\n            if (address(uniswapV2Pair) != address(0)) {\\n                uniswapV2Pair.approve(address(uniswapV2Router), 0);\\n            }\\n\\n            delete depositableTokens[token];\\n            emit DepositableTokenUnlisted(token);\\n        }\\n    }\\n\\n    function setSlippageTolerance(uint256 newSlippageTolerance) external onlyGovernor {\\n        emit SlippageToleranceUpdated(slippageTolerance, newSlippageTolerance);\\n        slippageTolerance = newSlippageTolerance;\\n    }\\n\\n    function setSwapDeadline(uint256 newSwapDeadline) external onlyGovernor {\\n        emit SwapDeadlineUpdated(swapDeadline, newSwapDeadline);\\n        swapDeadline = newSwapDeadline;\\n    }\\n\\n    function salvage(IERC20 token) external onlyGovernor {\\n        address tokenAddress = address(token);\\n        if (token == stablecoin || depositableTokensSet.contains(tokenAddress)) {\\n            revert ExchangeFundTokenNotAllowedToBeSalvaged(token);\\n        }\\n        token.safeTransfer(operator, token.balanceOf(address(this)));\\n    }\\n\\n    function getDepositableTokens() external view returns (IERC20[] memory tokens) {\\n        uint256 length = depositableTokensSet.elements.length;\\n        tokens = new IERC20[](length);\\n\\n        for (uint256 i = 0; i < length; i++) {\\n            tokens[i] = IERC20(depositableTokensSet.elements[i]);\\n        }\\n    }\\n\\n    function quote(IERC20 token, uint256 amount) public view returns (uint256 stablecoinAmount) {\\n        IUniswapV2Pair uniswapV2Pair = uniswapV2Router.factory().getPair(stablecoin, token);\\n\\n        (uint256 reserveA, uint256 reserveB, ) = uniswapV2Pair.getReserves();\\n        if (reserveA == 0 || reserveB == 0) {\\n            stablecoinAmount = token.normalizeAmount(amount).mul(priceOracle.getNormalizedPrice(token));\\n            return stablecoinAmount;\\n        }\\n\\n        stablecoinAmount = address(stablecoin) < address(token)\\n            ? uniswapV2Router.quote(amount, reserveB, reserveA)\\n            : uniswapV2Router.quote(amount, reserveA, reserveB);\\n    }\\n}\\n\",\"keccak256\":\"0x622c19e667511861e77098fa18dacf0342ea8460f31aafda3f228cb84e8aac02\",\"license\":\"BUSL-1.1\"},\"contracts/Governance.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.9;\\n\\nerror GovernedOnlyGovernorAllowedToCall();\\nerror GovernedOnlyPendingGovernorAllowedToCall();\\nerror GovernedGovernorZeroAddress();\\nerror GovernedCantGoverItself();\\n\\nabstract contract Governed {\\n    address public governor;\\n    address public pendingGovernor;\\n\\n    event PendingGovernanceTransition(address indexed governor, address indexed newGovernor);\\n    event GovernanceTransited(address indexed governor, address indexed newGovernor);\\n\\n    modifier onlyGovernor() {\\n        if (msg.sender != governor) {\\n            revert GovernedOnlyGovernorAllowedToCall();\\n        }\\n        _;\\n    }\\n\\n    function transitGovernance(address newGovernor, bool force) external onlyGovernor {\\n        if (newGovernor == address(0)) {\\n            revert GovernedGovernorZeroAddress();\\n        }\\n        if (newGovernor == address(this)) {\\n            revert GovernedCantGoverItself();\\n        }\\n\\n        pendingGovernor = newGovernor;\\n        if (!force) {\\n            emit PendingGovernanceTransition(governor, newGovernor);\\n        } else {\\n            setGovernor(newGovernor);\\n        }\\n    }\\n\\n    function acceptGovernance() external {\\n        if (msg.sender != pendingGovernor) {\\n            revert GovernedOnlyPendingGovernorAllowedToCall();\\n        }\\n\\n        governor = pendingGovernor;\\n        emit GovernanceTransited(governor, pendingGovernor);\\n    }\\n\\n    function setGovernor(address newGovernor) internal {\\n        governor = newGovernor;\\n        emit GovernanceTransited(governor, newGovernor);\\n    }\\n}\\n\",\"keccak256\":\"0xe86e94a8fa51fb298c4152828f39bd32ceb0eed75717c70cc519528e7e448875\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\ninterface IERC20 {\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n}\\n\\ninterface IMintableAndBurnableERC20 is IERC20 {\\n    function mint(address to, uint256 amount) external;\\n\\n    function burn(address from, uint256 amount) external;\\n}\\n\",\"keccak256\":\"0x555b3bf9906cdd22fd702e227764b81c027180c0af11c48222ba6273441c63f3\",\"license\":\"MIT\"},\"contracts/interfaces/IPriceOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nimport {IERC20} from \\\"./ERC20.sol\\\";\\nimport \\\"./../libraries/FixedPointMath.sol\\\";\\n\\n/// @notice Thrown when oracle doesn't provide price for `token` token.\\n/// @param token The address of the token contract.\\nerror PriceOracleTokenUnknown(IERC20 token);\\n/// @notice Thrown when oracle provide stale price `price` for `token` token.\\n/// @param token The address of the token contract.\\n/// @param price Provided price.\\nerror PriceOracleStalePrice(IERC20 token, uint256 price);\\n/// @notice Thrown when oracle provide negative, zero or in other ways invalid price `price` for `token` token.\\n/// @param token The address of the token contract.\\n/// @param price Provided price.\\nerror PriceOracleInvalidPrice(IERC20 token, int256 price);\\n\\ninterface IPriceOracle {\\n    /// @notice Gets normalized to 18 decimals price for the `token` token.\\n    /// @param token The address of the token contract.\\n    /// @return normalizedPrice Normalized price.\\n    function getNormalizedPrice(IERC20 token) external view returns (uint256 normalizedPrice);\\n}\\n\",\"keccak256\":\"0x2cfa58d491572f613703a352a2ca52ecea5299711852d190c3abed043d95028b\",\"license\":\"MIT\"},\"contracts/interfaces/UniswapV2.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.8.9;\\n\\nimport {IERC20} from \\\"./ERC20.sol\\\";\\n\\ninterface IUniswapV2Pair is IERC20 {\\n    function token0() external view returns (IERC20);\\n\\n    function token1() external view returns (IERC20);\\n\\n    function getReserves()\\n        external\\n        view\\n        returns (\\n            uint112 reserve0,\\n            uint112 reserve1,\\n            uint32 blockTimestampLast\\n        );\\n}\\n\\ninterface IUniswapV2Factory {\\n    function createPair(IERC20 tokenA, IERC20 tokenB) external returns (IUniswapV2Pair pair);\\n\\n    function getPair(IERC20 tokenA, IERC20 tokenB) external view returns (IUniswapV2Pair pair);\\n}\\n\\ninterface IUniswapV2Router {\\n    function addLiquidity(\\n        IERC20 tokenA,\\n        IERC20 tokenB,\\n        uint256 amountADesired,\\n        uint256 amountBDesired,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    )\\n        external\\n        returns (\\n            uint256 amountA,\\n            uint256 amountB,\\n            uint256 liquidity\\n        );\\n\\n    function removeLiquidity(\\n        IERC20 tokenA,\\n        IERC20 tokenB,\\n        uint256 liquidity,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountA, uint256 amountB);\\n\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        IERC20[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function getAmountsOut(uint256 amountIn, IERC20[] calldata path) external view returns (uint256[] memory amounts);\\n\\n    function factory() external view returns (IUniswapV2Factory);\\n\\n    function quote(\\n        uint256 amountA,\\n        uint256 reserveA,\\n        uint256 reserveB\\n    ) external pure returns (uint256 amountB);\\n}\\n\",\"keccak256\":\"0xc3c943705e69afb9876e7abeae917f44a5c4cd95fd9f30833743f9519ec16c1f\",\"license\":\"GPL-3.0-or-later\"},\"contracts/libraries/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nerror CallToNonContract(address target);\\n\\nlibrary Address {\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        if (!isContract(target)) {\\n            revert CallToNonContract(target);\\n        }\\n\\n        (bool success, bytes memory returnData) = target.call(data);\\n        return verifyCallResult(success, returnData, errorMessage);\\n    }\\n\\n    function delegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        if (!isContract(target)) {\\n            revert CallToNonContract(target);\\n        }\\n\\n        (bool success, bytes memory returnData) = target.delegatecall(data);\\n        return verifyCallResult(success, returnData, errorMessage);\\n    }\\n\\n    function isContract(address account) internal view returns (bool) {\\n        uint256 codeSize;\\n        assembly {\\n            codeSize := extcodesize(account)\\n        }\\n\\n        return codeSize > 0;\\n    }\\n\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returnData,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returnData;\\n        } else {\\n            if (returnData.length > 0) {\\n                assembly {\\n                    let returnDataSize := mload(returnData)\\n                    revert(add(returnData, 32), returnDataSize)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0600a1e06b9ff00c4175ca0f55c0b85cbc9283a101cc0c2a0624c600c456c003\",\"license\":\"MIT\"},\"contracts/libraries/AmountNormalization.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nimport {IERC20} from \\\"./../interfaces/ERC20.sol\\\";\\n\\nlibrary AmountNormalization {\\n    uint8 internal constant DECIMALS = 18;\\n\\n    function normalizeAmount(IERC20 self, uint256 denormalizedAmount) internal view returns (uint256 normalizedAmount) {\\n        uint256 scale = 10**(DECIMALS - self.decimals());\\n        if (scale != 1) {\\n            return denormalizedAmount * scale;\\n        }\\n        return denormalizedAmount;\\n    }\\n\\n    function denormalizeAmount(IERC20 self, uint256 normalizedAmount)\\n        internal\\n        view\\n        returns (uint256 denormalizedAmount)\\n    {\\n        uint256 scale = 10**(DECIMALS - self.decimals());\\n        if (scale != 1) {\\n            return normalizedAmount / scale;\\n        }\\n        return normalizedAmount;\\n    }\\n}\\n\",\"keccak256\":\"0x4db96164ff3f9388d3079863e78d773f0af7c9875d2987c22b2cb21cc815c0ff\",\"license\":\"MIT\"},\"contracts/libraries/EnumerableAddressSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nlibrary EnumerableAddressSet {\\n    struct Set {\\n        address[] elements;\\n        mapping(address => uint256) indexes;\\n    }\\n\\n    function add(Set storage self, address element) internal returns (bool) {\\n        if (contains(self, element)) {\\n            return false;\\n        }\\n\\n        self.elements.push(element);\\n        self.indexes[element] = self.elements.length;\\n\\n        return true;\\n    }\\n\\n    function remove(Set storage self, address element) internal returns (bool) {\\n        uint256 elementIndex = indexOf(self, element);\\n        if (elementIndex == 0) {\\n            return false;\\n        }\\n\\n        uint256 indexToRemove = elementIndex - 1;\\n        uint256 lastIndex = count(self) - 1;\\n        if (indexToRemove != lastIndex) {\\n            address lastElement = self.elements[lastIndex];\\n            self.elements[indexToRemove] = lastElement;\\n            self.indexes[lastElement] = elementIndex;\\n        }\\n        self.elements.pop();\\n        delete self.indexes[element];\\n\\n        return true;\\n    }\\n\\n    function indexOf(Set storage self, address element) internal view returns (uint256) {\\n        return self.indexes[element];\\n    }\\n\\n    function contains(Set storage self, address element) internal view returns (bool) {\\n        return indexOf(self, element) != 0;\\n    }\\n\\n    function count(Set storage self) internal view returns (uint256) {\\n        return self.elements.length;\\n    }\\n}\\n\",\"keccak256\":\"0xa1fa015d00e86c38628437f420fc58879e4b87e28ee7266616a1e3e9485a9467\",\"license\":\"MIT\"},\"contracts/libraries/FixedPointMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nerror FixedPointMathMulDivOverflow(uint256 prod1, uint256 denominator);\\n\\n/// @title Fixed point math implementation\\nlibrary FixedPointMath {\\n    uint256 internal constant SCALE = 1e18;\\n    /// @dev Largest power of two divisor of scale.\\n    uint256 internal constant SCALE_LPOTD = 262144;\\n    /// @dev Scale inverted mod 2**256.\\n    uint256 internal constant SCALE_INVERSE =\\n        78156646155174841979727994598816262306175212592076161876661508869554232690281;\\n\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 result) {\\n        uint256 prod0;\\n        uint256 prod1;\\n        assembly {\\n            let mm := mulmod(a, b, not(0))\\n            prod0 := mul(a, b)\\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n        }\\n\\n        if (prod1 >= SCALE) {\\n            revert FixedPointMathMulDivOverflow(prod1, SCALE);\\n        }\\n\\n        uint256 remainder;\\n        uint256 roundUpUnit;\\n        assembly {\\n            remainder := mulmod(a, b, SCALE)\\n            roundUpUnit := gt(remainder, 499999999999999999)\\n        }\\n\\n        if (prod1 == 0) {\\n            assembly {\\n                result := add(div(prod0, SCALE), roundUpUnit)\\n            }\\n            return result;\\n        }\\n\\n        assembly {\\n            result := add(\\n                mul(\\n                    or(\\n                        div(sub(prod0, remainder), SCALE_LPOTD),\\n                        mul(sub(prod1, gt(remainder, prod0)), add(div(sub(0, SCALE_LPOTD), SCALE_LPOTD), 1))\\n                    ),\\n                    SCALE_INVERSE\\n                ),\\n                roundUpUnit\\n            )\\n        }\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256 result) {\\n        result = mulDiv(a, SCALE, b);\\n    }\\n\\n    /// @notice Calculates \\u230aa \\u00d7 b \\u00f7 denominator\\u230b with full precision.\\n    /// @dev Credit to Remco Bloemen under MIT license https://2\\u03c0.com/21/muldiv.\\n    function mulDiv(\\n        uint256 a,\\n        uint256 b,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        uint256 prod0;\\n        uint256 prod1;\\n        assembly {\\n            let mm := mulmod(a, b, not(0))\\n            prod0 := mul(a, b)\\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n        }\\n\\n        if (prod1 >= denominator) {\\n            revert FixedPointMathMulDivOverflow(prod1, denominator);\\n        }\\n\\n        if (prod1 == 0) {\\n            assembly {\\n                result := div(prod0, denominator)\\n            }\\n            return result;\\n        }\\n\\n        uint256 remainder;\\n        assembly {\\n            remainder := mulmod(a, b, denominator)\\n\\n            prod1 := sub(prod1, gt(remainder, prod0))\\n            prod0 := sub(prod0, remainder)\\n        }\\n\\n        unchecked {\\n            uint256 lpotdod = denominator & (~denominator + 1);\\n            assembly {\\n                denominator := div(denominator, lpotdod)\\n                prod0 := div(prod0, lpotdod)\\n                lpotdod := add(div(sub(0, lpotdod), lpotdod), 1)\\n            }\\n            prod0 |= prod1 * lpotdod;\\n\\n            uint256 inverse = (3 * denominator) ^ 2;\\n            inverse *= 2 - denominator * inverse;\\n            inverse *= 2 - denominator * inverse;\\n            inverse *= 2 - denominator * inverse;\\n            inverse *= 2 - denominator * inverse;\\n            inverse *= 2 - denominator * inverse;\\n            inverse *= 2 - denominator * inverse;\\n\\n            result = prod0 * inverse;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9d0813682bbe12845de0111298ec16fb9ebf5ac404cce4bee155a455fa547eb4\",\"license\":\"MIT\"},\"contracts/libraries/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nerror ReentrancyGuardReentrantCall();\\n\\nabstract contract ReentrancyGuard {\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private status;\\n\\n    modifier nonReentrant() {\\n        if (status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        status = ENTERED;\\n\\n        _;\\n\\n        status = NOT_ENTERED;\\n    }\\n\\n    constructor() {\\n        status = NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0c49a9dd65f669ba3be9e175ef8c81bd8e99567765015d22e6e0488f3ecf8d81\",\"license\":\"MIT\"},\"contracts/libraries/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nimport {IERC20} from \\\"./../interfaces/ERC20.sol\\\";\\nimport \\\"./Address.sol\\\";\\n\\nerror SafeERC20NoReturnData();\\n\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        callWithOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, amount));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        callWithOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, amount));\\n    }\\n\\n    function callWithOptionalReturn(IERC20 token, bytes memory data) internal {\\n        address tokenAddress = address(token);\\n\\n        bytes memory returnData = tokenAddress.functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returnData.length > 0) {\\n            if (!abi.decode(returnData, (bool))) {\\n                revert SafeERC20NoReturnData();\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa34dc3bade0644994ac478921c14186097231de0dd0426d7d349c26e79224741\",\"license\":\"MIT\"},\"contracts/libraries/Upgradability.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nimport \\\"./Address.sol\\\";\\n\\nerror EIP1967ImplementationIsNotContract(address implementation);\\nerror ContractAlreadyInitialized();\\nerror OnlyProxyCallAllowed();\\nerror OnlyCurrentImplementationAllowed();\\n\\nlibrary EIP1967 {\\n    using Address for address;\\n\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    event Upgraded(address indexed newImplementation);\\n\\n    function upgradeTo(address newImplementation) internal {\\n        if (!newImplementation.isContract()) {\\n            revert EIP1967ImplementationIsNotContract(newImplementation);\\n        }\\n\\n        assembly {\\n            sstore(IMPLEMENTATION_SLOT, newImplementation)\\n        }\\n\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    function getImplementation() internal view returns (address implementation) {\\n        assembly {\\n            implementation := sload(IMPLEMENTATION_SLOT)\\n        }\\n    }\\n}\\n\\ncontract Proxy {\\n    using Address for address;\\n\\n    constructor(address implementation, bytes memory data) {\\n        EIP1967.upgradeTo(implementation);\\n        implementation.delegateCall(data, \\\"Proxy: construction failed\\\");\\n    }\\n\\n    receive() external payable {\\n        delegateCall();\\n    }\\n\\n    fallback() external payable {\\n        delegateCall();\\n    }\\n\\n    function delegateCall() internal {\\n        address implementation = EIP1967.getImplementation();\\n\\n        assembly {\\n            calldatacopy(0, 0, calldatasize())\\n\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n}\\n\\nabstract contract Upgradeable {\\n    address private immutable self = address(this);\\n\\n    modifier onlyProxy() {\\n        if (address(this) == self) {\\n            revert OnlyProxyCallAllowed();\\n        }\\n        if (EIP1967.getImplementation() != self) {\\n            revert OnlyCurrentImplementationAllowed();\\n        }\\n        _;\\n    }\\n\\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\\n        EIP1967.upgradeTo(newImplementation);\\n    }\\n}\\n\\nabstract contract Initializable {\\n    bool private initializing;\\n    bool private initialized;\\n\\n    modifier initializer() {\\n        if (!initializing && initialized) {\\n            revert ContractAlreadyInitialized();\\n        }\\n\\n        bool isTopLevelCall = !initializing;\\n        if (isTopLevelCall) {\\n            initializing = true;\\n            initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            initializing = false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x60f5d719243332028141aec4adf396d615df4fc5113fe4e80f21af3af9174d58\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506001600255612ebc806100256000396000f3fe608060405234801561001057600080fd5b50600436106101b95760003560e01c80638f601f66116100f9578063c14edd7911610097578063e3056a3411610071578063e3056a34146103d9578063e7f3028c146103ec578063e9cbd822146103ff578063f3fef3a31461041257600080fd5b8063c14edd791461038a578063d03153aa146103bd578063ddc12526146103c657600080fd5b8063942dbff4116100d3578063942dbff414610330578063b221728114610339578063b9b8c24614610364578063bb5043171461037757600080fd5b80638f601f66146102d15780638f79306e1461030a57806393ad9f171461031d57600080fd5b806347e7ef24116101665780635e6fdf43116101405780635e6fdf43146102835780637e83f7d71461029857806385881e2a146102ab578063863a03e0146102be57600080fd5b806347e7ef241461024a57806348be77191461025d578063570ca7351461027057600080fd5b80631694505e116101975780631694505e1461021c578063238efcbc1461022f5780632630c12f1461023757600080fd5b80630c340a24146101be578063117da1ee146101f45780631459457a14610209575b600080fd5b6000546101d7906201000090046001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6102076102023660046127de565b610425565b005b61020761021736600461280c565b610497565b6006546101d7906001600160a01b031681565b6102076105f3565b6005546101d7906001600160a01b031681565b61020761025836600461287d565b610688565b61020761026b3660046128a9565b6107a9565b6007546101d7906001600160a01b031681565b61028b610aa1565b6040516101eb919061290a565b6102076102a636600461292b565b610b6a565b6102076102b93660046128a9565b6110ef565b6102076102cc3660046128a9565b611573565b6102fc6102df36600461297e565b600a60209081526000928352604080842090915290825290205481565b6040519081526020016101eb565b6102fc61031836600461287d565b611696565b61020761032b3660046127de565b611a31565b6102fc60095481565b6102fc61034736600461297e565b600b60209081526000928352604080842090915290825290205481565b61020761037236600461287d565b611aa3565b61020761038536600461287d565b611d43565b6103ad6103983660046128a9565b600c6020526000908152604090205460ff1681565b60405190151581526020016101eb565b6102fc60085481565b6102076103d43660046129b7565b611f5a565b6001546101d7906001600160a01b031681565b6003546101d7906001600160a01b031681565b6004546101d7906001600160a01b031681565b61020761042036600461287d565b612048565b6000546201000090046001600160a01b03163314610456576040516305e7700560e51b815260040160405180910390fd5b60085460408051918252602082018390527fddd31550b26e9ef8ade466958be83ff8a014d9b4f36d546b61a6847a45306575910160405180910390a1600855565b60005460ff161580156104b15750600054610100900460ff165b156104cf57604051631ee1e30360e21b815260040160405180910390fd5b60005460ff161580156104ec576000805461ffff19166101011790555b6104f53361218f565b600380546001600160a01b038881166001600160a01b0319928316179092556004805488841690831681178255600580548986169085161790556006805488861690851681179091556007805495881695909416949094179092556611c37937e080006008556104b060095560405163095ea7b360e01b81529081019290925260001960248301529063095ea7b390604401602060405180830381600087803b1580156105a157600080fd5b505af11580156105b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d991906129e5565b5080156105eb576000805460ff191690555b505050505050565b6001546001600160a01b0316331461061e5760405163aec80d4b60e01b815260040160405180910390fd5b60015460008054620100006001600160a01b0393841681810275ffffffffffffffffffffffffffffffffffffffff00001990931692909217808455604051929491900416917f564590b81987d147246f63910a8e1ee4eb09c4d64cc75ee975a8ffedfcc2210e91a3565b6002805414156106ab57604051633ee5aeb560e01b815260040160405180910390fd5b600280556001600160a01b0382166000908152600e602052604090205482906106f75760405163497e1e0360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b61070c6001600160a01b0384163330856121f6565b60006107216001600160a01b0385168461227c565b336000908152600a602090815260408083206001600160a01b0389168452909152812080549293508392909190610759908490612a18565b90915550506040518181526001600160a01b0385169033907f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f629060200160405180910390a3505060016002555050565b6000546201000090046001600160a01b031633146107da576040516305e7700560e51b815260040160405180910390fd5b6001600160a01b0381166000908152600e602052604090205461081b5760405163635c3e1f60e11b81526001600160a01b03821660048201526024016106ee565b610826600d8261232a565b15610a9e5760065460405163095ea7b360e01b81526001600160a01b039182166004820152600060248201529082169063095ea7b390604401602060405180830381600087803b15801561087957600080fd5b505af115801561088d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b191906129e5565b506006546040805163c45a015560e01b815290516000926001600160a01b03169163c45a0155916004808301926020929190829003018186803b1580156108f757600080fd5b505afa15801561090b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092f9190612a30565b6004805460405163e6a4390560e01b81526001600160a01b0391821692810192909252848116602483015291925060009183169063e6a439059060440160206040518083038186803b15801561098457600080fd5b505afa158015610998573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bc9190612a30565b90506001600160a01b03811615610a555760065460405163095ea7b360e01b81526001600160a01b039182166004820152600060248201529082169063095ea7b390604401602060405180830381600087803b158015610a1b57600080fd5b505af1158015610a2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5391906129e5565b505b6001600160a01b0383166000818152600c6020526040808220805460ff19169055517fbd6c0ac05a911841e71daa23bb8022779f3957fad4fa3546eb22a1782c747c839190a250505b50565b600d546060908067ffffffffffffffff811115610ac057610ac0612a4d565b604051908082528060200260200182016040528015610ae9578160200160208202803683370190505b50915060005b81811015610b6557600d805482908110610b0b57610b0b612a63565b9060005260206000200160009054906101000a90046001600160a01b0316838281518110610b3b57610b3b612a63565b6001600160a01b039092166020928302919091019091015280610b5d81612a79565b915050610aef565b505090565b600280541415610b8d57604051633ee5aeb560e01b815260040160405180910390fd5b6002805560045484906001600160a01b03808316911614801590610bc757506001600160a01b0381166000908152600e6020526040902054155b15610bf05760405163569695af60e01b81526001600160a01b03821660048201526024016106ee565b60045484906001600160a01b03808316911614801590610c2657506001600160a01b0381166000908152600e6020526040902054155b15610c4f5760405163569695af60e01b81526001600160a01b03821660048201526024016106ee565b6000610c646001600160a01b0388168661227c565b336000908152600a602090815260408083206001600160a01b038c168452909152902054909150811115610cab5760405163c0993c3760e01b815260040160405180910390fd5b856001600160a01b0316876001600160a01b03161415610ce957604051630e9f73ab60e21b81526001600160a01b03881660048201526024016106ee565b600084610cf7576002610cfa565b60035b60ff1667ffffffffffffffff811115610d1557610d15612a4d565b604051908082528060200260200182016040528015610d3e578160200160208202803683370190505b5090508781600081518110610d5557610d55612a63565b60200260200101906001600160a01b031690816001600160a01b03168152505084610d805786610d8d565b6003546001600160a01b03165b81600181518110610da057610da0612a63565b60200260200101906001600160a01b031690816001600160a01b0316815250508415610dfb578681600281518110610dda57610dda612a63565b60200260200101906001600160a01b031690816001600160a01b0316815250505b60065460405163d06ca61f60e01b81526000916001600160a01b03169063d06ca61f90610e2e908a908690600401612a94565b60006040518083038186803b158015610e4657600080fd5b505afa158015610e5a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e829190810190612ab5565b90506000610ec88260018451610e989190612b73565b81518110610ea857610ea8612a63565b60200260200101518a6001600160a01b031661227c90919063ffffffff16565b6006546008549192506001600160a01b0316906338ed1739908a90610f1490610f0490610efd90670de0b6b3a7640000612b73565b8690612463565b6001600160a01b038e1690612533565b863060095442610f249190612a18565b6040518663ffffffff1660e01b8152600401610f44959493929190612b8a565b600060405180830381600087803b158015610f5e57600080fd5b505af1158015610f72573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f9a9190810190612ab5565b91506000610fd483600081518110610fb457610fb4612a63565b60200260200101518c6001600160a01b031661227c90919063ffffffff16565b90506000610ffa8460018651610fea9190612b73565b81518110610fb457610fb4612a63565b905081600a6000336001600160a01b03166001600160a01b0316815260200190815260200160002060008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546110549190612b73565b9091555050336000908152600a602090815260408083206001600160a01b038f1684529091528120805483929061108c908490612a18565b909155505060408051838152602081018390526001600160a01b03808e1692908f169133917fcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e46062910160405180910390a45050600160025550505050505050505050565b6000546201000090046001600160a01b03163314611120576040516305e7700560e51b815260040160405180910390fd5b6001600160a01b0381166000908152600e602052604090205415611162576040516382cce5f360e01b81526001600160a01b03821660048201526024016106ee565b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561119d57600080fd5b505afa1580156111b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d59190612bc6565b905060ff8116611203576040516316d13e4960e21b81526001600160a01b03831660048201526024016106ee565b601260ff8216111561123c576040516321b3807960e11b81526001600160a01b038316600482015260ff821660248201526044016106ee565b611247600d836125d1565b1561156f5760065460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529083169063095ea7b390604401602060405180830381600087803b15801561129b57600080fd5b505af11580156112af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d391906129e5565b506006546040805163c45a015560e01b815290516000926001600160a01b03169163c45a0155916004808301926020929190829003018186803b15801561131957600080fd5b505afa15801561132d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113519190612a30565b6004805460405163e6a4390560e01b81526001600160a01b0391821692810192909252858116602483015291925060009183169063e6a439059060440160206040518083038186803b1580156113a657600080fd5b505afa1580156113ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113de9190612a30565b90506001600160a01b03811661147a57600480546040516364e329cb60e11b81526001600160a01b0391821692810192909252858116602483015283169063c9c6539690604401602060405180830381600087803b15801561143f57600080fd5b505af1158015611453573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114779190612a30565b90505b60065460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529082169063095ea7b390604401602060405180830381600087803b1580156114c957600080fd5b505af11580156114dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061150191906129e5565b506001600160a01b0384166000818152600c602052604090819020805460ff19166001179055517f55011b433ad455f23aa134ee4f1fcd2190a063cb514134436b32358ead356ada906115649084906001600160a01b0391909116815260200190565b60405180910390a250505b5050565b6000546201000090046001600160a01b031633146115a4576040516305e7700560e51b815260040160405180910390fd5b60045481906001600160a01b03808316911614806115d957506001600160a01b0381166000908152600e602052604090205415155b1561160257604051631af19dff60e01b81526001600160a01b03831660048201526024016106ee565b6007546040516370a0823160e01b815230600482015261156f916001600160a01b0390811691908516906370a082319060240160206040518083038186803b15801561164d57600080fd5b505afa158015611661573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116859190612be9565b6001600160a01b0385169190612641565b600080600660009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b1580156116e757600080fd5b505afa1580156116fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171f9190612a30565b6004805460405163e6a4390560e01b81526001600160a01b03918216928101929092528681166024830152919091169063e6a439059060440160206040518083038186803b15801561177057600080fd5b505afa158015611784573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a89190612a30565b9050600080826001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156117e657600080fd5b505afa1580156117fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061181e9190612c25565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff1691508160001480611850575080155b156118f757600554604051630787c49960e21b81526001600160a01b0388811660048301526118ed921690631e1f12649060240160206040518083038186803b15801561189c57600080fd5b505afa1580156118b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d49190612be9565b6118e76001600160a01b0389168861227c565b90612463565b9350505050611a2b565b6004546001600160a01b0380881691161061199b57600654604051632b58577b60e21b81526004810187905260248101849052604481018390526001600160a01b039091169063ad615dec9060640160206040518083038186803b15801561195e57600080fd5b505afa158015611972573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119969190612be9565b611a25565b600654604051632b58577b60e21b81526004810187905260248101839052604481018490526001600160a01b039091169063ad615dec9060640160206040518083038186803b1580156119ed57600080fd5b505afa158015611a01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a259190612be9565b93505050505b92915050565b6000546201000090046001600160a01b03163314611a62576040516305e7700560e51b815260040160405180910390fd5b60095460408051918252602082018390527f801306575ef2eb7d5ec12da38bf892a7872d76caf0beb1cec0779abeb71ff3a9910160405180910390a1600955565b600280541415611ac657604051633ee5aeb560e01b815260040160405180910390fd5b600280556000611adf6001600160a01b0384168361227c565b336000908152600a602090815260408083206001600160a01b0388168452909152902054909150811115611b265760405163c0993c3760e01b815260040160405180910390fd5b6000611b328484611696565b60065460045460085492935060009283926001600160a01b039081169263e8e3370092911690899087908a90611b7b90611b7490670de0b6b3a7640000612b73565b8a90612463565b611bae611b9e600854670de0b6b3a7640000611b979190612b73565b8d90612463565b6001600160a01b038f1690612533565b3060095442611bbd9190612a18565b60405160e08a901b6001600160e01b03191681526001600160a01b039889166004820152968816602488015260448701959095526064860193909352608485019190915260a484015290921660c482015260e481019190915261010401606060405180830381600087803b158015611c3457600080fd5b505af1158015611c48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c6c9190612c75565b9093509150611c8690506001600160a01b0387168361227c565b336000908152600a602090815260408083206001600160a01b038b16845290915281208054909190611cb9908490612b73565b9091555050336000908152600b602090815260408083206001600160a01b038a16845290915281208054839290611cf1908490612a18565b90915550506040518481526001600160a01b0387169033907f0657e0c8fff72ae811b8683a3411c30ebb5098754ec5e814687711e97cbd6db29060200160405180910390a35050600160025550505050565b600280541415611d6657604051633ee5aeb560e01b815260040160405180910390fd5b60028055336000908152600b602090815260408083206001600160a01b0386168452909152902054811115611dae5760405163dc93df4560e01b815260040160405180910390fd5b6006546004546009546000926001600160a01b039081169263baa2abde9291169086908690869081903090611de39042612a18565b60405160e089901b6001600160e01b03191681526001600160a01b039788166004820152958716602487015260448601949094526064850192909252608484015290921660a482015260c481019190915260e4016040805180830381600087803b158015611e5057600080fd5b505af1158015611e64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e889190612ca3565b9150611e9f90506001600160a01b0384168261227c565b336000908152600a602090815260408083206001600160a01b038816845290915281208054909190611ed2908490612a18565b9091555050336000908152600b602090815260408083206001600160a01b038716845290915281208054849290611f0a908490612b73565b90915550506040518281526001600160a01b0384169033907f8c6e1d3aa13e82e61da9350057ab35ded0bd548b8905b82dfa012876992b8ef5906020015b60405180910390a35050600160025550565b6000546201000090046001600160a01b03163314611f8b576040516305e7700560e51b815260040160405180910390fd5b6001600160a01b038216611fb25760405163604b48b960e11b815260040160405180910390fd5b6001600160a01b038216301415611fdc576040516306b3e95d60e21b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b0384161790558061203f57600080546040516001600160a01b03808616936201000090930416917fc606c9af1451cadeb333f6ff7b24a5540974f4e800bac274fa7fff9edc305cb191a35050565b61156f8261218f565b60028054141561206b57604051633ee5aeb560e01b815260040160405180910390fd5b600280556004546001600160a01b03838116911614156120a95760405163f099c8a560e01b81526001600160a01b03831660048201526024016106ee565b60006120be6001600160a01b0384168361227c565b336000908152600a602090815260408083206001600160a01b03881684529091529020549091508111156121055760405163c0993c3760e01b815260040160405180910390fd5b336000908152600a602090815260408083206001600160a01b038716845290915281208054839290612138908490612b73565b9091555061215290506001600160a01b0384163384612641565b6040518181526001600160a01b0384169033907f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b639890602001611f48565b6000805475ffffffffffffffffffffffffffffffffffffffff00001916620100006001600160a01b0384811682810293909317808555604051939492900416917f564590b81987d147246f63910a8e1ee4eb09c4d64cc75ee975a8ffedfcc2210e9190a350565b6040516001600160a01b03808516602483015283166044820152606481018290526122769085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b031990931692909217909152612676565b50505050565b600080836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156122b857600080fd5b505afa1580156122cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122f09190612bc6565b6122fb906012612cc7565b61230690600a612dce565b9050806001146123225761231a8184612ddd565b915050611a2b565b509092915050565b6001600160a01b038116600090815260018301602052604081205480612354576000915050611a2b565b6000612361600183612b73565b90506000600161236f875490565b6123799190612b73565b905080821461240557600086600001828154811061239957612399612a63565b60009182526020909120015487546001600160a01b03909116915081908890859081106123c8576123c8612a63565b600091825260208083209190910180546001600160a01b0319166001600160a01b0394851617905592909116815260018801909152604090208390555b855486908061241657612416612dfc565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b038716825260018881019091526040822091909155935050505092915050565b60008080600019848609848602925082811083820303915050670de0b6b3a764000081106124b55760405163072fa3c960e31b815260048101829052670de0b6b3a764000060248201526044016106ee565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff8111826124ef5780670de0b6b3a7640000850401945050505050611a2b565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600080836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561256f57600080fd5b505afa158015612583573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125a79190612bc6565b6125b2906012612cc7565b6125bd90600a612dce565b9050806001146123225761231a8184612e12565b6001600160a01b0381166000908152600183016020526040812054156125f957506000611a2b565b508154600180820184556000848152602080822090930180546001600160a01b0319166001600160a01b03959095169485179055845493815293810190915260409092205590565b6040516001600160a01b03831660248201526044810182905261267190849063a9059cbb60e01b9060640161222a565b505050565b6040805180820190915260208082527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65649082015282906000906126c5906001600160a01b038416908590612700565b80519091501561227657808060200190518101906126e391906129e5565b61227657604051639b8d506160e01b815260040160405180910390fd5b6060833b61272c5760405163dc5dd7fd60e01b81526001600160a01b03851660048201526024016106ee565b600080856001600160a01b0316856040516127479190612e60565b6000604051808303816000865af19150503d8060008114612784576040519150601f19603f3d011682016040523d82523d6000602084013e612789565b606091505b50915091506127998282866127a5565b925050505b9392505050565b606083156127b457508161279e565b8251156127c45782518060208501fd5b8160405162461bcd60e51b81526004016106ee9190612e7c565b6000602082840312156127f057600080fd5b5035919050565b6001600160a01b0381168114610a9e57600080fd5b600080600080600060a0868803121561282457600080fd5b853561282f816127f7565b9450602086013561283f816127f7565b9350604086013561284f816127f7565b9250606086013561285f816127f7565b9150608086013561286f816127f7565b809150509295509295909350565b6000806040838503121561289057600080fd5b823561289b816127f7565b946020939093013593505050565b6000602082840312156128bb57600080fd5b813561279e816127f7565b600081518084526020808501945080840160005b838110156128ff5781516001600160a01b0316875295820195908201906001016128da565b509495945050505050565b60208152600061279e60208301846128c6565b8015158114610a9e57600080fd5b6000806000806080858703121561294157600080fd5b843561294c816127f7565b9350602085013561295c816127f7565b92506040850135915060608501356129738161291d565b939692955090935050565b6000806040838503121561299157600080fd5b823561299c816127f7565b915060208301356129ac816127f7565b809150509250929050565b600080604083850312156129ca57600080fd5b82356129d5816127f7565b915060208301356129ac8161291d565b6000602082840312156129f757600080fd5b815161279e8161291d565b634e487b7160e01b600052601160045260246000fd5b60008219821115612a2b57612a2b612a02565b500190565b600060208284031215612a4257600080fd5b815161279e816127f7565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000600019821415612a8d57612a8d612a02565b5060010190565b828152604060208201526000612aad60408301846128c6565b949350505050565b60006020808385031215612ac857600080fd5b825167ffffffffffffffff80821115612ae057600080fd5b818501915085601f830112612af457600080fd5b815181811115612b0657612b06612a4d565b8060051b604051601f19603f83011681018181108582111715612b2b57612b2b612a4d565b604052918252848201925083810185019188831115612b4957600080fd5b938501935b82851015612b6757845184529385019392850192612b4e565b98975050505050505050565b600082821015612b8557612b85612a02565b500390565b85815284602082015260a060408201526000612ba960a08301866128c6565b6001600160a01b0394909416606083015250608001529392505050565b600060208284031215612bd857600080fd5b815160ff8116811461279e57600080fd5b600060208284031215612bfb57600080fd5b5051919050565b80516dffffffffffffffffffffffffffff81168114612c2057600080fd5b919050565b600080600060608486031215612c3a57600080fd5b612c4384612c02565b9250612c5160208501612c02565b9150604084015163ffffffff81168114612c6a57600080fd5b809150509250925092565b600080600060608486031215612c8a57600080fd5b8351925060208401519150604084015190509250925092565b60008060408385031215612cb657600080fd5b505080516020909101519092909150565b600060ff821660ff841680821015612ce157612ce1612a02565b90039392505050565b600181815b80851115612d25578160001904821115612d0b57612d0b612a02565b80851615612d1857918102915b93841c9390800290612cef565b509250929050565b600082612d3c57506001611a2b565b81612d4957506000611a2b565b8160018114612d5f5760028114612d6957612d85565b6001915050611a2b565b60ff841115612d7a57612d7a612a02565b50506001821b611a2b565b5060208310610133831016604e8410600b8410161715612da8575081810a611a2b565b612db28383612cea565b8060001904821115612dc657612dc6612a02565b029392505050565b600061279e60ff841683612d2d565b6000816000190483118215151615612df757612df7612a02565b500290565b634e487b7160e01b600052603160045260246000fd5b600082612e2f57634e487b7160e01b600052601260045260246000fd5b500490565b60005b83811015612e4f578181015183820152602001612e37565b838111156122765750506000910152565b60008251612e72818460208701612e34565b9190910192915050565b6020815260008251806020840152612e9b816040850160208701612e34565b601f01601f1916919091016040019291505056fea164736f6c6343000809000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101b95760003560e01c80638f601f66116100f9578063c14edd7911610097578063e3056a3411610071578063e3056a34146103d9578063e7f3028c146103ec578063e9cbd822146103ff578063f3fef3a31461041257600080fd5b8063c14edd791461038a578063d03153aa146103bd578063ddc12526146103c657600080fd5b8063942dbff4116100d3578063942dbff414610330578063b221728114610339578063b9b8c24614610364578063bb5043171461037757600080fd5b80638f601f66146102d15780638f79306e1461030a57806393ad9f171461031d57600080fd5b806347e7ef24116101665780635e6fdf43116101405780635e6fdf43146102835780637e83f7d71461029857806385881e2a146102ab578063863a03e0146102be57600080fd5b806347e7ef241461024a57806348be77191461025d578063570ca7351461027057600080fd5b80631694505e116101975780631694505e1461021c578063238efcbc1461022f5780632630c12f1461023757600080fd5b80630c340a24146101be578063117da1ee146101f45780631459457a14610209575b600080fd5b6000546101d7906201000090046001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6102076102023660046127de565b610425565b005b61020761021736600461280c565b610497565b6006546101d7906001600160a01b031681565b6102076105f3565b6005546101d7906001600160a01b031681565b61020761025836600461287d565b610688565b61020761026b3660046128a9565b6107a9565b6007546101d7906001600160a01b031681565b61028b610aa1565b6040516101eb919061290a565b6102076102a636600461292b565b610b6a565b6102076102b93660046128a9565b6110ef565b6102076102cc3660046128a9565b611573565b6102fc6102df36600461297e565b600a60209081526000928352604080842090915290825290205481565b6040519081526020016101eb565b6102fc61031836600461287d565b611696565b61020761032b3660046127de565b611a31565b6102fc60095481565b6102fc61034736600461297e565b600b60209081526000928352604080842090915290825290205481565b61020761037236600461287d565b611aa3565b61020761038536600461287d565b611d43565b6103ad6103983660046128a9565b600c6020526000908152604090205460ff1681565b60405190151581526020016101eb565b6102fc60085481565b6102076103d43660046129b7565b611f5a565b6001546101d7906001600160a01b031681565b6003546101d7906001600160a01b031681565b6004546101d7906001600160a01b031681565b61020761042036600461287d565b612048565b6000546201000090046001600160a01b03163314610456576040516305e7700560e51b815260040160405180910390fd5b60085460408051918252602082018390527fddd31550b26e9ef8ade466958be83ff8a014d9b4f36d546b61a6847a45306575910160405180910390a1600855565b60005460ff161580156104b15750600054610100900460ff165b156104cf57604051631ee1e30360e21b815260040160405180910390fd5b60005460ff161580156104ec576000805461ffff19166101011790555b6104f53361218f565b600380546001600160a01b038881166001600160a01b0319928316179092556004805488841690831681178255600580548986169085161790556006805488861690851681179091556007805495881695909416949094179092556611c37937e080006008556104b060095560405163095ea7b360e01b81529081019290925260001960248301529063095ea7b390604401602060405180830381600087803b1580156105a157600080fd5b505af11580156105b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d991906129e5565b5080156105eb576000805460ff191690555b505050505050565b6001546001600160a01b0316331461061e5760405163aec80d4b60e01b815260040160405180910390fd5b60015460008054620100006001600160a01b0393841681810275ffffffffffffffffffffffffffffffffffffffff00001990931692909217808455604051929491900416917f564590b81987d147246f63910a8e1ee4eb09c4d64cc75ee975a8ffedfcc2210e91a3565b6002805414156106ab57604051633ee5aeb560e01b815260040160405180910390fd5b600280556001600160a01b0382166000908152600e602052604090205482906106f75760405163497e1e0360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b61070c6001600160a01b0384163330856121f6565b60006107216001600160a01b0385168461227c565b336000908152600a602090815260408083206001600160a01b0389168452909152812080549293508392909190610759908490612a18565b90915550506040518181526001600160a01b0385169033907f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f629060200160405180910390a3505060016002555050565b6000546201000090046001600160a01b031633146107da576040516305e7700560e51b815260040160405180910390fd5b6001600160a01b0381166000908152600e602052604090205461081b5760405163635c3e1f60e11b81526001600160a01b03821660048201526024016106ee565b610826600d8261232a565b15610a9e5760065460405163095ea7b360e01b81526001600160a01b039182166004820152600060248201529082169063095ea7b390604401602060405180830381600087803b15801561087957600080fd5b505af115801561088d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b191906129e5565b506006546040805163c45a015560e01b815290516000926001600160a01b03169163c45a0155916004808301926020929190829003018186803b1580156108f757600080fd5b505afa15801561090b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092f9190612a30565b6004805460405163e6a4390560e01b81526001600160a01b0391821692810192909252848116602483015291925060009183169063e6a439059060440160206040518083038186803b15801561098457600080fd5b505afa158015610998573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bc9190612a30565b90506001600160a01b03811615610a555760065460405163095ea7b360e01b81526001600160a01b039182166004820152600060248201529082169063095ea7b390604401602060405180830381600087803b158015610a1b57600080fd5b505af1158015610a2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5391906129e5565b505b6001600160a01b0383166000818152600c6020526040808220805460ff19169055517fbd6c0ac05a911841e71daa23bb8022779f3957fad4fa3546eb22a1782c747c839190a250505b50565b600d546060908067ffffffffffffffff811115610ac057610ac0612a4d565b604051908082528060200260200182016040528015610ae9578160200160208202803683370190505b50915060005b81811015610b6557600d805482908110610b0b57610b0b612a63565b9060005260206000200160009054906101000a90046001600160a01b0316838281518110610b3b57610b3b612a63565b6001600160a01b039092166020928302919091019091015280610b5d81612a79565b915050610aef565b505090565b600280541415610b8d57604051633ee5aeb560e01b815260040160405180910390fd5b6002805560045484906001600160a01b03808316911614801590610bc757506001600160a01b0381166000908152600e6020526040902054155b15610bf05760405163569695af60e01b81526001600160a01b03821660048201526024016106ee565b60045484906001600160a01b03808316911614801590610c2657506001600160a01b0381166000908152600e6020526040902054155b15610c4f5760405163569695af60e01b81526001600160a01b03821660048201526024016106ee565b6000610c646001600160a01b0388168661227c565b336000908152600a602090815260408083206001600160a01b038c168452909152902054909150811115610cab5760405163c0993c3760e01b815260040160405180910390fd5b856001600160a01b0316876001600160a01b03161415610ce957604051630e9f73ab60e21b81526001600160a01b03881660048201526024016106ee565b600084610cf7576002610cfa565b60035b60ff1667ffffffffffffffff811115610d1557610d15612a4d565b604051908082528060200260200182016040528015610d3e578160200160208202803683370190505b5090508781600081518110610d5557610d55612a63565b60200260200101906001600160a01b031690816001600160a01b03168152505084610d805786610d8d565b6003546001600160a01b03165b81600181518110610da057610da0612a63565b60200260200101906001600160a01b031690816001600160a01b0316815250508415610dfb578681600281518110610dda57610dda612a63565b60200260200101906001600160a01b031690816001600160a01b0316815250505b60065460405163d06ca61f60e01b81526000916001600160a01b03169063d06ca61f90610e2e908a908690600401612a94565b60006040518083038186803b158015610e4657600080fd5b505afa158015610e5a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e829190810190612ab5565b90506000610ec88260018451610e989190612b73565b81518110610ea857610ea8612a63565b60200260200101518a6001600160a01b031661227c90919063ffffffff16565b6006546008549192506001600160a01b0316906338ed1739908a90610f1490610f0490610efd90670de0b6b3a7640000612b73565b8690612463565b6001600160a01b038e1690612533565b863060095442610f249190612a18565b6040518663ffffffff1660e01b8152600401610f44959493929190612b8a565b600060405180830381600087803b158015610f5e57600080fd5b505af1158015610f72573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f9a9190810190612ab5565b91506000610fd483600081518110610fb457610fb4612a63565b60200260200101518c6001600160a01b031661227c90919063ffffffff16565b90506000610ffa8460018651610fea9190612b73565b81518110610fb457610fb4612a63565b905081600a6000336001600160a01b03166001600160a01b0316815260200190815260200160002060008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546110549190612b73565b9091555050336000908152600a602090815260408083206001600160a01b038f1684529091528120805483929061108c908490612a18565b909155505060408051838152602081018390526001600160a01b03808e1692908f169133917fcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e46062910160405180910390a45050600160025550505050505050505050565b6000546201000090046001600160a01b03163314611120576040516305e7700560e51b815260040160405180910390fd5b6001600160a01b0381166000908152600e602052604090205415611162576040516382cce5f360e01b81526001600160a01b03821660048201526024016106ee565b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561119d57600080fd5b505afa1580156111b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d59190612bc6565b905060ff8116611203576040516316d13e4960e21b81526001600160a01b03831660048201526024016106ee565b601260ff8216111561123c576040516321b3807960e11b81526001600160a01b038316600482015260ff821660248201526044016106ee565b611247600d836125d1565b1561156f5760065460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529083169063095ea7b390604401602060405180830381600087803b15801561129b57600080fd5b505af11580156112af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d391906129e5565b506006546040805163c45a015560e01b815290516000926001600160a01b03169163c45a0155916004808301926020929190829003018186803b15801561131957600080fd5b505afa15801561132d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113519190612a30565b6004805460405163e6a4390560e01b81526001600160a01b0391821692810192909252858116602483015291925060009183169063e6a439059060440160206040518083038186803b1580156113a657600080fd5b505afa1580156113ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113de9190612a30565b90506001600160a01b03811661147a57600480546040516364e329cb60e11b81526001600160a01b0391821692810192909252858116602483015283169063c9c6539690604401602060405180830381600087803b15801561143f57600080fd5b505af1158015611453573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114779190612a30565b90505b60065460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529082169063095ea7b390604401602060405180830381600087803b1580156114c957600080fd5b505af11580156114dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061150191906129e5565b506001600160a01b0384166000818152600c602052604090819020805460ff19166001179055517f55011b433ad455f23aa134ee4f1fcd2190a063cb514134436b32358ead356ada906115649084906001600160a01b0391909116815260200190565b60405180910390a250505b5050565b6000546201000090046001600160a01b031633146115a4576040516305e7700560e51b815260040160405180910390fd5b60045481906001600160a01b03808316911614806115d957506001600160a01b0381166000908152600e602052604090205415155b1561160257604051631af19dff60e01b81526001600160a01b03831660048201526024016106ee565b6007546040516370a0823160e01b815230600482015261156f916001600160a01b0390811691908516906370a082319060240160206040518083038186803b15801561164d57600080fd5b505afa158015611661573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116859190612be9565b6001600160a01b0385169190612641565b600080600660009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b1580156116e757600080fd5b505afa1580156116fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171f9190612a30565b6004805460405163e6a4390560e01b81526001600160a01b03918216928101929092528681166024830152919091169063e6a439059060440160206040518083038186803b15801561177057600080fd5b505afa158015611784573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a89190612a30565b9050600080826001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156117e657600080fd5b505afa1580156117fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061181e9190612c25565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff1691508160001480611850575080155b156118f757600554604051630787c49960e21b81526001600160a01b0388811660048301526118ed921690631e1f12649060240160206040518083038186803b15801561189c57600080fd5b505afa1580156118b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d49190612be9565b6118e76001600160a01b0389168861227c565b90612463565b9350505050611a2b565b6004546001600160a01b0380881691161061199b57600654604051632b58577b60e21b81526004810187905260248101849052604481018390526001600160a01b039091169063ad615dec9060640160206040518083038186803b15801561195e57600080fd5b505afa158015611972573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119969190612be9565b611a25565b600654604051632b58577b60e21b81526004810187905260248101839052604481018490526001600160a01b039091169063ad615dec9060640160206040518083038186803b1580156119ed57600080fd5b505afa158015611a01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a259190612be9565b93505050505b92915050565b6000546201000090046001600160a01b03163314611a62576040516305e7700560e51b815260040160405180910390fd5b60095460408051918252602082018390527f801306575ef2eb7d5ec12da38bf892a7872d76caf0beb1cec0779abeb71ff3a9910160405180910390a1600955565b600280541415611ac657604051633ee5aeb560e01b815260040160405180910390fd5b600280556000611adf6001600160a01b0384168361227c565b336000908152600a602090815260408083206001600160a01b0388168452909152902054909150811115611b265760405163c0993c3760e01b815260040160405180910390fd5b6000611b328484611696565b60065460045460085492935060009283926001600160a01b039081169263e8e3370092911690899087908a90611b7b90611b7490670de0b6b3a7640000612b73565b8a90612463565b611bae611b9e600854670de0b6b3a7640000611b979190612b73565b8d90612463565b6001600160a01b038f1690612533565b3060095442611bbd9190612a18565b60405160e08a901b6001600160e01b03191681526001600160a01b039889166004820152968816602488015260448701959095526064860193909352608485019190915260a484015290921660c482015260e481019190915261010401606060405180830381600087803b158015611c3457600080fd5b505af1158015611c48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c6c9190612c75565b9093509150611c8690506001600160a01b0387168361227c565b336000908152600a602090815260408083206001600160a01b038b16845290915281208054909190611cb9908490612b73565b9091555050336000908152600b602090815260408083206001600160a01b038a16845290915281208054839290611cf1908490612a18565b90915550506040518481526001600160a01b0387169033907f0657e0c8fff72ae811b8683a3411c30ebb5098754ec5e814687711e97cbd6db29060200160405180910390a35050600160025550505050565b600280541415611d6657604051633ee5aeb560e01b815260040160405180910390fd5b60028055336000908152600b602090815260408083206001600160a01b0386168452909152902054811115611dae5760405163dc93df4560e01b815260040160405180910390fd5b6006546004546009546000926001600160a01b039081169263baa2abde9291169086908690869081903090611de39042612a18565b60405160e089901b6001600160e01b03191681526001600160a01b039788166004820152958716602487015260448601949094526064850192909252608484015290921660a482015260c481019190915260e4016040805180830381600087803b158015611e5057600080fd5b505af1158015611e64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e889190612ca3565b9150611e9f90506001600160a01b0384168261227c565b336000908152600a602090815260408083206001600160a01b038816845290915281208054909190611ed2908490612a18565b9091555050336000908152600b602090815260408083206001600160a01b038716845290915281208054849290611f0a908490612b73565b90915550506040518281526001600160a01b0384169033907f8c6e1d3aa13e82e61da9350057ab35ded0bd548b8905b82dfa012876992b8ef5906020015b60405180910390a35050600160025550565b6000546201000090046001600160a01b03163314611f8b576040516305e7700560e51b815260040160405180910390fd5b6001600160a01b038216611fb25760405163604b48b960e11b815260040160405180910390fd5b6001600160a01b038216301415611fdc576040516306b3e95d60e21b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b0384161790558061203f57600080546040516001600160a01b03808616936201000090930416917fc606c9af1451cadeb333f6ff7b24a5540974f4e800bac274fa7fff9edc305cb191a35050565b61156f8261218f565b60028054141561206b57604051633ee5aeb560e01b815260040160405180910390fd5b600280556004546001600160a01b03838116911614156120a95760405163f099c8a560e01b81526001600160a01b03831660048201526024016106ee565b60006120be6001600160a01b0384168361227c565b336000908152600a602090815260408083206001600160a01b03881684529091529020549091508111156121055760405163c0993c3760e01b815260040160405180910390fd5b336000908152600a602090815260408083206001600160a01b038716845290915281208054839290612138908490612b73565b9091555061215290506001600160a01b0384163384612641565b6040518181526001600160a01b0384169033907f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b639890602001611f48565b6000805475ffffffffffffffffffffffffffffffffffffffff00001916620100006001600160a01b0384811682810293909317808555604051939492900416917f564590b81987d147246f63910a8e1ee4eb09c4d64cc75ee975a8ffedfcc2210e9190a350565b6040516001600160a01b03808516602483015283166044820152606481018290526122769085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b031990931692909217909152612676565b50505050565b600080836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156122b857600080fd5b505afa1580156122cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122f09190612bc6565b6122fb906012612cc7565b61230690600a612dce565b9050806001146123225761231a8184612ddd565b915050611a2b565b509092915050565b6001600160a01b038116600090815260018301602052604081205480612354576000915050611a2b565b6000612361600183612b73565b90506000600161236f875490565b6123799190612b73565b905080821461240557600086600001828154811061239957612399612a63565b60009182526020909120015487546001600160a01b03909116915081908890859081106123c8576123c8612a63565b600091825260208083209190910180546001600160a01b0319166001600160a01b0394851617905592909116815260018801909152604090208390555b855486908061241657612416612dfc565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b038716825260018881019091526040822091909155935050505092915050565b60008080600019848609848602925082811083820303915050670de0b6b3a764000081106124b55760405163072fa3c960e31b815260048101829052670de0b6b3a764000060248201526044016106ee565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff8111826124ef5780670de0b6b3a7640000850401945050505050611a2b565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600080836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561256f57600080fd5b505afa158015612583573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125a79190612bc6565b6125b2906012612cc7565b6125bd90600a612dce565b9050806001146123225761231a8184612e12565b6001600160a01b0381166000908152600183016020526040812054156125f957506000611a2b565b508154600180820184556000848152602080822090930180546001600160a01b0319166001600160a01b03959095169485179055845493815293810190915260409092205590565b6040516001600160a01b03831660248201526044810182905261267190849063a9059cbb60e01b9060640161222a565b505050565b6040805180820190915260208082527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65649082015282906000906126c5906001600160a01b038416908590612700565b80519091501561227657808060200190518101906126e391906129e5565b61227657604051639b8d506160e01b815260040160405180910390fd5b6060833b61272c5760405163dc5dd7fd60e01b81526001600160a01b03851660048201526024016106ee565b600080856001600160a01b0316856040516127479190612e60565b6000604051808303816000865af19150503d8060008114612784576040519150601f19603f3d011682016040523d82523d6000602084013e612789565b606091505b50915091506127998282866127a5565b925050505b9392505050565b606083156127b457508161279e565b8251156127c45782518060208501fd5b8160405162461bcd60e51b81526004016106ee9190612e7c565b6000602082840312156127f057600080fd5b5035919050565b6001600160a01b0381168114610a9e57600080fd5b600080600080600060a0868803121561282457600080fd5b853561282f816127f7565b9450602086013561283f816127f7565b9350604086013561284f816127f7565b9250606086013561285f816127f7565b9150608086013561286f816127f7565b809150509295509295909350565b6000806040838503121561289057600080fd5b823561289b816127f7565b946020939093013593505050565b6000602082840312156128bb57600080fd5b813561279e816127f7565b600081518084526020808501945080840160005b838110156128ff5781516001600160a01b0316875295820195908201906001016128da565b509495945050505050565b60208152600061279e60208301846128c6565b8015158114610a9e57600080fd5b6000806000806080858703121561294157600080fd5b843561294c816127f7565b9350602085013561295c816127f7565b92506040850135915060608501356129738161291d565b939692955090935050565b6000806040838503121561299157600080fd5b823561299c816127f7565b915060208301356129ac816127f7565b809150509250929050565b600080604083850312156129ca57600080fd5b82356129d5816127f7565b915060208301356129ac8161291d565b6000602082840312156129f757600080fd5b815161279e8161291d565b634e487b7160e01b600052601160045260246000fd5b60008219821115612a2b57612a2b612a02565b500190565b600060208284031215612a4257600080fd5b815161279e816127f7565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000600019821415612a8d57612a8d612a02565b5060010190565b828152604060208201526000612aad60408301846128c6565b949350505050565b60006020808385031215612ac857600080fd5b825167ffffffffffffffff80821115612ae057600080fd5b818501915085601f830112612af457600080fd5b815181811115612b0657612b06612a4d565b8060051b604051601f19603f83011681018181108582111715612b2b57612b2b612a4d565b604052918252848201925083810185019188831115612b4957600080fd5b938501935b82851015612b6757845184529385019392850192612b4e565b98975050505050505050565b600082821015612b8557612b85612a02565b500390565b85815284602082015260a060408201526000612ba960a08301866128c6565b6001600160a01b0394909416606083015250608001529392505050565b600060208284031215612bd857600080fd5b815160ff8116811461279e57600080fd5b600060208284031215612bfb57600080fd5b5051919050565b80516dffffffffffffffffffffffffffff81168114612c2057600080fd5b919050565b600080600060608486031215612c3a57600080fd5b612c4384612c02565b9250612c5160208501612c02565b9150604084015163ffffffff81168114612c6a57600080fd5b809150509250925092565b600080600060608486031215612c8a57600080fd5b8351925060208401519150604084015190509250925092565b60008060408385031215612cb657600080fd5b505080516020909101519092909150565b600060ff821660ff841680821015612ce157612ce1612a02565b90039392505050565b600181815b80851115612d25578160001904821115612d0b57612d0b612a02565b80851615612d1857918102915b93841c9390800290612cef565b509250929050565b600082612d3c57506001611a2b565b81612d4957506000611a2b565b8160018114612d5f5760028114612d6957612d85565b6001915050611a2b565b60ff841115612d7a57612d7a612a02565b50506001821b611a2b565b5060208310610133831016604e8410600b8410161715612da8575081810a611a2b565b612db28383612cea565b8060001904821115612dc657612dc6612a02565b029392505050565b600061279e60ff841683612d2d565b6000816000190483118215151615612df757612df7612a02565b500290565b634e487b7160e01b600052603160045260246000fd5b600082612e2f57634e487b7160e01b600052601260045260246000fd5b500490565b60005b83811015612e4f578181015183820152602001612e37565b838111156122765750506000910152565b60008251612e72818460208701612e34565b9190910192915050565b6020815260008251806020840152612e9b816040850160208701612e34565b601f01601f1916919091016040019291505056fea164736f6c6343000809000a",
  "devdoc": {
    "errors": {
      "ExchangeFundDepositableTokenAlreadyListed(address)": [
        {
          "details": "Thrown when trying to list depositable token that's already listed.",
          "params": {
            "token": "The address of the token contract."
          }
        }
      ],
      "ExchangeFundDepositableTokenNotListed(address)": [
        {
          "details": "Thrown when trying to unlist depositable token that's not listed.",
          "params": {
            "token": "The address of the token contract."
          }
        }
      ],
      "ExchangeFundDepositableTokenTooLargeDecimals(address,uint8)": [
        {
          "details": "Thrown when trying to list depositable token that has too large decimals.",
          "params": {
            "token": "The address of the token contract."
          }
        }
      ],
      "ExchangeFundDepositableTokenZeroDecimals(address)": [
        {
          "details": "Thrown when trying to list depositable token that has zero decimals.",
          "params": {
            "token": "The address of the token contract."
          }
        }
      ],
      "ExchangeFundTokenNotAllowedToBeDeposited(address)": [
        {
          "details": "Thrown when interacting with a token that's not allowed to be deposited.",
          "params": {
            "token": "The address of the token contract."
          }
        }
      ],
      "ExchangeFundTokenNotAllowedToBeSalvaged(address)": [
        {
          "details": "Thrown when trying to salvage one of depositable tokens or stablecoin.",
          "params": {
            "token": "The address of the token contract."
          }
        }
      ],
      "ExchangeFundTokenNotAllowedToBeSwapped(address)": [
        {
          "details": "Thrown when trying to swap token that's not allowed to be swapped.",
          "params": {
            "token": "The address of the token contract."
          }
        }
      ],
      "ExchangeFundTokenNotAllowedToBeWithdrawn(address)": [
        {
          "details": "Thrown when interacting with a token that's not allowed to be withdrawn.",
          "params": {
            "token": "The address of the token contract."
          }
        }
      ]
    },
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 5927,
        "contract": "contracts/ExchangeFund.sol:ExchangeFund",
        "label": "initializing",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 5929,
        "contract": "contracts/ExchangeFund.sol:ExchangeFund",
        "label": "initialized",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 4117,
        "contract": "contracts/ExchangeFund.sol:ExchangeFund",
        "label": "governor",
        "offset": 2,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 4119,
        "contract": "contracts/ExchangeFund.sol:ExchangeFund",
        "label": "pendingGovernor",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 5645,
        "contract": "contracts/ExchangeFund.sol:ExchangeFund",
        "label": "status",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 2988,
        "contract": "contracts/ExchangeFund.sol:ExchangeFund",
        "label": "wrappedNativeCurrency",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(IERC20)4337"
      },
      {
        "astId": 2991,
        "contract": "contracts/ExchangeFund.sol:ExchangeFund",
        "label": "stablecoin",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(IERC20)4337"
      },
      {
        "astId": 2994,
        "contract": "contracts/ExchangeFund.sol:ExchangeFund",
        "label": "priceOracle",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(IPriceOracle)4427"
      },
      {
        "astId": 2997,
        "contract": "contracts/ExchangeFund.sol:ExchangeFund",
        "label": "uniswapV2Router",
        "offset": 0,
        "slot": "6",
        "type": "t_contract(IUniswapV2Router)4593"
      },
      {
        "astId": 2999,
        "contract": "contracts/ExchangeFund.sol:ExchangeFund",
        "label": "operator",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      },
      {
        "astId": 3001,
        "contract": "contracts/ExchangeFund.sol:ExchangeFund",
        "label": "slippageTolerance",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 3003,
        "contract": "contracts/ExchangeFund.sol:ExchangeFund",
        "label": "swapDeadline",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 3010,
        "contract": "contracts/ExchangeFund.sol:ExchangeFund",
        "label": "deposits",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_mapping(t_contract(IERC20)4337,t_uint256))"
      },
      {
        "astId": 3017,
        "contract": "contracts/ExchangeFund.sol:ExchangeFund",
        "label": "liquidity",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_mapping(t_contract(IERC20)4337,t_uint256))"
      },
      {
        "astId": 3022,
        "contract": "contracts/ExchangeFund.sol:ExchangeFund",
        "label": "depositableTokens",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_contract(IERC20)4337,t_bool)"
      },
      {
        "astId": 3025,
        "contract": "contracts/ExchangeFund.sol:ExchangeFund",
        "label": "depositableTokensSet",
        "offset": 0,
        "slot": "13",
        "type": "t_struct(Set)5127_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)4337": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IPriceOracle)4427": {
        "encoding": "inplace",
        "label": "contract IPriceOracle",
        "numberOfBytes": "20"
      },
      "t_contract(IUniswapV2Router)4593": {
        "encoding": "inplace",
        "label": "contract IUniswapV2Router",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_contract(IERC20)4337,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(contract IERC20 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_contract(IERC20)4337,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_contract(IERC20)4337,t_bool)": {
        "encoding": "mapping",
        "key": "t_contract(IERC20)4337",
        "label": "mapping(contract IERC20 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_contract(IERC20)4337,t_uint256)": {
        "encoding": "mapping",
        "key": "t_contract(IERC20)4337",
        "label": "mapping(contract IERC20 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(Set)5127_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableAddressSet.Set",
        "members": [
          {
            "astId": 5122,
            "contract": "contracts/ExchangeFund.sol:ExchangeFund",
            "label": "elements",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 5126,
            "contract": "contracts/ExchangeFund.sol:ExchangeFund",
            "label": "indexes",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_uint256)"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}