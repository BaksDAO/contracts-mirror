{
  "address": "0x91ee0d678485d83824a07267053AB5D6ee0B72eF",
  "abi": [
    {
      "inputs": [],
      "name": "BaksDAOBorrowBelowMinimumPrincipalAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaksDAOBorrowZeroAmount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "BaksDAOCollateralTokenAlreadyListed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "BaksDAOCollateralTokenNotListed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "name": "BaksDAOCollateralTokenTooLargeDecimals",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "BaksDAOCollateralTokenZeroDecimals",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaksDAODepositZeroAmount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "BaksDAOInactiveLoan",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialLoanToValueRatio",
          "type": "uint256"
        }
      ],
      "name": "BaksDAOInitialLoanToValueRatioTooHigh",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minimumRequiredSecurityAmount",
          "type": "uint256"
        }
      ],
      "name": "BaksDAOInsufficientSecurityAmount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "BaksDAOLoanIsSubjectToLiquidation",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "BaksDAOLoanNotSubjectToLiquidation",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "BaksDAONativeCurrencyCollateralNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaksDAONativeCurrencyTransferFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaksDAONoNeedToRebalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaksDAOPlainNativeCurrencyTransferNotAllowed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stabilizationFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "exchangeFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "developmentFee",
          "type": "uint256"
        }
      ],
      "name": "BaksDAOPlatformFeesDontSumUpToOne",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BaksDAORepayZeroAmount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shortage",
          "type": "uint256"
        }
      ],
      "name": "BaksDAOStabilizationFundOutOfFunds",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "BaksDAOTokenNotAllowedAsCollateral",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "BaksDAOTokenNotAllowedToBeSalvaged",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "CallToNonContract",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ContractAlreadyInitialized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "prod1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "denominator",
          "type": "uint256"
        }
      ],
      "name": "FixedPointMathMulDivOverflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GovernedCantGoverItself",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GovernedGovernorZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GovernedOnlyGovernorAllowedToCall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GovernedOnlyPendingGovernorAllowedToCall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SafeERC20NoReturnData",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "principalAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "initialLoanToValueRatio",
          "type": "uint256"
        }
      ],
      "name": "Borrow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "CollateralTokenListed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "CollateralTokenUnlisted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "governor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newGovernor",
          "type": "address"
        }
      ],
      "name": "GovernanceTransited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "initialLoanToValueRatio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newInitialLoanToValueRatio",
          "type": "uint256"
        }
      ],
      "name": "InitialLoanToValueRatioUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Liquidated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liqudationLoanToValueRatio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newLiquidationLoanToValueRatio",
          "type": "uint256"
        }
      ],
      "name": "LiquidationLoanToValueRatioUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "marginCallLoanToValueRatio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newMarginCallLoanToValueRatio",
          "type": "uint256"
        }
      ],
      "name": "MarginCallLoanToValueRatioUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minimumPrincipalAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newMinimumPrincipalAmount",
          "type": "uint256"
        }
      ],
      "name": "MinimumPrincipalAmountUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "governor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newGovernor",
          "type": "address"
        }
      ],
      "name": "PendingGovernanceTransition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stabilizationFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newStabilizationFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "exchangeFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newExchangeFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "developmentFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDevelopmentFee",
          "type": "uint256"
        }
      ],
      "name": "PlatformFeesUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "delta",
          "type": "int256"
        }
      ],
      "name": "Rebalance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rebalancingThreshold",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRebalancingThreshold",
          "type": "uint256"
        }
      ],
      "name": "RebalancingThresholdUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Repaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "principalAmount",
          "type": "uint256"
        }
      ],
      "name": "Repay",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stabilityFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newStabilityFee",
          "type": "uint256"
        }
      ],
      "name": "StabilityFeeUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "borrow",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isNativeCurrency",
              "type": "bool"
            },
            {
              "internalType": "contract IPriceOracle",
              "name": "priceOracle",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "stabilityFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stabilizationFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "exchangeFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "developmentFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "principalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastDepositAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastRepaymentAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct Loan.Data",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "borrowInNativeCurrency",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isNativeCurrency",
              "type": "bool"
            },
            {
              "internalType": "contract IPriceOracle",
              "name": "priceOracle",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "stabilityFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stabilizationFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "exchangeFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "developmentFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "principalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastDepositAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastRepaymentAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct Loan.Data",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "calculateLoanByCollateralAmount",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isNativeCurrency",
              "type": "bool"
            },
            {
              "internalType": "contract IPriceOracle",
              "name": "priceOracle",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "stabilityFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stabilizationFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "exchangeFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "developmentFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "principalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastDepositAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastRepaymentAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct Loan.Data",
          "name": "loan",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "principalAmount",
          "type": "uint256"
        }
      ],
      "name": "calculateLoanByPrincipalAmount",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isNativeCurrency",
              "type": "bool"
            },
            {
              "internalType": "contract IPriceOracle",
              "name": "priceOracle",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "stabilityFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stabilizationFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "exchangeFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "developmentFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "principalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastDepositAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastRepaymentAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct Loan.Data",
          "name": "loan",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "securityAmount",
          "type": "uint256"
        }
      ],
      "name": "calculateLoanBySecurityAmount",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isNativeCurrency",
              "type": "bool"
            },
            {
              "internalType": "contract IPriceOracle",
              "name": "priceOracle",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "stabilityFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stabilizationFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "exchangeFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "developmentFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "principalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastDepositAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastRepaymentAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct Loan.Data",
          "name": "loan",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "checkHealth",
      "outputs": [
        {
          "internalType": "enum Bank.Health",
          "name": "health",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "name": "collateralTokens",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "internalType": "contract IPriceOracle",
          "name": "priceOracle",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "stabilityFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stabilizationFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "exchangeFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "developmentFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initialLoanToValueRatio",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "marginCallLoanToValueRatio",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidationLoanToValueRatio",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "depositInNativeCurrency",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "developmentFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "developmentFund",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exchangeFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exchangeFund",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllowedCollateralTokens",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "internalType": "contract IPriceOracle",
              "name": "priceOracle",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "stabilityFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stabilizationFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "exchangeFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "developmentFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialLoanToValueRatio",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "marginCallLoanToValueRatio",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "liquidationLoanToValueRatio",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct CollateralToken.Data[]",
          "name": "allowedCollateralTokens",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "getLoanToValueRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "loanToValueRatio",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        }
      ],
      "name": "getLoans",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isNativeCurrency",
              "type": "bool"
            },
            {
              "internalType": "contract IPriceOracle",
              "name": "priceOracle",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "stabilityFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stabilizationFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "exchangeFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "developmentFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "principalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastDepositAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastRepaymentAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct Loan.Data[]",
          "name": "_loans",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalValueLocked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalValueLocked",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IWrappedNativeCurrency",
          "name": "_wrappedNativeCurrency",
          "type": "address"
        },
        {
          "internalType": "contract IMintableAndBurnableERC20",
          "name": "_stablecoin",
          "type": "address"
        },
        {
          "internalType": "contract IPriceOracle",
          "name": "_priceOracle",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_liquidator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_exchangeFund",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_developmentFund",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "liquidate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidationLoanToValueRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialLoanToValueRatio",
          "type": "uint256"
        }
      ],
      "name": "listCollateralToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "loanIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "loans",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isNativeCurrency",
          "type": "bool"
        },
        {
          "internalType": "contract IPriceOracle",
          "name": "priceOracle",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "stabilityFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stabilizationFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "exchangeFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "developmentFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "principalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastDepositAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastRepaymentAt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marginCallLoanToValueRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumPrincipalAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingGovernor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceOracle",
      "outputs": [
        {
          "internalType": "contract IPriceOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rebalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rebalancingThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "repay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "salvage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "newInitialLoanToValueRatio",
          "type": "uint256"
        }
      ],
      "name": "setInitialLoanToValueRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newLiquidationLoanToValueRatio",
          "type": "uint256"
        }
      ],
      "name": "setLiquidationLoanToValueRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMarginCallLoanToValueRatio",
          "type": "uint256"
        }
      ],
      "name": "setMarginCallLoanToValueRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMinimumPrincipalAmount",
          "type": "uint256"
        }
      ],
      "name": "setMinimumPrincipalAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newStabilizationFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newExchangeFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newDevelopmentFee",
          "type": "uint256"
        }
      ],
      "name": "setPlatformFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newRebalancingThreshold",
          "type": "uint256"
        }
      ],
      "name": "setRebalancingThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newStabilityFee",
          "type": "uint256"
        }
      ],
      "name": "setStabilityFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stabilityFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stabilizationFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stablecoin",
      "outputs": [
        {
          "internalType": "contract IMintableAndBurnableERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newGovernor",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "force",
          "type": "bool"
        }
      ],
      "name": "transitGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "unlistCollateralToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wrappedNativeCurrency",
      "outputs": [
        {
          "internalType": "contract IWrappedNativeCurrency",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x7a61c84663d552179443a1dc89f32dace315d383bf0e1ff5c9a534c50b58bc64",
  "receipt": {
    "to": null,
    "from": "0x21309DA9AD64eA82431758B27cbD63E5d53A556c",
    "contractAddress": "0x91ee0d678485d83824a07267053AB5D6ee0B72eF",
    "transactionIndex": 6,
    "gasUsed": "4082314",
    "logsBloom": "0x
    "blockHash": "0x06c95fb82f5e7efe22b75aca835fee4ed149ed66b7cca952fa310f64acd3796c",
    "transactionHash": "0x7a61c84663d552179443a1dc89f32dace315d383bf0e1ff5c9a534c50b58bc64",
    "logs": [],
    "blockNumber": 13812507,
    "cumulativeGasUsed": "7099927",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "bc61a727c19226a6a876172a110a900c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BaksDAOBorrowBelowMinimumPrincipalAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaksDAOBorrowZeroAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"BaksDAOCollateralTokenAlreadyListed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"BaksDAOCollateralTokenNotListed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"BaksDAOCollateralTokenTooLargeDecimals\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"BaksDAOCollateralTokenZeroDecimals\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaksDAODepositZeroAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"BaksDAOInactiveLoan\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialLoanToValueRatio\",\"type\":\"uint256\"}],\"name\":\"BaksDAOInitialLoanToValueRatioTooHigh\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minimumRequiredSecurityAmount\",\"type\":\"uint256\"}],\"name\":\"BaksDAOInsufficientSecurityAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"BaksDAOLoanIsSubjectToLiquidation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"BaksDAOLoanNotSubjectToLiquidation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"BaksDAONativeCurrencyCollateralNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaksDAONativeCurrencyTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaksDAONoNeedToRebalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaksDAOPlainNativeCurrencyTransferNotAllowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stabilizationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"developmentFee\",\"type\":\"uint256\"}],\"name\":\"BaksDAOPlatformFeesDontSumUpToOne\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BaksDAORepayZeroAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shortage\",\"type\":\"uint256\"}],\"name\":\"BaksDAOStabilizationFundOutOfFunds\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"BaksDAOTokenNotAllowedAsCollateral\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"BaksDAOTokenNotAllowedToBeSalvaged\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"CallToNonContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ContractAlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"prod1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"FixedPointMathMulDivOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GovernedCantGoverItself\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GovernedGovernorZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GovernedOnlyGovernorAllowedToCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GovernedOnlyPendingGovernorAllowedToCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeERC20NoReturnData\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"principalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"initialLoanToValueRatio\",\"type\":\"uint256\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"CollateralTokenListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"CollateralTokenUnlisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"GovernanceTransited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"initialLoanToValueRatio\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newInitialLoanToValueRatio\",\"type\":\"uint256\"}],\"name\":\"InitialLoanToValueRatioUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Liquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liqudationLoanToValueRatio\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newLiquidationLoanToValueRatio\",\"type\":\"uint256\"}],\"name\":\"LiquidationLoanToValueRatioUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"marginCallLoanToValueRatio\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMarginCallLoanToValueRatio\",\"type\":\"uint256\"}],\"name\":\"MarginCallLoanToValueRatioUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minimumPrincipalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMinimumPrincipalAmount\",\"type\":\"uint256\"}],\"name\":\"MinimumPrincipalAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"PendingGovernanceTransition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stabilizationFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newStabilizationFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"exchangeFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newExchangeFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"developmentFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDevelopmentFee\",\"type\":\"uint256\"}],\"name\":\"PlatformFeesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"Rebalance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rebalancingThreshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRebalancingThreshold\",\"type\":\"uint256\"}],\"name\":\"RebalancingThresholdUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Repaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"principalAmount\",\"type\":\"uint256\"}],\"name\":\"Repay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stabilityFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newStabilityFee\",\"type\":\"uint256\"}],\"name\":\"StabilityFeeUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"borrow\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isNativeCurrency\",\"type\":\"bool\"},{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stabilityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stabilizationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"developmentFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastDepositAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRepaymentAt\",\"type\":\"uint256\"}],\"internalType\":\"struct Loan.Data\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"borrowInNativeCurrency\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isNativeCurrency\",\"type\":\"bool\"},{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stabilityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stabilizationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"developmentFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastDepositAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRepaymentAt\",\"type\":\"uint256\"}],\"internalType\":\"struct Loan.Data\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"calculateLoanByCollateralAmount\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isNativeCurrency\",\"type\":\"bool\"},{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stabilityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stabilizationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"developmentFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastDepositAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRepaymentAt\",\"type\":\"uint256\"}],\"internalType\":\"struct Loan.Data\",\"name\":\"loan\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"principalAmount\",\"type\":\"uint256\"}],\"name\":\"calculateLoanByPrincipalAmount\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isNativeCurrency\",\"type\":\"bool\"},{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stabilityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stabilizationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"developmentFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastDepositAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRepaymentAt\",\"type\":\"uint256\"}],\"internalType\":\"struct Loan.Data\",\"name\":\"loan\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"securityAmount\",\"type\":\"uint256\"}],\"name\":\"calculateLoanBySecurityAmount\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isNativeCurrency\",\"type\":\"bool\"},{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stabilityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stabilizationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"developmentFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastDepositAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRepaymentAt\",\"type\":\"uint256\"}],\"internalType\":\"struct Loan.Data\",\"name\":\"loan\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"checkHealth\",\"outputs\":[{\"internalType\":\"enum Bank.Health\",\"name\":\"health\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"collateralTokens\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stabilityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stabilizationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"developmentFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialLoanToValueRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"marginCallLoanToValueRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationLoanToValueRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"depositInNativeCurrency\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"developmentFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"developmentFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllowedCollateralTokens\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stabilityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stabilizationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"developmentFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialLoanToValueRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"marginCallLoanToValueRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationLoanToValueRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct CollateralToken.Data[]\",\"name\":\"allowedCollateralTokens\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"getLoanToValueRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"loanToValueRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"getLoans\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isNativeCurrency\",\"type\":\"bool\"},{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stabilityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stabilizationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"developmentFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastDepositAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRepaymentAt\",\"type\":\"uint256\"}],\"internalType\":\"struct Loan.Data[]\",\"name\":\"_loans\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalValueLocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalValueLocked\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IWrappedNativeCurrency\",\"name\":\"_wrappedNativeCurrency\",\"type\":\"address\"},{\"internalType\":\"contract IMintableAndBurnableERC20\",\"name\":\"_stablecoin\",\"type\":\"address\"},{\"internalType\":\"contract IPriceOracle\",\"name\":\"_priceOracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_liquidator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_exchangeFund\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_developmentFund\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidationLoanToValueRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialLoanToValueRatio\",\"type\":\"uint256\"}],\"name\":\"listCollateralToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loanIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isNativeCurrency\",\"type\":\"bool\"},{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stabilityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stabilizationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"developmentFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastDepositAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRepaymentAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marginCallLoanToValueRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumPrincipalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingGovernor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceOracle\",\"outputs\":[{\"internalType\":\"contract IPriceOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalancingThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"salvage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newInitialLoanToValueRatio\",\"type\":\"uint256\"}],\"name\":\"setInitialLoanToValueRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newLiquidationLoanToValueRatio\",\"type\":\"uint256\"}],\"name\":\"setLiquidationLoanToValueRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMarginCallLoanToValueRatio\",\"type\":\"uint256\"}],\"name\":\"setMarginCallLoanToValueRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMinimumPrincipalAmount\",\"type\":\"uint256\"}],\"name\":\"setMinimumPrincipalAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newStabilizationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newExchangeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newDevelopmentFee\",\"type\":\"uint256\"}],\"name\":\"setPlatformFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newRebalancingThreshold\",\"type\":\"uint256\"}],\"name\":\"setRebalancingThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newStabilityFee\",\"type\":\"uint256\"}],\"name\":\"setStabilityFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stabilityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stabilizationFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stablecoin\",\"outputs\":[{\"internalType\":\"contract IMintableAndBurnableERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"}],\"name\":\"transitGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"unlistCollateralToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrappedNativeCurrency\",\"outputs\":[{\"internalType\":\"contract IWrappedNativeCurrency\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Andrey Gulitsky\",\"errors\":{\"BaksDAOBorrowBelowMinimumPrincipalAmount()\":[{\"details\":\"Thrown when trying to borrow below minimum principal amount.\"}],\"BaksDAOBorrowZeroAmount()\":[{\"details\":\"Thrown when borrowing a zero amount of stablecoin.\"}],\"BaksDAOCollateralTokenAlreadyListed(address)\":[{\"details\":\"Thrown when trying to list collateral token that's already listed.\",\"params\":{\"token\":\"The address of the collateral token contract.\"}}],\"BaksDAOCollateralTokenNotListed(address)\":[{\"details\":\"Thrown when trying to unlist collateral token that's not listed.\",\"params\":{\"token\":\"The address of the collateral token contract.\"}}],\"BaksDAOCollateralTokenTooLargeDecimals(address,uint8)\":[{\"details\":\"Thrown when trying to list collateral token that has too large decimals.\",\"params\":{\"token\":\"The address of the collateral token contract.\"}}],\"BaksDAOCollateralTokenZeroDecimals(address)\":[{\"details\":\"Thrown when trying to list collateral token that has zero decimals.\",\"params\":{\"token\":\"The address of the collateral token contract.\"}}],\"BaksDAODepositZeroAmount()\":[{\"details\":\"Thrown when depositing a zero amount of collateral token.\"}],\"BaksDAOInactiveLoan(uint256)\":[{\"details\":\"Thrown when trying to interact with inactive loan with `id` id.\",\"params\":{\"id\":\"The loan id.\"}}],\"BaksDAOInitialLoanToValueRatioTooHigh(address,uint256)\":[{\"details\":\"Thrown when trying to set initial loan-to-value ratio that higher than margin call or liquidation ones.\",\"params\":{\"initialLoanToValueRatio\":\"The initial loan-to-value ratio that was tried to set.\",\"token\":\"The address of the collateral token contract.\"}}],\"BaksDAOLoanIsSubjectToLiquidation(uint256)\":[{\"details\":\"Thrown when trying to interact with loan with `id` id that is subject to liquidation.\",\"params\":{\"id\":\"The loan id.\"}}],\"BaksDAOLoanNotSubjectToLiquidation(uint256)\":[{\"details\":\"Thrown when trying to liquidate healthy loan with `id` id.\",\"params\":{\"id\":\"The loan id.\"}}],\"BaksDAONativeCurrencyCollateralNotAllowed(uint256)\":[{\"details\":\"Thrown when trying to deposit native currency collateral to the non-wrapped native currency token loan with `id` id.\",\"params\":{\"id\":\"The loan id.\"}}],\"BaksDAONoNeedToRebalance()\":[{\"details\":\"Thrown when there's no need to rebalance the platform.\"}],\"BaksDAOPlatformFeesDontSumUpToOne(uint256,uint256,uint256)\":[{\"details\":\"Thrown when trying to set platform fees that don't sum up to one.\",\"params\":{\"developmentFee\":\"The stabilization fee that was tried to set.\",\"exchangeFee\":\"The stabilization fee that was tried to set.\",\"stabilizationFee\":\"The stabilization fee that was tried to set.\"}}],\"BaksDAORepayZeroAmount()\":[{\"details\":\"Thrown when repaying a zero amount of stablecoin.\"}],\"BaksDAOStabilizationFundOutOfFunds(uint256)\":[{\"details\":\"Thrown when trying to rebalance the platform and there is a shortage of funds to burn.\",\"params\":{\"shortage\":\"Shoratge of funds to burn.\"}}],\"BaksDAOTokenNotAllowedAsCollateral(address)\":[{\"details\":\"Thrown when interacting with a token that's not allowed as collateral.\",\"params\":{\"token\":\"The address of the collateral token contract.\"}}],\"BaksDAOTokenNotAllowedToBeSalvaged(address)\":[{\"details\":\"Thrown when trying to salvage one of allowed collateral tokens or stablecoin.\",\"params\":{\"token\":\"The address of the token contract.\"}}]},\"kind\":\"dev\",\"methods\":{\"borrow(address,uint256)\":{\"details\":\"The caller must have allowed this contract to spend a sufficient amount of collateral tokens to cover initial loan-to-value ratio.\",\"params\":{\"amount\":\"The amount of stablecoin to borrow and issue.\",\"collateralToken\":\"The address of the collateral token contract.\"}},\"deposit(uint256,uint256)\":{\"details\":\"The caller must have allowed this contract to spend `amount` of collateral tokens.\",\"params\":{\"amount\":\"The amount of collateral token to deposit.\",\"loanId\":\"The loan id.\"}},\"repay(uint256,uint256)\":{\"params\":{\"amount\":\"The amount of stablecoin to repay.\",\"loanId\":\"The loan id.\"}}},\"title\":\"Core smart contract of BaksDAO platform\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"borrow(address,uint256)\":{\"notice\":\"Increases loan's principal on `collateralToken` collateral token and mints `amount` of stablecoin.\"},\"borrowInNativeCurrency(uint256)\":{\"notice\":\"Increases loan's principal on wrapped native currency token and mints stablecoin.\"},\"deposit(uint256,uint256)\":{\"notice\":\"Deposits `amount` of collateral token to loan with `id` id.\"},\"depositInNativeCurrency(uint256)\":{\"notice\":\"Deposits wrapped native currency token to loan with `id` id.\"},\"repay(uint256,uint256)\":{\"notice\":\"Decreases principal of loan with `id` id by `amount` of stablecoin.\"}},\"notice\":\"You should use this contract to interact with the BaksDAO platform.Only this contract can issue stablecoins.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Bank.sol\":\"Bank\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/Bank.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.9;\\n\\nimport \\\"./interfaces/IWrappedNativeCurrency.sol\\\";\\nimport \\\"./libraries/AmountNormalization.sol\\\";\\nimport \\\"./libraries/CollateralToken.sol\\\";\\nimport \\\"./libraries/EnumerableAddressSet.sol\\\";\\nimport \\\"./libraries/FixedPointMath.sol\\\";\\nimport \\\"./libraries/Loan.sol\\\";\\nimport \\\"./libraries/Math.sol\\\";\\nimport \\\"./libraries/ReentrancyGuard.sol\\\";\\nimport \\\"./libraries/SafeERC20.sol\\\";\\nimport {Governed} from \\\"./Governance.sol\\\";\\nimport {IERC20, IMintableAndBurnableERC20} from \\\"./interfaces/ERC20.sol\\\";\\nimport {Initializable} from \\\"./libraries/Upgradability.sol\\\";\\nimport {IPriceOracle} from \\\"./interfaces/IPriceOracle.sol\\\";\\n\\n/// @dev Thrown when trying to list collateral token that has zero decimals.\\n/// @param token The address of the collateral token contract.\\nerror BaksDAOCollateralTokenZeroDecimals(IERC20 token);\\n\\n/// @dev Thrown when trying to list collateral token that has too large decimals.\\n/// @param token The address of the collateral token contract.\\nerror BaksDAOCollateralTokenTooLargeDecimals(IERC20 token, uint8 decimals);\\n\\n/// @dev Thrown when trying to list collateral token that's already listed.\\n/// @param token The address of the collateral token contract.\\nerror BaksDAOCollateralTokenAlreadyListed(IERC20 token);\\n\\n/// @dev Thrown when trying to unlist collateral token that's not listed.\\n/// @param token The address of the collateral token contract.\\nerror BaksDAOCollateralTokenNotListed(IERC20 token);\\n\\n/// @dev Thrown when interacting with a token that's not allowed as collateral.\\n/// @param token The address of the collateral token contract.\\nerror BaksDAOTokenNotAllowedAsCollateral(IERC20 token);\\n\\n/// @dev Thrown when trying to set initial loan-to-value ratio that higher than margin call or liquidation ones.\\n/// @param token The address of the collateral token contract.\\n/// @param initialLoanToValueRatio The initial loan-to-value ratio that was tried to set.\\nerror BaksDAOInitialLoanToValueRatioTooHigh(IERC20 token, uint256 initialLoanToValueRatio);\\n\\n/// @dev Thrown when trying to set platform fees that don't sum up to one.\\n/// @param stabilizationFee The stabilization fee that was tried to set.\\n/// @param exchangeFee The stabilization fee that was tried to set.\\n/// @param developmentFee The stabilization fee that was tried to set.\\nerror BaksDAOPlatformFeesDontSumUpToOne(uint256 stabilizationFee, uint256 exchangeFee, uint256 developmentFee);\\n\\n/// @dev Thrown when trying to interact with inactive loan with `id` id.\\n/// @param id The loan id.\\nerror BaksDAOInactiveLoan(uint256 id);\\n\\n/// @dev Thrown when trying to liquidate healthy loan with `id` id.\\n/// @param id The loan id.\\nerror BaksDAOLoanNotSubjectToLiquidation(uint256 id);\\n/// @dev Thrown when trying to interact with loan with `id` id that is subject to liquidation.\\n/// @param id The loan id.\\nerror BaksDAOLoanIsSubjectToLiquidation(uint256 id);\\n\\n/// @dev Thrown when borrowing a zero amount of stablecoin.\\nerror BaksDAOBorrowZeroAmount();\\n\\n/// @dev Thrown when trying to borrow below minimum principal amount.\\nerror BaksDAOBorrowBelowMinimumPrincipalAmount();\\n\\n/// @dev Thrown when depositing a zero amount of collateral token.\\nerror BaksDAODepositZeroAmount();\\n\\n/// @dev Thrown when repaying a zero amount of stablecoin.\\nerror BaksDAORepayZeroAmount();\\n\\n/// @dev Thrown when there's no need to rebalance the platform.\\nerror BaksDAONoNeedToRebalance();\\n\\n/// @dev Thrown when trying to rebalance the platform and there is a shortage of funds to burn.\\n/// @param shortage Shoratge of funds to burn.\\nerror BaksDAOStabilizationFundOutOfFunds(uint256 shortage);\\n\\n/// @dev Thrown when trying to salvage one of allowed collateral tokens or stablecoin.\\n/// @param token The address of the token contract.\\nerror BaksDAOTokenNotAllowedToBeSalvaged(IERC20 token);\\n\\n/// @dev Thrown when trying to deposit native currency collateral to the non-wrapped native currency token loan\\n/// with `id` id.\\n/// @param id The loan id.\\nerror BaksDAONativeCurrencyCollateralNotAllowed(uint256 id);\\n\\nerror BaksDAONativeCurrencyTransferFailed();\\n\\nerror BaksDAOPlainNativeCurrencyTransferNotAllowed();\\n\\nerror BaksDAOInsufficientSecurityAmount(uint256 minimumRequiredSecurityAmount);\\n\\n/// @title Core smart contract of BaksDAO platform\\n/// @author Andrey Gulitsky\\n/// @notice You should use this contract to interact with the BaksDAO platform.\\n/// @notice Only this contract can issue stablecoins.\\ncontract Bank is Initializable, Governed, ReentrancyGuard {\\n    using AmountNormalization for IERC20;\\n    using AmountNormalization for IWrappedNativeCurrency;\\n    using CollateralToken for CollateralToken.Data;\\n    using EnumerableAddressSet for EnumerableAddressSet.Set;\\n    using FixedPointMath for uint256;\\n    using Loan for Loan.Data;\\n    using SafeERC20 for IWrappedNativeCurrency;\\n    using SafeERC20 for IERC20;\\n    using SafeERC20 for IMintableAndBurnableERC20;\\n\\n    enum Health {\\n        Ok,\\n        MarginCall,\\n        Liquidation\\n    }\\n\\n    uint256 internal constant ONE = 100e16;\\n    uint8 internal constant DECIMALS = 18;\\n\\n    IWrappedNativeCurrency public wrappedNativeCurrency;\\n    IMintableAndBurnableERC20 public stablecoin;\\n    IPriceOracle public priceOracle;\\n\\n    address public operator;\\n    address public liquidator;\\n    address public exchangeFund;\\n    address public developmentFund;\\n\\n    uint256 public minimumPrincipalAmount;\\n    uint256 public stabilityFee;\\n    uint256 public stabilizationFee;\\n    uint256 public exchangeFee;\\n    uint256 public developmentFee;\\n    uint256 public marginCallLoanToValueRatio;\\n    uint256 public liquidationLoanToValueRatio;\\n    uint256 public rebalancingThreshold;\\n\\n    Loan.Data[] public loans;\\n    mapping(address => uint256[]) public loanIds;\\n\\n    mapping(IERC20 => CollateralToken.Data) public collateralTokens;\\n    EnumerableAddressSet.Set internal collateralTokensSet;\\n\\n    event CollateralTokenListed(IERC20 indexed token);\\n    event CollateralTokenUnlisted(IERC20 indexed token);\\n\\n    event MinimumPrincipalAmountUpdated(uint256 minimumPrincipalAmount, uint256 newMinimumPrincipalAmount);\\n    event StabilityFeeUpdated(uint256 stabilityFee, uint256 newStabilityFee);\\n    event RebalancingThresholdUpdated(uint256 rebalancingThreshold, uint256 newRebalancingThreshold);\\n    event PlatformFeesUpdated(\\n        uint256 stabilizationFee,\\n        uint256 newStabilizationFee,\\n        uint256 exchangeFee,\\n        uint256 newExchangeFee,\\n        uint256 developmentFee,\\n        uint256 newDevelopmentFee\\n    );\\n    event MarginCallLoanToValueRatioUpdated(uint256 marginCallLoanToValueRatio, uint256 newMarginCallLoanToValueRatio);\\n    event LiquidationLoanToValueRatioUpdated(\\n        uint256 liqudationLoanToValueRatio,\\n        uint256 newLiquidationLoanToValueRatio\\n    );\\n    event InitialLoanToValueRatioUpdated(\\n        IERC20 indexed token,\\n        uint256 initialLoanToValueRatio,\\n        uint256 newInitialLoanToValueRatio\\n    );\\n\\n    event Borrow(\\n        uint256 indexed id,\\n        address indexed borrower,\\n        IERC20 indexed token,\\n        uint256 principalAmount,\\n        uint256 collateralAmount,\\n        uint256 initialLoanToValueRatio\\n    );\\n    event Deposit(uint256 indexed id, uint256 collateralAmount);\\n    event Repay(uint256 indexed id, uint256 principalAmount);\\n    event Repaid(uint256 indexed id);\\n\\n    event Liquidated(uint256 indexed id);\\n\\n    event Rebalance(int256 delta);\\n\\n    modifier tokenAllowedAsCollateral(IERC20 token) {\\n        if (!collateralTokensSet.contains(address(token))) {\\n            revert BaksDAOTokenNotAllowedAsCollateral(token);\\n        }\\n        _;\\n    }\\n\\n    modifier onActiveLoan(uint256 id) {\\n        if (id >= loans.length || !loans[id].isActive) {\\n            revert BaksDAOInactiveLoan(id);\\n        }\\n        _;\\n    }\\n\\n    modifier notOnSubjectToLiquidation(uint256 loanId) {\\n        if (checkHealth(loanId) == Health.Liquidation) {\\n            revert BaksDAOLoanIsSubjectToLiquidation(loanId);\\n        }\\n        _;\\n    }\\n\\n    modifier onSubjectToLiquidation(uint256 loanId) {\\n        if (checkHealth(loanId) != Health.Liquidation) {\\n            revert BaksDAOLoanNotSubjectToLiquidation(loanId);\\n        }\\n        _;\\n    }\\n\\n    receive() external payable {\\n        if (msg.sender != address(wrappedNativeCurrency)) {\\n            revert BaksDAOPlainNativeCurrencyTransferNotAllowed();\\n        }\\n    }\\n\\n    function initialize(\\n        IWrappedNativeCurrency _wrappedNativeCurrency,\\n        IMintableAndBurnableERC20 _stablecoin,\\n        IPriceOracle _priceOracle,\\n        address _operator,\\n        address _liquidator,\\n        address _exchangeFund,\\n        address _developmentFund\\n    ) external initializer {\\n        setGovernor(msg.sender);\\n\\n        wrappedNativeCurrency = _wrappedNativeCurrency;\\n        stablecoin = _stablecoin;\\n        priceOracle = _priceOracle;\\n        operator = _operator;\\n        liquidator = _liquidator;\\n        exchangeFund = _exchangeFund;\\n        developmentFund = _developmentFund;\\n\\n        minimumPrincipalAmount = 50e18; // 50 BAKS\\n        stabilityFee = 3e16; // 3 %\\n        stabilizationFee = 85e16; // 85 %\\n        exchangeFee = 15e16; // 15 %\\n        developmentFee = 0;\\n        marginCallLoanToValueRatio = 75e16; // 75 %\\n        liquidationLoanToValueRatio = 83e16; // 83 %\\n        rebalancingThreshold = 1e16; // 1 %\\n    }\\n\\n    /// @notice Increases loan's principal on `collateralToken` collateral token and mints `amount` of stablecoin.\\n    /// @dev The caller must have allowed this contract to spend a sufficient amount of collateral tokens to cover\\n    /// initial loan-to-value ratio.\\n    /// @param collateralToken The address of the collateral token contract.\\n    /// @param amount The amount of stablecoin to borrow and issue.\\n    function borrow(IERC20 collateralToken, uint256 amount)\\n        external\\n        nonReentrant\\n        tokenAllowedAsCollateral(collateralToken)\\n        returns (Loan.Data memory)\\n    {\\n        Loan.Data memory loan = calculateLoanByPrincipalAmount(collateralToken, amount);\\n\\n        collateralToken.safeTransferFrom(msg.sender, operator, collateralToken.denormalizeAmount(loan.stabilityFee));\\n        collateralToken.safeTransferFrom(\\n            msg.sender,\\n            address(this),\\n            collateralToken.denormalizeAmount(loan.collateralAmount)\\n        );\\n\\n        return _createLoan(loan);\\n    }\\n\\n    /// @notice Increases loan's principal on wrapped native currency token and mints stablecoin.\\n    function borrowInNativeCurrency(uint256 amount) external payable nonReentrant returns (Loan.Data memory) {\\n        Loan.Data memory loan = calculateLoanByPrincipalAmount(wrappedNativeCurrency, amount);\\n        loan.isNativeCurrency = true;\\n\\n        uint256 securityAmount = loan.collateralAmount + loan.stabilityFee;\\n        if (msg.value < securityAmount) {\\n            revert BaksDAOInsufficientSecurityAmount(securityAmount);\\n        }\\n\\n        wrappedNativeCurrency.deposit{value: securityAmount}();\\n        wrappedNativeCurrency.safeTransfer(operator, wrappedNativeCurrency.denormalizeAmount(loan.stabilityFee));\\n\\n        uint256 change;\\n        unchecked {\\n            change = msg.value - securityAmount;\\n        }\\n        if (change > 0) {\\n            (bool success, ) = msg.sender.call{value: change}(\\\"\\\");\\n            if (!success) {\\n                revert BaksDAONativeCurrencyTransferFailed();\\n            }\\n        }\\n\\n        return _createLoan(loan);\\n    }\\n\\n    /// @notice Deposits `amount` of collateral token to loan with `id` id.\\n    /// @dev The caller must have allowed this contract to spend `amount` of collateral tokens.\\n    /// @param loanId The loan id.\\n    /// @param amount The amount of collateral token to deposit.\\n    function deposit(uint256 loanId, uint256 amount)\\n        external\\n        nonReentrant\\n        onActiveLoan(loanId)\\n        notOnSubjectToLiquidation(loanId)\\n    {\\n        loans[loanId].collateralToken.safeTransferFrom(msg.sender, address(this), amount);\\n        _deposit(loanId, amount);\\n    }\\n\\n    /// @notice Deposits wrapped native currency token to loan with `id` id.\\n    function depositInNativeCurrency(uint256 loanId)\\n        external\\n        payable\\n        nonReentrant\\n        onActiveLoan(loanId)\\n        notOnSubjectToLiquidation(loanId)\\n    {\\n        if (loans[loanId].collateralToken != wrappedNativeCurrency) {\\n            revert BaksDAONativeCurrencyCollateralNotAllowed(loanId);\\n        }\\n        wrappedNativeCurrency.deposit{value: msg.value}();\\n        _deposit(loanId, msg.value);\\n    }\\n\\n    /// @notice Decreases principal of loan with `id` id by `amount` of stablecoin.\\n    /// @param loanId The loan id.\\n    /// @param amount The amount of stablecoin to repay.\\n    function repay(uint256 loanId, uint256 amount)\\n        external\\n        nonReentrant\\n        onActiveLoan(loanId)\\n        notOnSubjectToLiquidation(loanId)\\n    {\\n        if (amount == 0) {\\n            revert BaksDAORepayZeroAmount();\\n        }\\n        Loan.Data storage loan = loans[loanId];\\n        loan.principalAmount -= amount;\\n\\n        stablecoin.burn(msg.sender, amount);\\n        loan.lastRepaymentAt = block.timestamp;\\n        if (loan.principalAmount > 0) {\\n            emit Repay(loanId, amount);\\n        } else {\\n            uint256 denormalizedCollateralAmount = loan.collateralToken.denormalizeAmount(loan.collateralAmount);\\n            collateralTokens[loan.collateralToken].collateralAmount -= loan.collateralAmount;\\n\\n            loan.collateralAmount = 0;\\n\\n            stablecoin.burn(address(this), loan.stabilizationFee);\\n\\n            loan.isActive = false;\\n            emit Repaid(loanId);\\n\\n            if (!loan.isNativeCurrency) {\\n                loan.collateralToken.safeTransfer(loan.borrower, denormalizedCollateralAmount);\\n            } else {\\n                wrappedNativeCurrency.withdraw(denormalizedCollateralAmount);\\n                (bool success, ) = msg.sender.call{value: denormalizedCollateralAmount}(\\\"\\\");\\n                if (!success) {\\n                    revert BaksDAONativeCurrencyTransferFailed();\\n                }\\n            }\\n        }\\n    }\\n\\n    function liquidate(uint256 loanId) external nonReentrant onActiveLoan(loanId) onSubjectToLiquidation(loanId) {\\n        Loan.Data storage loan = loans[loanId];\\n\\n        collateralTokens[loan.collateralToken].collateralAmount -= loan.collateralAmount;\\n        loan.collateralToken.safeTransfer(liquidator, loan.collateralToken.denormalizeAmount(loan.collateralAmount));\\n\\n        uint256 collateralValue = loan.getCollateralValue();\\n        stablecoin.burn(liquidator, loan.principalAmount);\\n        stablecoin.burn(address(this), collateralValue - loan.principalAmount);\\n\\n        loan.isActive = false;\\n        emit Liquidated(loanId);\\n    }\\n\\n    function rebalance() external nonReentrant {\\n        uint256 totalValueLocked = getTotalValueLocked();\\n        uint256 totalSupply = stablecoin.totalSupply();\\n\\n        int256 delta = int256(totalSupply) - int256(totalValueLocked);\\n        uint256 absoluteDelta = Math.abs(delta);\\n        uint256 p = absoluteDelta.div(totalSupply);\\n        if (p < rebalancingThreshold) {\\n            revert BaksDAONoNeedToRebalance();\\n        }\\n\\n        if (delta > 0) {\\n            try stablecoin.burn(address(this), absoluteDelta) {} catch {\\n                uint256 balance = stablecoin.balanceOf(address(this));\\n                revert BaksDAOStabilizationFundOutOfFunds(absoluteDelta - balance);\\n            }\\n        } else {\\n            stablecoin.mint(address(this), absoluteDelta);\\n        }\\n\\n        emit Rebalance(delta);\\n    }\\n\\n    function listCollateralToken(IERC20 token, uint256 initialLoanToValueRatio) external onlyGovernor {\\n        if (collateralTokensSet.contains(address(token))) {\\n            revert BaksDAOCollateralTokenAlreadyListed(token);\\n        }\\n\\n        if (initialLoanToValueRatio >= marginCallLoanToValueRatio) {\\n            revert BaksDAOInitialLoanToValueRatioTooHigh(token, initialLoanToValueRatio);\\n        }\\n\\n        uint8 decimals = token.decimals();\\n        if (decimals == 0) {\\n            revert BaksDAOCollateralTokenZeroDecimals(token);\\n        }\\n        if (decimals > DECIMALS) {\\n            revert BaksDAOCollateralTokenTooLargeDecimals(token, decimals);\\n        }\\n\\n        if (collateralTokensSet.add(address(token))) {\\n            collateralTokens[token] = CollateralToken.Data({\\n                collateralToken: token,\\n                priceOracle: priceOracle,\\n                stabilityFee: stabilityFee,\\n                stabilizationFee: stabilizationFee,\\n                exchangeFee: exchangeFee,\\n                developmentFee: developmentFee,\\n                initialLoanToValueRatio: initialLoanToValueRatio,\\n                marginCallLoanToValueRatio: marginCallLoanToValueRatio,\\n                liquidationLoanToValueRatio: liquidationLoanToValueRatio,\\n                collateralAmount: 0\\n            });\\n\\n            emit CollateralTokenListed(token);\\n            emit InitialLoanToValueRatioUpdated(token, 0, initialLoanToValueRatio);\\n        }\\n    }\\n\\n    function unlistCollateralToken(IERC20 token) external onlyGovernor {\\n        if (!collateralTokensSet.contains(address(token))) {\\n            revert BaksDAOCollateralTokenNotListed(token);\\n        }\\n\\n        if (collateralTokensSet.remove(address(token))) {\\n            delete collateralTokens[token];\\n            emit CollateralTokenUnlisted(token);\\n        }\\n    }\\n\\n    function setMinimumPrincipalAmount(uint256 newMinimumPrincipalAmount) external onlyGovernor {\\n        emit StabilityFeeUpdated(minimumPrincipalAmount, newMinimumPrincipalAmount);\\n        minimumPrincipalAmount = newMinimumPrincipalAmount;\\n    }\\n\\n    function setStabilityFee(uint256 newStabilityFee) external onlyGovernor {\\n        emit StabilityFeeUpdated(stabilityFee, newStabilityFee);\\n        stabilityFee = newStabilityFee;\\n    }\\n\\n    function setPlatformFees(\\n        uint256 newStabilizationFee,\\n        uint256 newExchangeFee,\\n        uint256 newDevelopmentFee\\n    ) external onlyGovernor {\\n        if (newStabilizationFee + newExchangeFee + newDevelopmentFee != ONE) {\\n            revert BaksDAOPlatformFeesDontSumUpToOne(newStabilizationFee, newExchangeFee, newDevelopmentFee);\\n        }\\n        emit PlatformFeesUpdated(\\n            stabilizationFee,\\n            newStabilizationFee,\\n            exchangeFee,\\n            newExchangeFee,\\n            developmentFee,\\n            newDevelopmentFee\\n        );\\n        stabilizationFee = newStabilizationFee;\\n        exchangeFee = newExchangeFee;\\n        developmentFee = newDevelopmentFee;\\n    }\\n\\n    function setMarginCallLoanToValueRatio(uint256 newMarginCallLoanToValueRatio) external onlyGovernor {\\n        emit MarginCallLoanToValueRatioUpdated(marginCallLoanToValueRatio, newMarginCallLoanToValueRatio);\\n        marginCallLoanToValueRatio = newMarginCallLoanToValueRatio;\\n    }\\n\\n    function setLiquidationLoanToValueRatio(uint256 newLiquidationLoanToValueRatio) external onlyGovernor {\\n        emit LiquidationLoanToValueRatioUpdated(liquidationLoanToValueRatio, newLiquidationLoanToValueRatio);\\n        liquidationLoanToValueRatio = newLiquidationLoanToValueRatio;\\n    }\\n\\n    function setRebalancingThreshold(uint256 newRebalancingThreshold) external onlyGovernor {\\n        emit RebalancingThresholdUpdated(rebalancingThreshold, newRebalancingThreshold);\\n        rebalancingThreshold = newRebalancingThreshold;\\n    }\\n\\n    function setInitialLoanToValueRatio(IERC20 token, uint256 newInitialLoanToValueRatio) external onlyGovernor {\\n        if (!collateralTokensSet.contains(address(token))) {\\n            revert BaksDAOCollateralTokenNotListed(token);\\n        }\\n\\n        CollateralToken.Data storage collateralToken = collateralTokens[token];\\n        if (newInitialLoanToValueRatio >= collateralToken.marginCallLoanToValueRatio) {\\n            revert BaksDAOInitialLoanToValueRatioTooHigh(token, newInitialLoanToValueRatio);\\n        }\\n\\n        uint256 initialLoanToValueRatio = collateralToken.initialLoanToValueRatio;\\n        collateralToken.initialLoanToValueRatio = newInitialLoanToValueRatio;\\n\\n        emit InitialLoanToValueRatioUpdated(token, initialLoanToValueRatio, newInitialLoanToValueRatio);\\n    }\\n\\n    function salvage(IERC20 token) external onlyGovernor {\\n        address tokenAddress = address(token);\\n        if (tokenAddress == address(stablecoin) || collateralTokensSet.contains(tokenAddress)) {\\n            revert BaksDAOTokenNotAllowedToBeSalvaged(token);\\n        }\\n        token.safeTransfer(operator, token.balanceOf(address(this)));\\n    }\\n\\n    function getLoans(address borrower) external view returns (Loan.Data[] memory _loans) {\\n        uint256 length = loanIds[borrower].length;\\n        _loans = new Loan.Data[](length);\\n\\n        for (uint256 i = 0; i < length; i++) {\\n            _loans[i] = loans[loanIds[borrower][i]];\\n        }\\n    }\\n\\n    function getAllowedCollateralTokens()\\n        external\\n        view\\n        returns (CollateralToken.Data[] memory allowedCollateralTokens)\\n    {\\n        uint256 length = collateralTokensSet.elements.length;\\n        allowedCollateralTokens = new CollateralToken.Data[](length);\\n\\n        for (uint256 i = 0; i < length; i++) {\\n            allowedCollateralTokens[i] = collateralTokens[IERC20(collateralTokensSet.elements[i])];\\n        }\\n    }\\n\\n    function calculateLoanByPrincipalAmount(IERC20 collateralToken, uint256 principalAmount)\\n        public\\n        view\\n        returns (Loan.Data memory loan)\\n    {\\n        loan = collateralTokens[collateralToken].calculateLoanByPrincipalAmount(principalAmount);\\n    }\\n\\n    function calculateLoanByCollateralAmount(IERC20 collateralToken, uint256 collateralAmount)\\n        public\\n        view\\n        returns (Loan.Data memory loan)\\n    {\\n        loan = collateralTokens[collateralToken].calculateLoanByCollateralAmount(collateralAmount);\\n    }\\n\\n    function calculateLoanBySecurityAmount(IERC20 collateralToken, uint256 securityAmount)\\n        public\\n        view\\n        returns (Loan.Data memory loan)\\n    {\\n        loan = collateralTokens[collateralToken].calculateLoanBySecurityAmount(securityAmount);\\n    }\\n\\n    function getTotalValueLocked() public view returns (uint256 totalValueLocked) {\\n        for (uint256 i = 0; i < collateralTokensSet.elements.length; i++) {\\n            totalValueLocked += collateralTokens[IERC20(collateralTokensSet.elements[i])].getCollateralValue();\\n        }\\n    }\\n\\n    function getLoanToValueRatio(uint256 loanId) public view returns (uint256 loanToValueRatio) {\\n        Loan.Data memory loan = loans[loanId];\\n        loanToValueRatio = loan.calculateLoanToValueRatio();\\n    }\\n\\n    function checkHealth(uint256 loanId) public view returns (Health health) {\\n        uint256 loanToValueRatio = getLoanToValueRatio(loanId);\\n        health = loanToValueRatio >= liquidationLoanToValueRatio\\n            ? Health.Liquidation\\n            : loanToValueRatio >= marginCallLoanToValueRatio\\n            ? Health.MarginCall\\n            : Health.Ok;\\n    }\\n\\n    function _createLoan(Loan.Data memory loan) internal returns (Loan.Data memory) {\\n        if (loan.principalAmount == 0) {\\n            revert BaksDAOBorrowZeroAmount();\\n        }\\n        if (loan.principalAmount < minimumPrincipalAmount) {\\n            revert BaksDAOBorrowBelowMinimumPrincipalAmount();\\n        }\\n\\n        stablecoin.mint(address(this), loan.stabilizationFee);\\n        stablecoin.mint(exchangeFund, loan.exchangeFee);\\n        stablecoin.mint(developmentFund, loan.developmentFee);\\n        stablecoin.mint(loan.borrower, loan.principalAmount);\\n\\n        uint256 id = loans.length;\\n        loan.id = id;\\n\\n        loans.push(loan);\\n        loanIds[loan.borrower].push(id);\\n\\n        collateralTokens[loan.collateralToken].collateralAmount += loan.collateralAmount;\\n\\n        emit Borrow(\\n            id,\\n            loan.borrower,\\n            loan.collateralToken,\\n            loan.principalAmount,\\n            loan.collateralAmount,\\n            collateralTokens[loan.collateralToken].initialLoanToValueRatio\\n        );\\n\\n        return loan;\\n    }\\n\\n    function _deposit(uint256 loanId, uint256 amount) internal {\\n        if (amount == 0) {\\n            revert BaksDAODepositZeroAmount();\\n        }\\n\\n        Loan.Data storage loan = loans[loanId];\\n\\n        uint256 normalizedCollateralAmount = loan.collateralToken.normalizeAmount(amount);\\n        loan.collateralAmount += normalizedCollateralAmount;\\n        loan.lastDepositAt = block.timestamp;\\n        collateralTokens[loan.collateralToken].collateralAmount += normalizedCollateralAmount;\\n\\n        emit Deposit(loanId, normalizedCollateralAmount);\\n    }\\n}\\n\",\"keccak256\":\"0x85ae110fee7c3ed6dc6ba9d1f8b23a5bbd1b48c1407b145d7b1a5fd587c8e7fe\",\"license\":\"BUSL-1.1\"},\"contracts/Governance.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.9;\\n\\nerror GovernedOnlyGovernorAllowedToCall();\\nerror GovernedOnlyPendingGovernorAllowedToCall();\\nerror GovernedGovernorZeroAddress();\\nerror GovernedCantGoverItself();\\n\\nabstract contract Governed {\\n    address public governor;\\n    address public pendingGovernor;\\n\\n    event PendingGovernanceTransition(address indexed governor, address indexed newGovernor);\\n    event GovernanceTransited(address indexed governor, address indexed newGovernor);\\n\\n    modifier onlyGovernor() {\\n        if (msg.sender != governor) {\\n            revert GovernedOnlyGovernorAllowedToCall();\\n        }\\n        _;\\n    }\\n\\n    function transitGovernance(address newGovernor, bool force) external onlyGovernor {\\n        if (newGovernor == address(0)) {\\n            revert GovernedGovernorZeroAddress();\\n        }\\n        if (newGovernor == address(this)) {\\n            revert GovernedCantGoverItself();\\n        }\\n\\n        pendingGovernor = newGovernor;\\n        if (!force) {\\n            emit PendingGovernanceTransition(governor, newGovernor);\\n        } else {\\n            setGovernor(newGovernor);\\n        }\\n    }\\n\\n    function acceptGovernance() external {\\n        if (msg.sender != pendingGovernor) {\\n            revert GovernedOnlyPendingGovernorAllowedToCall();\\n        }\\n\\n        governor = pendingGovernor;\\n        emit GovernanceTransited(governor, pendingGovernor);\\n    }\\n\\n    function setGovernor(address newGovernor) internal {\\n        governor = newGovernor;\\n        emit GovernanceTransited(governor, newGovernor);\\n    }\\n}\\n\",\"keccak256\":\"0xe86e94a8fa51fb298c4152828f39bd32ceb0eed75717c70cc519528e7e448875\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\ninterface IERC20 {\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n}\\n\\ninterface IMintableAndBurnableERC20 is IERC20 {\\n    function mint(address to, uint256 amount) external;\\n\\n    function burn(address from, uint256 amount) external;\\n}\\n\",\"keccak256\":\"0x555b3bf9906cdd22fd702e227764b81c027180c0af11c48222ba6273441c63f3\",\"license\":\"MIT\"},\"contracts/interfaces/IPriceOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nimport {IERC20} from \\\"./ERC20.sol\\\";\\nimport \\\"./../libraries/FixedPointMath.sol\\\";\\n\\n/// @notice Thrown when oracle doesn't provide price for `token` token.\\n/// @param token The address of the token contract.\\nerror PriceOracleTokenUnknown(IERC20 token);\\n/// @notice Thrown when oracle provide stale price `price` for `token` token.\\n/// @param token The address of the token contract.\\n/// @param price Provided price.\\nerror PriceOracleStalePrice(IERC20 token, uint256 price);\\n/// @notice Thrown when oracle provide negative, zero or in other ways invalid price `price` for `token` token.\\n/// @param token The address of the token contract.\\n/// @param price Provided price.\\nerror PriceOracleInvalidPrice(IERC20 token, int256 price);\\n\\ninterface IPriceOracle {\\n    /// @notice Gets normalized to 18 decimals price for the `token` token.\\n    /// @param token The address of the token contract.\\n    /// @return normalizedPrice Normalized price.\\n    function getNormalizedPrice(IERC20 token) external view returns (uint256 normalizedPrice);\\n}\\n\",\"keccak256\":\"0x2cfa58d491572f613703a352a2ca52ecea5299711852d190c3abed043d95028b\",\"license\":\"MIT\"},\"contracts/interfaces/IWrappedNativeCurrency.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nimport {IERC20} from \\\"./ERC20.sol\\\";\\n\\ninterface IWrappedNativeCurrency is IERC20 {\\n    function deposit() external payable;\\n\\n    function withdraw(uint256 amount) external;\\n}\\n\",\"keccak256\":\"0xc94fb4955357b9fa1728487f1c34edb25c9edbbc376b1ed4b5feb86e2a5887b4\",\"license\":\"MIT\"},\"contracts/libraries/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nerror CallToNonContract(address target);\\n\\nlibrary Address {\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        if (!isContract(target)) {\\n            revert CallToNonContract(target);\\n        }\\n\\n        (bool success, bytes memory returnData) = target.call(data);\\n        return verifyCallResult(success, returnData, errorMessage);\\n    }\\n\\n    function delegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        if (!isContract(target)) {\\n            revert CallToNonContract(target);\\n        }\\n\\n        (bool success, bytes memory returnData) = target.delegatecall(data);\\n        return verifyCallResult(success, returnData, errorMessage);\\n    }\\n\\n    function isContract(address account) internal view returns (bool) {\\n        uint256 codeSize;\\n        assembly {\\n            codeSize := extcodesize(account)\\n        }\\n\\n        return codeSize > 0;\\n    }\\n\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returnData,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returnData;\\n        } else {\\n            if (returnData.length > 0) {\\n                assembly {\\n                    let returnDataSize := mload(returnData)\\n                    revert(add(returnData, 32), returnDataSize)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0600a1e06b9ff00c4175ca0f55c0b85cbc9283a101cc0c2a0624c600c456c003\",\"license\":\"MIT\"},\"contracts/libraries/AmountNormalization.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nimport {IERC20} from \\\"./../interfaces/ERC20.sol\\\";\\n\\nlibrary AmountNormalization {\\n    uint8 internal constant DECIMALS = 18;\\n\\n    function normalizeAmount(IERC20 self, uint256 denormalizedAmount) internal view returns (uint256 normalizedAmount) {\\n        uint256 scale = 10**(DECIMALS - self.decimals());\\n        if (scale != 1) {\\n            return denormalizedAmount * scale;\\n        }\\n        return denormalizedAmount;\\n    }\\n\\n    function denormalizeAmount(IERC20 self, uint256 normalizedAmount)\\n        internal\\n        view\\n        returns (uint256 denormalizedAmount)\\n    {\\n        uint256 scale = 10**(DECIMALS - self.decimals());\\n        if (scale != 1) {\\n            return normalizedAmount / scale;\\n        }\\n        return normalizedAmount;\\n    }\\n}\\n\",\"keccak256\":\"0x4db96164ff3f9388d3079863e78d773f0af7c9875d2987c22b2cb21cc815c0ff\",\"license\":\"MIT\"},\"contracts/libraries/CollateralToken.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.9;\\n\\nimport \\\"./FixedPointMath.sol\\\";\\nimport \\\"./Loan.sol\\\";\\nimport {IERC20} from \\\"./../interfaces/ERC20.sol\\\";\\nimport {IPriceOracle} from \\\"./../interfaces/IPriceOracle.sol\\\";\\n\\nlibrary CollateralToken {\\n    using FixedPointMath for uint256;\\n\\n    struct Data {\\n        IERC20 collateralToken;\\n        IPriceOracle priceOracle;\\n        uint256 stabilityFee;\\n        uint256 stabilizationFee;\\n        uint256 exchangeFee;\\n        uint256 developmentFee;\\n        uint256 initialLoanToValueRatio;\\n        uint256 marginCallLoanToValueRatio;\\n        uint256 liquidationLoanToValueRatio;\\n        uint256 collateralAmount;\\n    }\\n\\n    uint256 internal constant ONE = 100e16;\\n\\n    function calculateLoanByPrincipalAmount(Data memory self, uint256 principalAmount)\\n        internal\\n        view\\n        returns (Loan.Data memory)\\n    {\\n        uint256 collateralTokenPrice = self.priceOracle.getNormalizedPrice(self.collateralToken);\\n\\n        uint256 restOfIssuance = principalAmount.mul(ONE - self.initialLoanToValueRatio).div(\\n            self.initialLoanToValueRatio\\n        );\\n        uint256 stabilizationFee = restOfIssuance.mul(self.stabilizationFee);\\n        uint256 exchangeFee = restOfIssuance.mul(self.exchangeFee);\\n        uint256 developmentFee = restOfIssuance.mul(self.developmentFee);\\n\\n        uint256 collateralAmount = principalAmount.div(self.initialLoanToValueRatio.mul(collateralTokenPrice));\\n        uint256 stabilityFee = self.stabilityFee.mul(principalAmount).div(collateralTokenPrice);\\n\\n        return\\n            Loan.Data({\\n                id: 0,\\n                isActive: true,\\n                borrower: msg.sender,\\n                collateralToken: self.collateralToken,\\n                isNativeCurrency: false,\\n                priceOracle: self.priceOracle,\\n                stabilityFee: stabilityFee,\\n                stabilizationFee: stabilizationFee,\\n                exchangeFee: exchangeFee,\\n                developmentFee: developmentFee,\\n                principalAmount: principalAmount,\\n                collateralAmount: collateralAmount,\\n                lastDepositAt: block.timestamp,\\n                lastRepaymentAt: block.timestamp\\n            });\\n    }\\n\\n    function calculateLoanByCollateralAmount(Data memory self, uint256 collateralAmount)\\n        internal\\n        view\\n        returns (Loan.Data memory)\\n    {\\n        uint256 collateralTokenPrice = self.priceOracle.getNormalizedPrice(self.collateralToken);\\n        uint256 principalAmount = collateralAmount.mul(self.initialLoanToValueRatio).mul(collateralTokenPrice);\\n\\n        uint256 restOfIssuance = principalAmount.mul(ONE - self.initialLoanToValueRatio).div(\\n            self.initialLoanToValueRatio\\n        );\\n        uint256 stabilizationFee = restOfIssuance.mul(self.stabilizationFee);\\n        uint256 exchangeFee = restOfIssuance.mul(self.exchangeFee);\\n        uint256 developmentFee = restOfIssuance.mul(self.developmentFee);\\n\\n        uint256 stabilityFee = self.stabilityFee.mul(principalAmount).div(collateralTokenPrice);\\n\\n        return\\n            Loan.Data({\\n                id: 0,\\n                isActive: true,\\n                borrower: msg.sender,\\n                collateralToken: self.collateralToken,\\n                isNativeCurrency: false,\\n                priceOracle: self.priceOracle,\\n                stabilityFee: stabilityFee,\\n                stabilizationFee: stabilizationFee,\\n                exchangeFee: exchangeFee,\\n                developmentFee: developmentFee,\\n                principalAmount: principalAmount,\\n                collateralAmount: collateralAmount,\\n                lastDepositAt: block.timestamp,\\n                lastRepaymentAt: block.timestamp\\n            });\\n    }\\n\\n    function calculateLoanBySecurityAmount(Data memory self, uint256 securityAmount)\\n        internal\\n        view\\n        returns (Loan.Data memory)\\n    {\\n        uint256 collateralTokenPrice = self.priceOracle.getNormalizedPrice(self.collateralToken);\\n        uint256 c = self.stabilityFee.mul(self.initialLoanToValueRatio);\\n        uint256 principalAmount = securityAmount.mul(self.initialLoanToValueRatio).mul(collateralTokenPrice).div(\\n            c + ONE\\n        );\\n        return calculateLoanByPrincipalAmount(self, principalAmount);\\n    }\\n\\n    function getCollateralValue(Data memory self) internal view returns (uint256 collateralValue) {\\n        uint256 collateralTokenPrice = self.priceOracle.getNormalizedPrice(self.collateralToken);\\n        collateralValue = self.collateralAmount.mul(collateralTokenPrice);\\n    }\\n}\\n\",\"keccak256\":\"0x921813de1dbd50c3cbffa317aabc896750ac169f045bbcde019e219a96c26f1e\",\"license\":\"BUSL-1.1\"},\"contracts/libraries/EnumerableAddressSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nlibrary EnumerableAddressSet {\\n    struct Set {\\n        address[] elements;\\n        mapping(address => uint256) indexes;\\n    }\\n\\n    function add(Set storage self, address element) internal returns (bool) {\\n        if (contains(self, element)) {\\n            return false;\\n        }\\n\\n        self.elements.push(element);\\n        self.indexes[element] = self.elements.length;\\n\\n        return true;\\n    }\\n\\n    function remove(Set storage self, address element) internal returns (bool) {\\n        uint256 elementIndex = indexOf(self, element);\\n        if (elementIndex == 0) {\\n            return false;\\n        }\\n\\n        uint256 indexToRemove = elementIndex - 1;\\n        uint256 lastIndex = count(self) - 1;\\n        if (indexToRemove != lastIndex) {\\n            address lastElement = self.elements[lastIndex];\\n            self.elements[indexToRemove] = lastElement;\\n            self.indexes[lastElement] = elementIndex;\\n        }\\n        self.elements.pop();\\n        delete self.indexes[element];\\n\\n        return true;\\n    }\\n\\n    function indexOf(Set storage self, address element) internal view returns (uint256) {\\n        return self.indexes[element];\\n    }\\n\\n    function contains(Set storage self, address element) internal view returns (bool) {\\n        return indexOf(self, element) != 0;\\n    }\\n\\n    function count(Set storage self) internal view returns (uint256) {\\n        return self.elements.length;\\n    }\\n}\\n\",\"keccak256\":\"0xa1fa015d00e86c38628437f420fc58879e4b87e28ee7266616a1e3e9485a9467\",\"license\":\"MIT\"},\"contracts/libraries/FixedPointMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nerror FixedPointMathMulDivOverflow(uint256 prod1, uint256 denominator);\\n\\n/// @title Fixed point math implementation\\nlibrary FixedPointMath {\\n    uint256 internal constant SCALE = 1e18;\\n    /// @dev Largest power of two divisor of scale.\\n    uint256 internal constant SCALE_LPOTD = 262144;\\n    /// @dev Scale inverted mod 2**256.\\n    uint256 internal constant SCALE_INVERSE =\\n        78156646155174841979727994598816262306175212592076161876661508869554232690281;\\n\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 result) {\\n        uint256 prod0;\\n        uint256 prod1;\\n        assembly {\\n            let mm := mulmod(a, b, not(0))\\n            prod0 := mul(a, b)\\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n        }\\n\\n        if (prod1 >= SCALE) {\\n            revert FixedPointMathMulDivOverflow(prod1, SCALE);\\n        }\\n\\n        uint256 remainder;\\n        uint256 roundUpUnit;\\n        assembly {\\n            remainder := mulmod(a, b, SCALE)\\n            roundUpUnit := gt(remainder, 499999999999999999)\\n        }\\n\\n        if (prod1 == 0) {\\n            assembly {\\n                result := add(div(prod0, SCALE), roundUpUnit)\\n            }\\n            return result;\\n        }\\n\\n        assembly {\\n            result := add(\\n                mul(\\n                    or(\\n                        div(sub(prod0, remainder), SCALE_LPOTD),\\n                        mul(sub(prod1, gt(remainder, prod0)), add(div(sub(0, SCALE_LPOTD), SCALE_LPOTD), 1))\\n                    ),\\n                    SCALE_INVERSE\\n                ),\\n                roundUpUnit\\n            )\\n        }\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256 result) {\\n        result = mulDiv(a, SCALE, b);\\n    }\\n\\n    /// @notice Calculates \\u230aa \\u00d7 b \\u00f7 denominator\\u230b with full precision.\\n    /// @dev Credit to Remco Bloemen under MIT license https://2\\u03c0.com/21/muldiv.\\n    function mulDiv(\\n        uint256 a,\\n        uint256 b,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        uint256 prod0;\\n        uint256 prod1;\\n        assembly {\\n            let mm := mulmod(a, b, not(0))\\n            prod0 := mul(a, b)\\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n        }\\n\\n        if (prod1 >= denominator) {\\n            revert FixedPointMathMulDivOverflow(prod1, denominator);\\n        }\\n\\n        if (prod1 == 0) {\\n            assembly {\\n                result := div(prod0, denominator)\\n            }\\n            return result;\\n        }\\n\\n        uint256 remainder;\\n        assembly {\\n            remainder := mulmod(a, b, denominator)\\n\\n            prod1 := sub(prod1, gt(remainder, prod0))\\n            prod0 := sub(prod0, remainder)\\n        }\\n\\n        unchecked {\\n            uint256 lpotdod = denominator & (~denominator + 1);\\n            assembly {\\n                denominator := div(denominator, lpotdod)\\n                prod0 := div(prod0, lpotdod)\\n                lpotdod := add(div(sub(0, lpotdod), lpotdod), 1)\\n            }\\n            prod0 |= prod1 * lpotdod;\\n\\n            uint256 inverse = (3 * denominator) ^ 2;\\n            inverse *= 2 - denominator * inverse;\\n            inverse *= 2 - denominator * inverse;\\n            inverse *= 2 - denominator * inverse;\\n            inverse *= 2 - denominator * inverse;\\n            inverse *= 2 - denominator * inverse;\\n            inverse *= 2 - denominator * inverse;\\n\\n            result = prod0 * inverse;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9d0813682bbe12845de0111298ec16fb9ebf5ac404cce4bee155a455fa547eb4\",\"license\":\"MIT\"},\"contracts/libraries/Loan.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.9;\\n\\nimport \\\"./FixedPointMath.sol\\\";\\nimport {IERC20} from \\\"./../interfaces/ERC20.sol\\\";\\nimport {IPriceOracle} from \\\"./../interfaces/IPriceOracle.sol\\\";\\n\\nlibrary Loan {\\n    using FixedPointMath for uint256;\\n\\n    struct Data {\\n        uint256 id;\\n        bool isActive;\\n        address borrower;\\n        IERC20 collateralToken;\\n        bool isNativeCurrency;\\n        IPriceOracle priceOracle;\\n        uint256 stabilityFee;\\n        uint256 stabilizationFee;\\n        uint256 exchangeFee;\\n        uint256 developmentFee;\\n        uint256 principalAmount;\\n        uint256 collateralAmount;\\n        uint256 lastDepositAt;\\n        uint256 lastRepaymentAt;\\n    }\\n\\n    function getCollateralValue(Data memory self) internal view returns (uint256 collateralValue) {\\n        uint256 collateralTokenPrice = self.priceOracle.getNormalizedPrice(self.collateralToken);\\n        collateralValue = self.collateralAmount.mul(collateralTokenPrice);\\n    }\\n\\n    function calculateLoanToValueRatio(Data memory self) internal view returns (uint256 loanToValueRatio) {\\n        if (self.principalAmount == 0) {\\n            return 0;\\n        }\\n        if (self.collateralAmount == 0) {\\n            return type(uint256).max;\\n        }\\n\\n        loanToValueRatio = self.principalAmount.div(getCollateralValue(self));\\n    }\\n}\\n\",\"keccak256\":\"0x5e5699ef19abb157e88e56379c690230087ffcd9357808f68a9ec22f24833065\",\"license\":\"BUSL-1.1\"},\"contracts/libraries/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nlibrary Math {\\n    function abs(int256 a) internal pure returns (uint256) {\\n        return a >= 0 ? uint256(a) : uint256(-a);\\n    }\\n}\\n\",\"keccak256\":\"0x7b7d9101e211b3e41539ffa11689c67241e1d76fa6794e12cc1c34a44b45b0af\",\"license\":\"MIT\"},\"contracts/libraries/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nerror ReentrancyGuardReentrantCall();\\n\\nabstract contract ReentrancyGuard {\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private status;\\n\\n    modifier nonReentrant() {\\n        if (status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        status = ENTERED;\\n\\n        _;\\n\\n        status = NOT_ENTERED;\\n    }\\n\\n    constructor() {\\n        status = NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0c49a9dd65f669ba3be9e175ef8c81bd8e99567765015d22e6e0488f3ecf8d81\",\"license\":\"MIT\"},\"contracts/libraries/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nimport {IERC20} from \\\"./../interfaces/ERC20.sol\\\";\\nimport \\\"./Address.sol\\\";\\n\\nerror SafeERC20NoReturnData();\\n\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        callWithOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, amount));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        callWithOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, amount));\\n    }\\n\\n    function callWithOptionalReturn(IERC20 token, bytes memory data) internal {\\n        address tokenAddress = address(token);\\n\\n        bytes memory returnData = tokenAddress.functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returnData.length > 0) {\\n            if (!abi.decode(returnData, (bool))) {\\n                revert SafeERC20NoReturnData();\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa34dc3bade0644994ac478921c14186097231de0dd0426d7d349c26e79224741\",\"license\":\"MIT\"},\"contracts/libraries/Upgradability.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nimport \\\"./Address.sol\\\";\\n\\nerror EIP1967ImplementationIsNotContract(address implementation);\\nerror ContractAlreadyInitialized();\\nerror OnlyProxyCallAllowed();\\nerror OnlyCurrentImplementationAllowed();\\n\\nlibrary EIP1967 {\\n    using Address for address;\\n\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    event Upgraded(address indexed newImplementation);\\n\\n    function upgradeTo(address newImplementation) internal {\\n        if (!newImplementation.isContract()) {\\n            revert EIP1967ImplementationIsNotContract(newImplementation);\\n        }\\n\\n        assembly {\\n            sstore(IMPLEMENTATION_SLOT, newImplementation)\\n        }\\n\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    function getImplementation() internal view returns (address implementation) {\\n        assembly {\\n            implementation := sload(IMPLEMENTATION_SLOT)\\n        }\\n    }\\n}\\n\\ncontract Proxy {\\n    using Address for address;\\n\\n    constructor(address implementation, bytes memory data) {\\n        EIP1967.upgradeTo(implementation);\\n        implementation.delegateCall(data, \\\"Proxy: construction failed\\\");\\n    }\\n\\n    receive() external payable {\\n        delegateCall();\\n    }\\n\\n    fallback() external payable {\\n        delegateCall();\\n    }\\n\\n    function delegateCall() internal {\\n        address implementation = EIP1967.getImplementation();\\n\\n        assembly {\\n            calldatacopy(0, 0, calldatasize())\\n\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n}\\n\\nabstract contract Upgradeable {\\n    address private immutable self = address(this);\\n\\n    modifier onlyProxy() {\\n        if (address(this) == self) {\\n            revert OnlyProxyCallAllowed();\\n        }\\n        if (EIP1967.getImplementation() != self) {\\n            revert OnlyCurrentImplementationAllowed();\\n        }\\n        _;\\n    }\\n\\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\\n        EIP1967.upgradeTo(newImplementation);\\n    }\\n}\\n\\nabstract contract Initializable {\\n    bool private initializing;\\n    bool private initialized;\\n\\n    modifier initializer() {\\n        if (!initializing && initialized) {\\n            revert ContractAlreadyInitialized();\\n        }\\n\\n        bool isTopLevelCall = !initializing;\\n        if (isTopLevelCall) {\\n            initializing = true;\\n            initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            initializing = false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x60f5d719243332028141aec4adf396d615df4fc5113fe4e80f21af3af9174d58\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600160025561488d806100256000396000f3fe6080604052600436106103175760003560e01c80638a2381d71161019a578063d988ef20116100e1578063e3056a341161008a578063e9cbd82211610064578063e9cbd822146109f3578063ee0e54cb14610a13578063fb4ca35b14610a2957600080fd5b8063e3056a3414610993578063e3930249146109b3578063e7f3028c146109d357600080fd5b8063e16da9f8116100bb578063e16da9f8146108b9578063e1ec3c68146108d9578063e2bbb1581461097357600080fd5b8063d988ef201461083f578063ddc125261461086c578063dfe8f6711461088c57600080fd5b8063c78bede811610143578063d34cf64c1161011d578063d34cf64c146107f6578063d876d98e14610809578063d8aed1451461081f57600080fd5b8063c78bede8146106e6578063cf17622514610706578063cffbc2971461072857600080fd5b8063af76a7ef11610174578063af76a7ef14610691578063b26025aa146106b1578063b38e4816146106c657600080fd5b80638a2381d71461063b5780638fa1552e1461065b578063a5f3d0031461067b57600080fd5b8063415f12401161025e5780634c12d471116102075780637d7c2a1c116101e15780637d7c2a1c146105e6578063863a03e0146105fb57806387eae8191461061b57600080fd5b80634c12d47114610586578063570ca735146105a657806377c4572d146105c657600080fd5b806344dbdd901161023857806344dbdd90146105265780634721f2db146105465780634b8a35291461056657600080fd5b8063415f1240146104da57806342580dbe146104fa5780634433c5e81461051057600080fd5b80632b3c3892116102c0578063361416e11161029a578063361416e1146104845780633f8189ea1461049a5780634046ebae146104ba57600080fd5b80632b3c38921461042e5780632ecd3be41461044e578063358764761461046457600080fd5b80631cec9e75116102f15780631cec9e75146103d9578063238efcbc146103f95780632630c12f1461040e57600080fd5b80630b5a017a1461034e5780630b68a580146103775780630c340a241461039b57600080fd5b36610349576003546001600160a01b0316331461034757604051634b908c4f60e01b815260040160405180910390fd5b005b600080fd5b61036161035c36600461417d565b610a49565b60405161036e919061426a565b60405180910390f35b34801561038357600080fd5b5061038d600a5481565b60405190815260200161036e565b3480156103a757600080fd5b506000546103c1906201000090046001600160a01b031681565b6040516001600160a01b03909116815260200161036e565b3480156103e557600080fd5b5061038d6103f436600461417d565b610c0f565b34801561040557600080fd5b50610347610d07565b34801561041a57600080fd5b506005546103c1906001600160a01b031681565b34801561043a57600080fd5b5061034761044936600461417d565b610d9c565b34801561045a57600080fd5b5061038d600d5481565b34801561047057600080fd5b5061034761047f36600461428e565b610e0e565b34801561049057600080fd5b5061038d600b5481565b3480156104a657600080fd5b506103476104b536600461417d565b610f4d565b3480156104c657600080fd5b506007546103c1906001600160a01b031681565b3480156104e657600080fd5b506103476104f536600461417d565b610fbf565b34801561050657600080fd5b5061038d600c5481565b34801561051c57600080fd5b5061038d60105481565b34801561053257600080fd5b50610361610541366004614324565b611333565b34801561055257600080fd5b50610347610561366004614324565b6113d3565b34801561057257600080fd5b50610361610581366004614324565b6114e8565b34801561059257600080fd5b506008546103c1906001600160a01b031681565b3480156105b257600080fd5b506006546103c1906001600160a01b031681565b3480156105d257600080fd5b506103476105e136600461417d565b6115d0565b3480156105f257600080fd5b50610347611642565b34801561060757600080fd5b50610347610616366004614350565b611909565b34801561062757600080fd5b50610347610636366004614324565b611a2f565b34801561064757600080fd5b506009546103c1906001600160a01b031681565b34801561066757600080fd5b50610361610676366004614324565b611d18565b34801561068757600080fd5b5061038d600e5481565b34801561069d57600080fd5b506103476106ac36600461417d565b611db8565b3480156106bd57600080fd5b5061038d611e2a565b3480156106d257600080fd5b506103616106e1366004614324565b611f17565b3480156106f257600080fd5b50610347610701366004614350565b611fb7565b34801561071257600080fd5b5061071b6120cd565b60405161036e919061436d565b34801561073457600080fd5b506107a1610743366004614350565b60146020526000908152604090208054600182015460028301546003840154600485015460058601546006870154600788015460088901546009909901546001600160a01b039889169997909816979596949593949293919290918a565b604080516001600160a01b039b8c1681529a90991660208b0152978901969096526060880194909452608087019290925260a086015260c085015260e08401526101008301526101208201526101400161036e565b61034761080436600461417d565b61227f565b34801561081557600080fd5b5061038d600f5481565b34801561082b57600080fd5b5061034761083a36600461441c565b61241e565b34801561084b57600080fd5b5061085f61085a366004614350565b61280a565b60405161036e919061443e565b34801561087857600080fd5b5061034761088736600461449b565b6129d8565b34801561089857600080fd5b506108ac6108a736600461417d565b612ac6565b60405161036e91906144ea565b3480156108c557600080fd5b506103476108d4366004614512565b612aff565b3480156108e557600080fd5b506108f96108f436600461417d565b612be8565b604080519e8f529c151560208f01526001600160a01b039b8c169c8e019c909c52988a1660608d015296151560808c01529790941660a08a015260c089019290925260e08801526101008701526101208601526101408501929092526101608401919091526101808301526101a08201526101c00161036e565b34801561097f57600080fd5b5061034761098e36600461441c565b612c74565b34801561099f57600080fd5b506001546103c1906001600160a01b031681565b3480156109bf57600080fd5b5061038d6109ce366004614324565b612d88565b3480156109df57600080fd5b506003546103c1906001600160a01b031681565b3480156109ff57600080fd5b506004546103c1906001600160a01b031681565b348015610a1f57600080fd5b5061038d60115481565b348015610a3557600080fd5b50610347610a4436600461417d565b612db9565b610a516140ef565b600280541415610a7457604051633ee5aeb560e01b815260040160405180910390fd5b60028055600354600090610a91906001600160a01b031684611f17565b6001608082015260c0810151610160820151919250600091610ab39190614554565b905080341015610ade57604051631e59fc6f60e01b8152600481018290526024015b60405180910390fd5b600360009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015610b2e57600080fd5b505af1158015610b42573d6000803e3d6000fd5b505060065460c0860151600354610b8295506001600160a01b039283169450610b6f935090911690612e2b565b6003546001600160a01b03169190612edc565b34818103908214610bf857604051600090339083908381818185875af1925050503d8060008114610bcf576040519150601f19603f3d011682016040523d82523d6000602084013e610bd4565b606091505b5050905080610bf657604051638762150d60e01b815260040160405180910390fd5b505b610c0183612f6c565b600160025595945050505050565b60008060128381548110610c2557610c2561456c565b6000918252602091829020604080516101c081018252600c90930290910180548352600181015460ff8082161515958501959095526001600160a01b036101009182900481169385019390935260028201548084166060860152600160a01b900490941615156080840152600381015490911660a0830152600481015460c0830152600581015460e0830152600681015492820192909252600782015461012082015260088201546101408201526009820154610160820152600a820154610180820152600b909101546101a08201529050610d00816133f5565b9392505050565b6001546001600160a01b03163314610d325760405163aec80d4b60e01b815260040160405180910390fd5b60015460008054620100006001600160a01b0393841681810275ffffffffffffffffffffffffffffffffffffffff00001990931692909217808455604051929491900416917f564590b81987d147246f63910a8e1ee4eb09c4d64cc75ee975a8ffedfcc2210e91a3565b6000546201000090046001600160a01b03163314610dcd576040516305e7700560e51b815260040160405180910390fd5b600a5460408051918252602082018390527fde9fa07b6ca9d540214c05366e57cb33adf8f132014d9d1b2802a5b89a99512a910160405180910390a1600a55565b60005460ff16158015610e285750600054610100900460ff165b15610e4657604051631ee1e30360e21b815260040160405180910390fd5b60005460ff16158015610e63576000805461ffff19166101011790555b610e6c33613438565b600380546001600160a01b03199081166001600160a01b038b8116919091179092556004805482168a8416179055600580548216898416179055600680548216888416179055600780548216878416179055600880548216868416179055600980549091169184169190911790556802b5e3af16b1880000600a55666a94d74f430000600b55670bcbce7f1b150000600c55670214e8348c4f0000600d556000600e55670a688906bd8b0000600f55670b84c09a3b930000601055662386f26fc100006011558015610f43576000805460ff191690555b5050505050505050565b6000546201000090046001600160a01b03163314610f7e576040516305e7700560e51b815260040160405180910390fd5b60105460408051918252602082018390527fa466548b1a7b7c581a6b5b6e38ebed0f41846451118fb8582b71f8605b960cd8910160405180910390a1601055565b600280541415610fe257604051633ee5aeb560e01b815260040160405180910390fd5b600280556012548190811015806110205750601281815481106110075761100761456c565b600091825260209091206001600c90920201015460ff16155b15611041576040516372c4e6fd60e01b815260048101829052602401610ad5565b81600261104d82612ac6565b600281111561105e5761105e6144d4565b1461107e57604051621e4f3560e61b815260048101829052602401610ad5565b6000601284815481106110935761109361456c565b600091825260208083206009600c909302018281015460028201546001600160a01b031685526014909252604084209092018054929450909290916110d9908490614582565b90915550506007546009820154600283015461111d926001600160a01b03908116926111089290911690612e2b565b60028401546001600160a01b03169190612edc565b604080516101c08101825282548152600183015460ff808216151560208401526001600160a01b036101009283900481169484019490945260028501548085166060850152600160a01b90041615156080830152600384015490921660a0820152600483015460c0820152600583015460e0820152600683015491810191909152600782015461012082015260088201546101408201526009820154610160820152600a820154610180820152600b8201546101a08201526000906111e19061349f565b600480546007546008860154604051632770a7eb60e21b81526001600160a01b039283169481019490945260248401529293509190911690639dc29fac90604401600060405180830381600087803b15801561123c57600080fd5b505af1158015611250573d6000803e3d6000fd5b505060045460088501546001600160a01b039091169250639dc29fac9150309061127a9085614582565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156112d857600080fd5b505af11580156112ec573d6000803e3d6000fd5b50505060018301805460ff191690555060405185907fc9e9d7cf3944e82f1fe222573e1c9acf5a2f6cd29aa9639bc8078065f091bb6b90600090a250506001600255505050565b61133b6140ef565b6001600160a01b038084166000908152601460209081526040918290208251610140810184528154851681526001820154909416918401919091526002810154918301919091526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e0830152600881015461010083015260090154610120820152610d009083613539565b6000546201000090046001600160a01b03163314611404576040516305e7700560e51b815260040160405180910390fd5b6001600160a01b03821660009081526016602052604090205461144557604051634cbfe6c960e11b81526001600160a01b0383166004820152602401610ad5565b6001600160a01b03821660009081526014602052604090206007810154821061149357604051630d12026b60e31b81526001600160a01b038416600482015260248101839052604401610ad5565b6006810180549083905560408051828152602081018590526001600160a01b038616917fc6a8c526618a1ece6f5d33564501b92330c354faa23902079359e52c8efd72f391015b60405180910390a250505050565b6114f06140ef565b60028054141561151357604051633ee5aeb560e01b815260040160405180910390fd5b600280556001600160a01b038316600090815260166020526040902054839061155a576040516308cfe49560e31b81526001600160a01b0382166004820152602401610ad5565b60006115668585611f17565b60065460c08201519192506115a19133916001600160a01b039081169161158f918a1690612e2b565b6001600160a01b03891692919061363b565b6115c7333061158f846101600151896001600160a01b0316612e2b90919063ffffffff16565b610c0181612f6c565b6000546201000090046001600160a01b03163314611601576040516305e7700560e51b815260040160405180910390fd5b600f5460408051918252602082018390527fd2a3e4f854a80a895407f8743c1363ac14b698c432d22d8c65519e13a9e4983d910160405180910390a1600f55565b60028054141561166557604051633ee5aeb560e01b815260040160405180910390fd5b600280556000611673611e2a565b90506000600460009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156116c557600080fd5b505afa1580156116d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116fd9190614599565b9050600061170b83836145b2565b9050600061171882613679565b905060006117268285613691565b905060115481101561174b576040516363b74cfb60e01b815260040160405180910390fd5b60008313156118645760048054604051632770a7eb60e21b81523092810192909252602482018490526001600160a01b031690639dc29fac90604401600060405180830381600087803b1580156117a157600080fd5b505af19250505080156117b2575060015b61185f57600480546040516370a0823160e01b815230928101929092526000916001600160a01b03909116906370a082319060240160206040518083038186803b1580156117ff57600080fd5b505afa158015611813573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118379190614599565b90506118438184614582565b60405163dc14e6f760e01b8152600401610ad591815260200190565b6118ca565b600480546040516340c10f1960e01b81523092810192909252602482018490526001600160a01b0316906340c10f1990604401600060405180830381600087803b1580156118b157600080fd5b505af11580156118c5573d6000803e3d6000fd5b505050505b6040518381527fa3cc94864c69eaba081615f691669aa27c9f8697ad249e6c01a4d792b2aace949060200160405180910390a150506001600255505050565b6000546201000090046001600160a01b0316331461193a576040516305e7700560e51b815260040160405180910390fd5b60045481906001600160a01b038083169116148061196f57506001600160a01b03811660009081526016602052604090205415155b156119975760405162919e6d60e01b81526001600160a01b0383166004820152602401610ad5565b6006546040516370a0823160e01b8152306004820152611a2b916001600160a01b0390811691908516906370a082319060240160206040518083038186803b1580156119e257600080fd5b505afa1580156119f6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a1a9190614599565b6001600160a01b0385169190612edc565b5050565b6000546201000090046001600160a01b03163314611a60576040516305e7700560e51b815260040160405180910390fd5b6001600160a01b03821660009081526016602052604090205415611aa25760405163ca6d908160e01b81526001600160a01b0383166004820152602401610ad5565b600f548110611ad657604051630d12026b60e31b81526001600160a01b038316600482015260248101829052604401610ad5565b6000826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015611b1157600080fd5b505afa158015611b25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b49919061460a565b905060ff8116611b775760405163016058a160e51b81526001600160a01b0384166004820152602401610ad5565b601260ff82161115611bb05760405163dbba24db60e01b81526001600160a01b038416600482015260ff82166024820152604401610ad5565b611bbb6015846136a6565b15611d135760408051610140810182526001600160a01b038086168083526005805483166020808601918252600b54868801908152600c5460608801908152600d5460808901908152600e5460a08a0190815260c08a018d8152600f5460e08c019081526010546101008d0190815260006101208e018181528c825260149099528e81209d518e54908e166001600160a01b0319918216178f55995160018f01805491909e169a1699909917909b55945160028c0155925160038b0155905160048a0155519488019490945592516006870155915160078601559251600885015551600990930192909255915190917f55dcc5a02a669292f3baba7762915a1182901a9c28a30cc15d3325afcbb4bccc91a26040805160008152602081018490526001600160a01b038516917fc6a8c526618a1ece6f5d33564501b92330c354faa23902079359e52c8efd72f3910160405180910390a25b505050565b611d206140ef565b6001600160a01b038084166000908152601460209081526040918290208251610140810184528154851681526001820154909416918401919091526002810154918301919091526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e0830152600881015461010083015260090154610120820152610d009083613716565b6000546201000090046001600160a01b03163314611de9576040516305e7700560e51b815260040160405180910390fd5b60115460408051918252602082018390527f5eb53b71d73d0607121e658859e0125d7bbbf83c4288d44c18438d4fe94d1e07910160405180910390a1601155565b6000805b601554811015611f1357611ef56014600060156000018481548110611e5557611e5561456c565b60009182526020808320909101546001600160a01b0390811684528382019490945260409283019091208251610140810184528154851681526001820154909416918401919091526002810154918301919091526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e08301526008810154610100830152600901546101208201526138e2565b611eff9083614554565b915080611f0b8161462d565b915050611e2e565b5090565b611f1f6140ef565b6001600160a01b038084166000908152601460209081526040918290208251610140810184528154851681526001820154909416918401919091526002810154918301919091526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e0830152600881015461010083015260090154610120820152610d009083613979565b6000546201000090046001600160a01b03163314611fe8576040516305e7700560e51b815260040160405180910390fd5b6001600160a01b03811660009081526016602052604090205461202957604051634cbfe6c960e11b81526001600160a01b0382166004820152602401610ad5565b612034601582613b51565b156120ca576001600160a01b03811660008181526014602052604080822080546001600160a01b03199081168255600182018054909116905560028101839055600381018390556004810183905560058101839055600681018390556007810183905560088101839055600901829055517f6d08717837ebdfd34a4ddffe3e4566e0a68e8dde2464854e9242a8f7e6399a339190a25b50565b6015546060908067ffffffffffffffff8111156120ec576120ec614648565b60405190808252806020026020018201604052801561218557816020015b61217260405180610140016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526020019060019003908161210a5790505b50915060005b8181101561227a5760146000601560000183815481106121ad576121ad61456c565b60009182526020808320909101546001600160a01b0390811684528382019490945260409283019091208251610140810184528154851681526001820154909416918401919091526002810154918301919091526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e0830152600881015461010083015260090154610120820152835184908390811061225c5761225c61456c565b602002602001018190525080806122729061462d565b91505061218b565b505090565b6002805414156122a257604051633ee5aeb560e01b815260040160405180910390fd5b600280556012548190811015806122e05750601281815481106122c7576122c761456c565b600091825260209091206001600c90920201015460ff16155b15612301576040516372c4e6fd60e01b815260048101829052602401610ad5565b81600261230d82612ac6565b600281111561231e5761231e6144d4565b141561234057604051633d240fc360e01b815260048101829052602401610ad5565b600354601280546001600160a01b0390921691859081106123635761236361456c565b600091825260209091206002600c9092020101546001600160a01b0316146123a157604051635d64f43b60e01b815260048101849052602401610ad5565b600360009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156123f157600080fd5b505af1158015612405573d6000803e3d6000fd5b50505050506124148334613c8a565b5050600160025550565b60028054141561244157604051633ee5aeb560e01b815260040160405180910390fd5b6002805560125482908110158061247f5750601281815481106124665761246661456c565b600091825260209091206001600c90920201015460ff16155b156124a0576040516372c4e6fd60e01b815260048101829052602401610ad5565b8260026124ac82612ac6565b60028111156124bd576124bd6144d4565b14156124df57604051633d240fc360e01b815260048101829052602401610ad5565b826124fd57604051631d23e67d60e21b815260040160405180910390fd5b6000601285815481106125125761251261456c565b90600052602060002090600c02019050838160080160008282546125369190614582565b909155505060048054604051632770a7eb60e21b81523392810192909252602482018690526001600160a01b031690639dc29fac90604401600060405180830381600087803b15801561258857600080fd5b505af115801561259c573d6000803e3d6000fd5b505042600b84015550506008810154156125ef57847f552544cb36551120f07c66c5cd4b2987725a0c72198587f2ce796099bb66c58c856040516125e291815260200190565b60405180910390a26127fe565b6009810154600282015460009161260f916001600160a01b031690612e2b565b60098084015460028501546001600160a01b0316600090815260146020526040812090920180549394509092909190612649908490614582565b909155505060006009830155600480546005840154604051632770a7eb60e21b8152309381019390935260248301526001600160a01b031690639dc29fac90604401600060405180830381600087803b1580156126a557600080fd5b505af11580156126b9573d6000803e3d6000fd5b50505060018301805460ff191690555060405186907f33a382daad6aace935340a474d09fec82af4bec7e2b69518d283231b03a65f2490600090a26002820154600160a01b900460ff16612733576001820154600283015461272e916001600160a01b03918216916101009091041683612edc565b6127fc565b600354604051632e1a7d4d60e01b8152600481018390526001600160a01b0390911690632e1a7d4d90602401600060405180830381600087803b15801561277957600080fd5b505af115801561278d573d6000803e3d6000fd5b50506040516000925033915083908381818185875af1925050503d80600081146127d3576040519150601f19603f3d011682016040523d82523d6000602084013e6127d8565b606091505b50509050806127fa57604051638762150d60e01b815260040160405180910390fd5b505b505b50506001600255505050565b6001600160a01b0381166000908152601360205260409020546060908067ffffffffffffffff81111561283f5761283f614648565b60405190808252806020026020018201604052801561287857816020015b6128656140ef565b81526020019060019003908161285d5790505b50915060005b818110156129d1576001600160a01b0384166000908152601360205260409020805460129190839081106128b4576128b461456c565b9060005260206000200154815481106128cf576128cf61456c565b6000918252602091829020604080516101c081018252600c90930290910180548352600181015460ff8082161515958501959095526001600160a01b036101009182900481169385019390935260028201548084166060860152600160a01b900490941615156080840152600381015490911660a0830152600481015460c0830152600581015460e0830152600681015492820192909252600782015461012082015260088201546101408201526009820154610160820152600a820154610180820152600b909101546101a082015283518490839081106129b3576129b361456c565b602002602001018190525080806129c99061462d565b91505061287e565b5050919050565b6000546201000090046001600160a01b03163314612a09576040516305e7700560e51b815260040160405180910390fd5b6001600160a01b038216612a305760405163604b48b960e11b815260040160405180910390fd5b6001600160a01b038216301415612a5a576040516306b3e95d60e21b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b03841617905580612abd57600080546040516001600160a01b03808616936201000090930416917fc606c9af1451cadeb333f6ff7b24a5540974f4e800bac274fa7fff9edc305cb191a35050565b611a2b82613438565b600080612ad283610c0f565b9050601054811015612af657600f54811015612aef576000610d00565b6001610d00565b60029392505050565b6000546201000090046001600160a01b03163314612b30576040516305e7700560e51b815260040160405180910390fd5b670de0b6b3a764000081612b448486614554565b612b4e9190614554565b14612b7d5760405163245c170760e21b8152600481018490526024810183905260448101829052606401610ad5565b600c54600d54600e54604080519384526020840187905283019190915260608201849052608082015260a081018290527f1f7068a9be898db6fcd350ac2ff32fc5f1e6fc46c8e6cc973cde53793ff3ab5e9060c00160405180910390a1600c92909255600d55600e55565b60128181548110612bf857600080fd5b60009182526020909120600c9091020180546001820154600283015460038401546004850154600586015460068701546007880154600889015460098a0154600a8b0154600b909b0154999b5060ff808a169b610100909a046001600160a01b039081169b818b169b600160a01b909b0490921699981697908e565b600280541415612c9757604051633ee5aeb560e01b815260040160405180910390fd5b60028055601254829081101580612cd5575060128181548110612cbc57612cbc61456c565b600091825260209091206001600c90920201015460ff16155b15612cf6576040516372c4e6fd60e01b815260048101829052602401610ad5565b826002612d0282612ac6565b6002811115612d1357612d136144d4565b1415612d3557604051633d240fc360e01b815260048101829052602401610ad5565b612d7333308560128881548110612d4e57612d4e61456c565b600091825260209091206002600c9092020101546001600160a01b031692919061363b565b612d7d8484613c8a565b505060016002555050565b60136020528160005260406000208181548110612da457600080fd5b90600052602060002001600091509150505481565b6000546201000090046001600160a01b03163314612dea576040516305e7700560e51b815260040160405180910390fd5b600b5460408051918252602082018390527fde9fa07b6ca9d540214c05366e57cb33adf8f132014d9d1b2802a5b89a99512a910160405180910390a1600b55565b600080836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015612e6757600080fd5b505afa158015612e7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e9f919061460a565b612eaa90601261465e565b612eb590600a614765565b905080600114612ed157612ec98184614774565b915050612ed6565b829150505b92915050565b6040516001600160a01b038316602482015260448101829052611d1390849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152613d6f565b612f746140ef565b610140820151612f97576040516379d1504360e01b815260040160405180910390fd5b600a548261014001511015612fbf57604051631efe3f1960e11b815260040160405180910390fd5b6004805460e08401516040516340c10f1960e01b8152309381019390935260248301526001600160a01b0316906340c10f1990604401600060405180830381600087803b15801561300f57600080fd5b505af1158015613023573d6000803e3d6000fd5b5050600480546008546101008701516040516340c10f1960e01b81526001600160a01b039283169481019490945260248401521692506340c10f199150604401600060405180830381600087803b15801561307d57600080fd5b505af1158015613091573d6000803e3d6000fd5b5050600480546009546101208701516040516340c10f1960e01b81526001600160a01b039283169481019490945260248401521692506340c10f199150604401600060405180830381600087803b1580156130eb57600080fd5b505af11580156130ff573d6000803e3d6000fd5b50506004805460408681015161014088015191516340c10f1960e01b81526001600160a01b039182169481019490945260248401919091521692506340c10f199150604401600060405180830381600087803b15801561315e57600080fd5b505af1158015613172573d6000803e3d6000fd5b50505050600060128054905090508083600001818152505060128390806001815401808255809150506001900390600052602060002090600c02016000909190919091506000820151816000015560208201518160010160006101000a81548160ff02191690831515021790555060408201518160010160016101000a8154816001600160a01b0302191690836001600160a01b0316021790555060608201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060808201518160020160146101000a81548160ff02191690831515021790555060a08201518160030160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060c0820151816004015560e08201518160050155610100820151816006015561012082015181600701556101408201518160080155610160820151816009015561018082015181600a01556101a082015181600b015550506013600084604001516001600160a01b03166001600160a01b031681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150558261016001516014600085606001516001600160a01b03166001600160a01b0316815260200190815260200160002060090160008282546133709190614554565b90915550506060838101516040808601516101408701516101608801516001600160a01b03948516600081815260146020908152908690206006015486519485529084019290925293820152919392169184917f1c719a9a8ef2d44db7255e8d65b4a18a23f44758d6ebc0d6b80fe018d25433fb910160405180910390a45090919050565b60008161014001516000141561340d57506000919050565b6101608201516134205750600019919050565b612ed661342c8361349f565b61014084015190613691565b6000805475ffffffffffffffffffffffffffffffffffffffff00001916620100006001600160a01b0384811682810293909317808555604051939492900416917f564590b81987d147246f63910a8e1ee4eb09c4d64cc75ee975a8ffedfcc2210e9190a350565b60a08101516060820151604051630787c49960e21b81526001600160a01b03918216600482015260009283921690631e1f12649060240160206040518083038186803b1580156134ee57600080fd5b505afa158015613502573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135269190614599565b610160840151909150610d009082613df9565b6135416140ef565b60208301518351604051630787c49960e21b81526001600160a01b0391821660048201526000929190911690631e1f12649060240160206040518083038186803b15801561358e57600080fd5b505afa1580156135a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135c69190614599565b905060006135e58560c001518660400151613df990919063ffffffff16565b905060006136256135fe670de0b6b3a764000084614554565b61361f856136198a60c001518a613df990919063ffffffff16565b90613df9565b90613691565b90506136318682613979565b9695505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526136739085906323b872dd60e01b90608401612f08565b50505050565b600080821215611f135761368c82614796565b612ed6565b6000610d0083670de0b6b3a764000084613ec9565b6001600160a01b0381166000908152600183016020526040812054156136ce57506000612ed6565b508154600180820184556000848152602080822090930180546001600160a01b0319166001600160a01b03959095169485179055845493815293810190915260409092205590565b61371e6140ef565b60208301518351604051630787c49960e21b81526001600160a01b0391821660048201526000929190911690631e1f12649060240160206040518083038186803b15801561376b57600080fd5b505afa15801561377f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137a39190614599565b905060006137c2826136198760c0015187613df990919063ffffffff16565b60c08601519091506000906137ed9061361f6137e682670de0b6b3a7640000614582565b8590613df9565b90506000613808876060015183613df990919063ffffffff16565b90506000613823886080015184613df990919063ffffffff16565b9050600061383e8960a0015185613df990919063ffffffff16565b9050600061385d8761361f888d60400151613df990919063ffffffff16565b604080516101c0810182526000808252600160208084019190915233938301939093528d516001600160a01b03908116606084015260808301919091529c90910151909b1660a08c015260c08b01525060e08901929092526101008801526101208701525061014085015250506101608201524261018082018190526101a082015290565b60208101518151604051630787c49960e21b81526001600160a01b03918216600482015260009283921690631e1f12649060240160206040518083038186803b15801561392e57600080fd5b505afa158015613942573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139669190614599565b610120840151909150610d009082613df9565b6139816140ef565b60208301518351604051630787c49960e21b81526001600160a01b0391821660048201526000929190911690631e1f12649060240160206040518083038186803b1580156139ce57600080fd5b505afa1580156139e2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a069190614599565b60c0850151909150600090613a319061361f613a2a82670de0b6b3a7640000614582565b8790613df9565b90506000613a4c866060015183613df990919063ffffffff16565b90506000613a67876080015184613df990919063ffffffff16565b90506000613a828860a0015185613df990919063ffffffff16565b90506000613aa7613aa0878b60c00151613df990919063ffffffff16565b8990613691565b90506000613ac68761361f8b8d60400151613df990919063ffffffff16565b604080516101c0810182526000808252600160208084019190915233938301939093528d516001600160a01b03908116606084015260808301919091529c90910151909b1660a08c015260c08b01525060e08901939093526101008801919091526101208701526101408601949094525050506101608201524261018082018190526101a082015290565b6001600160a01b038116600090815260018301602052604081205480613b7b576000915050612ed6565b6000613b88600183614582565b905060006001613b96875490565b613ba09190614582565b9050808214613c2c576000866000018281548110613bc057613bc061456c565b60009182526020909120015487546001600160a01b0390911691508190889085908110613bef57613bef61456c565b600091825260208083209190910180546001600160a01b0319166001600160a01b0394851617905592909116815260018801909152604090208390555b8554869080613c3d57613c3d6147b3565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b038716825260018881019091526040822091909155935050505092915050565b80613ca857604051635491c16d60e01b815260040160405180910390fd5b600060128381548110613cbd57613cbd61456c565b6000918252602082206002600c9092020190810154909250613ce8906001600160a01b031684613f84565b905080826009016000828254613cfe9190614554565b909155505042600a83015560028201546001600160a01b031660009081526014602052604081206009018054839290613d38908490614554565b909155505060405181815284907fa3af609bf46297028ce551832669030f9effef2b02606d02cbbcc40fe6b47c55906020016114da565b6040805180820190915260208082527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564908201528290600090613dbe906001600160a01b038416908590614022565b8051909150156136735780806020019051810190613ddc91906147c9565b61367357604051639b8d506160e01b815260040160405180910390fd5b60008080600019848609848602925082811083820303915050670de0b6b3a76400008110613e4b5760405163072fa3c960e31b815260048101829052670de0b6b3a76400006024820152604401610ad5565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff811182613e855780670de0b6b3a7640000850401945050505050612ed6565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b60008080600019858709858702925082811083820303915050838110613f0c5760405163072fa3c960e31b81526004810182905260248101859052604401610ad5565b80613f1c57508290049050610d00565b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b600080836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015613fc057600080fd5b505afa158015613fd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ff8919061460a565b61400390601261465e565b61400e90600a614765565b905080600114612ed157612ec981846147e6565b6060833b61404e5760405163dc5dd7fd60e01b81526001600160a01b0385166004820152602401610ad5565b600080856001600160a01b0316856040516140699190614831565b6000604051808303816000865af19150503d80600081146140a6576040519150601f19603f3d011682016040523d82523d6000602084013e6140ab565b606091505b5091509150613631828286606083156140c5575081610d00565b8251156140d55782518060208501fd5b8160405162461bcd60e51b8152600401610ad5919061484d565b604051806101c001604052806000815260200160001515815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160001515815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60006020828403121561418f57600080fd5b5035919050565b8051825260208101516141ad602084018215159052565b5060408101516141c860408401826001600160a01b03169052565b5060608101516141e360608401826001600160a01b03169052565b5060808101516141f7608084018215159052565b5060a081015161421260a08401826001600160a01b03169052565b5060c0818101519083015260e08082015190830152610100808201519083015261012080820151908301526101408082015190830152610160808201519083015261018080820151908301526101a090810151910152565b6101c08101612ed68284614196565b6001600160a01b03811681146120ca57600080fd5b600080600080600080600060e0888a0312156142a957600080fd5b87356142b481614279565b965060208801356142c481614279565b955060408801356142d481614279565b945060608801356142e481614279565b935060808801356142f481614279565b925060a088013561430481614279565b915060c088013561431481614279565b8091505092959891949750929550565b6000806040838503121561433757600080fd5b823561434281614279565b946020939093013593505050565b60006020828403121561436257600080fd5b8135610d0081614279565b602080825282518282018190526000919060409081850190868401855b8281101561440f57815180516001600160a01b0390811686528782015116878601528581015186860152606080820151908601526080808201519086015260a0808201519086015260c0808201519086015260e0808201519086015261010080820151908601526101209081015190850152610140909301929085019060010161438a565b5091979650505050505050565b6000806040838503121561442f57600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b818110156144815761446d838551614196565b928401926101c0929092019160010161445a565b50909695505050505050565b80151581146120ca57600080fd5b600080604083850312156144ae57600080fd5b82356144b981614279565b915060208301356144c98161448d565b809150509250929050565b634e487b7160e01b600052602160045260246000fd5b602081016003831061450c57634e487b7160e01b600052602160045260246000fd5b91905290565b60008060006060848603121561452757600080fd5b505081359360208301359350604090920135919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156145675761456761453e565b500190565b634e487b7160e01b600052603260045260246000fd5b6000828210156145945761459461453e565b500390565b6000602082840312156145ab57600080fd5b5051919050565b60008083128015600160ff1b8501841216156145d0576145d061453e565b837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0183138116156146045761460461453e565b50500390565b60006020828403121561461c57600080fd5b815160ff81168114610d0057600080fd5b60006000198214156146415761464161453e565b5060010190565b634e487b7160e01b600052604160045260246000fd5b600060ff821660ff8416808210156146785761467861453e565b90039392505050565b600181815b808511156146bc5781600019048211156146a2576146a261453e565b808516156146af57918102915b93841c9390800290614686565b509250929050565b6000826146d357506001612ed6565b816146e057506000612ed6565b81600181146146f657600281146147005761471c565b6001915050612ed6565b60ff8411156147115761471161453e565b50506001821b612ed6565b5060208310610133831016604e8410600b841016171561473f575081810a612ed6565b6147498383614681565b806000190482111561475d5761475d61453e565b029392505050565b6000610d0060ff8416836146c4565b60008261479157634e487b7160e01b600052601260045260246000fd5b500490565b6000600160ff1b8214156147ac576147ac61453e565b5060000390565b634e487b7160e01b600052603160045260246000fd5b6000602082840312156147db57600080fd5b8151610d008161448d565b60008160001904831182151516156148005761480061453e565b500290565b60005b83811015614820578181015183820152602001614808565b838111156136735750506000910152565b60008251614843818460208701614805565b9190910192915050565b602081526000825180602084015261486c816040850160208701614805565b601f01601f1916919091016040019291505056fea164736f6c6343000809000a",
  "deployedBytecode": "0x6080604052600436106103175760003560e01c80638a2381d71161019a578063d988ef20116100e1578063e3056a341161008a578063e9cbd82211610064578063e9cbd822146109f3578063ee0e54cb14610a13578063fb4ca35b14610a2957600080fd5b8063e3056a3414610993578063e3930249146109b3578063e7f3028c146109d357600080fd5b8063e16da9f8116100bb578063e16da9f8146108b9578063e1ec3c68146108d9578063e2bbb1581461097357600080fd5b8063d988ef201461083f578063ddc125261461086c578063dfe8f6711461088c57600080fd5b8063c78bede811610143578063d34cf64c1161011d578063d34cf64c146107f6578063d876d98e14610809578063d8aed1451461081f57600080fd5b8063c78bede8146106e6578063cf17622514610706578063cffbc2971461072857600080fd5b8063af76a7ef11610174578063af76a7ef14610691578063b26025aa146106b1578063b38e4816146106c657600080fd5b80638a2381d71461063b5780638fa1552e1461065b578063a5f3d0031461067b57600080fd5b8063415f12401161025e5780634c12d471116102075780637d7c2a1c116101e15780637d7c2a1c146105e6578063863a03e0146105fb57806387eae8191461061b57600080fd5b80634c12d47114610586578063570ca735146105a657806377c4572d146105c657600080fd5b806344dbdd901161023857806344dbdd90146105265780634721f2db146105465780634b8a35291461056657600080fd5b8063415f1240146104da57806342580dbe146104fa5780634433c5e81461051057600080fd5b80632b3c3892116102c0578063361416e11161029a578063361416e1146104845780633f8189ea1461049a5780634046ebae146104ba57600080fd5b80632b3c38921461042e5780632ecd3be41461044e578063358764761461046457600080fd5b80631cec9e75116102f15780631cec9e75146103d9578063238efcbc146103f95780632630c12f1461040e57600080fd5b80630b5a017a1461034e5780630b68a580146103775780630c340a241461039b57600080fd5b36610349576003546001600160a01b0316331461034757604051634b908c4f60e01b815260040160405180910390fd5b005b600080fd5b61036161035c36600461417d565b610a49565b60405161036e919061426a565b60405180910390f35b34801561038357600080fd5b5061038d600a5481565b60405190815260200161036e565b3480156103a757600080fd5b506000546103c1906201000090046001600160a01b031681565b6040516001600160a01b03909116815260200161036e565b3480156103e557600080fd5b5061038d6103f436600461417d565b610c0f565b34801561040557600080fd5b50610347610d07565b34801561041a57600080fd5b506005546103c1906001600160a01b031681565b34801561043a57600080fd5b5061034761044936600461417d565b610d9c565b34801561045a57600080fd5b5061038d600d5481565b34801561047057600080fd5b5061034761047f36600461428e565b610e0e565b34801561049057600080fd5b5061038d600b5481565b3480156104a657600080fd5b506103476104b536600461417d565b610f4d565b3480156104c657600080fd5b506007546103c1906001600160a01b031681565b3480156104e657600080fd5b506103476104f536600461417d565b610fbf565b34801561050657600080fd5b5061038d600c5481565b34801561051c57600080fd5b5061038d60105481565b34801561053257600080fd5b50610361610541366004614324565b611333565b34801561055257600080fd5b50610347610561366004614324565b6113d3565b34801561057257600080fd5b50610361610581366004614324565b6114e8565b34801561059257600080fd5b506008546103c1906001600160a01b031681565b3480156105b257600080fd5b506006546103c1906001600160a01b031681565b3480156105d257600080fd5b506103476105e136600461417d565b6115d0565b3480156105f257600080fd5b50610347611642565b34801561060757600080fd5b50610347610616366004614350565b611909565b34801561062757600080fd5b50610347610636366004614324565b611a2f565b34801561064757600080fd5b506009546103c1906001600160a01b031681565b34801561066757600080fd5b50610361610676366004614324565b611d18565b34801561068757600080fd5b5061038d600e5481565b34801561069d57600080fd5b506103476106ac36600461417d565b611db8565b3480156106bd57600080fd5b5061038d611e2a565b3480156106d257600080fd5b506103616106e1366004614324565b611f17565b3480156106f257600080fd5b50610347610701366004614350565b611fb7565b34801561071257600080fd5b5061071b6120cd565b60405161036e919061436d565b34801561073457600080fd5b506107a1610743366004614350565b60146020526000908152604090208054600182015460028301546003840154600485015460058601546006870154600788015460088901546009909901546001600160a01b039889169997909816979596949593949293919290918a565b604080516001600160a01b039b8c1681529a90991660208b0152978901969096526060880194909452608087019290925260a086015260c085015260e08401526101008301526101208201526101400161036e565b61034761080436600461417d565b61227f565b34801561081557600080fd5b5061038d600f5481565b34801561082b57600080fd5b5061034761083a36600461441c565b61241e565b34801561084b57600080fd5b5061085f61085a366004614350565b61280a565b60405161036e919061443e565b34801561087857600080fd5b5061034761088736600461449b565b6129d8565b34801561089857600080fd5b506108ac6108a736600461417d565b612ac6565b60405161036e91906144ea565b3480156108c557600080fd5b506103476108d4366004614512565b612aff565b3480156108e557600080fd5b506108f96108f436600461417d565b612be8565b604080519e8f529c151560208f01526001600160a01b039b8c169c8e019c909c52988a1660608d015296151560808c01529790941660a08a015260c089019290925260e08801526101008701526101208601526101408501929092526101608401919091526101808301526101a08201526101c00161036e565b34801561097f57600080fd5b5061034761098e36600461441c565b612c74565b34801561099f57600080fd5b506001546103c1906001600160a01b031681565b3480156109bf57600080fd5b5061038d6109ce366004614324565b612d88565b3480156109df57600080fd5b506003546103c1906001600160a01b031681565b3480156109ff57600080fd5b506004546103c1906001600160a01b031681565b348015610a1f57600080fd5b5061038d60115481565b348015610a3557600080fd5b50610347610a4436600461417d565b612db9565b610a516140ef565b600280541415610a7457604051633ee5aeb560e01b815260040160405180910390fd5b60028055600354600090610a91906001600160a01b031684611f17565b6001608082015260c0810151610160820151919250600091610ab39190614554565b905080341015610ade57604051631e59fc6f60e01b8152600481018290526024015b60405180910390fd5b600360009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015610b2e57600080fd5b505af1158015610b42573d6000803e3d6000fd5b505060065460c0860151600354610b8295506001600160a01b039283169450610b6f935090911690612e2b565b6003546001600160a01b03169190612edc565b34818103908214610bf857604051600090339083908381818185875af1925050503d8060008114610bcf576040519150601f19603f3d011682016040523d82523d6000602084013e610bd4565b606091505b5050905080610bf657604051638762150d60e01b815260040160405180910390fd5b505b610c0183612f6c565b600160025595945050505050565b60008060128381548110610c2557610c2561456c565b6000918252602091829020604080516101c081018252600c90930290910180548352600181015460ff8082161515958501959095526001600160a01b036101009182900481169385019390935260028201548084166060860152600160a01b900490941615156080840152600381015490911660a0830152600481015460c0830152600581015460e0830152600681015492820192909252600782015461012082015260088201546101408201526009820154610160820152600a820154610180820152600b909101546101a08201529050610d00816133f5565b9392505050565b6001546001600160a01b03163314610d325760405163aec80d4b60e01b815260040160405180910390fd5b60015460008054620100006001600160a01b0393841681810275ffffffffffffffffffffffffffffffffffffffff00001990931692909217808455604051929491900416917f564590b81987d147246f63910a8e1ee4eb09c4d64cc75ee975a8ffedfcc2210e91a3565b6000546201000090046001600160a01b03163314610dcd576040516305e7700560e51b815260040160405180910390fd5b600a5460408051918252602082018390527fde9fa07b6ca9d540214c05366e57cb33adf8f132014d9d1b2802a5b89a99512a910160405180910390a1600a55565b60005460ff16158015610e285750600054610100900460ff165b15610e4657604051631ee1e30360e21b815260040160405180910390fd5b60005460ff16158015610e63576000805461ffff19166101011790555b610e6c33613438565b600380546001600160a01b03199081166001600160a01b038b8116919091179092556004805482168a8416179055600580548216898416179055600680548216888416179055600780548216878416179055600880548216868416179055600980549091169184169190911790556802b5e3af16b1880000600a55666a94d74f430000600b55670bcbce7f1b150000600c55670214e8348c4f0000600d556000600e55670a688906bd8b0000600f55670b84c09a3b930000601055662386f26fc100006011558015610f43576000805460ff191690555b5050505050505050565b6000546201000090046001600160a01b03163314610f7e576040516305e7700560e51b815260040160405180910390fd5b60105460408051918252602082018390527fa466548b1a7b7c581a6b5b6e38ebed0f41846451118fb8582b71f8605b960cd8910160405180910390a1601055565b600280541415610fe257604051633ee5aeb560e01b815260040160405180910390fd5b600280556012548190811015806110205750601281815481106110075761100761456c565b600091825260209091206001600c90920201015460ff16155b15611041576040516372c4e6fd60e01b815260048101829052602401610ad5565b81600261104d82612ac6565b600281111561105e5761105e6144d4565b1461107e57604051621e4f3560e61b815260048101829052602401610ad5565b6000601284815481106110935761109361456c565b600091825260208083206009600c909302018281015460028201546001600160a01b031685526014909252604084209092018054929450909290916110d9908490614582565b90915550506007546009820154600283015461111d926001600160a01b03908116926111089290911690612e2b565b60028401546001600160a01b03169190612edc565b604080516101c08101825282548152600183015460ff808216151560208401526001600160a01b036101009283900481169484019490945260028501548085166060850152600160a01b90041615156080830152600384015490921660a0820152600483015460c0820152600583015460e0820152600683015491810191909152600782015461012082015260088201546101408201526009820154610160820152600a820154610180820152600b8201546101a08201526000906111e19061349f565b600480546007546008860154604051632770a7eb60e21b81526001600160a01b039283169481019490945260248401529293509190911690639dc29fac90604401600060405180830381600087803b15801561123c57600080fd5b505af1158015611250573d6000803e3d6000fd5b505060045460088501546001600160a01b039091169250639dc29fac9150309061127a9085614582565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156112d857600080fd5b505af11580156112ec573d6000803e3d6000fd5b50505060018301805460ff191690555060405185907fc9e9d7cf3944e82f1fe222573e1c9acf5a2f6cd29aa9639bc8078065f091bb6b90600090a250506001600255505050565b61133b6140ef565b6001600160a01b038084166000908152601460209081526040918290208251610140810184528154851681526001820154909416918401919091526002810154918301919091526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e0830152600881015461010083015260090154610120820152610d009083613539565b6000546201000090046001600160a01b03163314611404576040516305e7700560e51b815260040160405180910390fd5b6001600160a01b03821660009081526016602052604090205461144557604051634cbfe6c960e11b81526001600160a01b0383166004820152602401610ad5565b6001600160a01b03821660009081526014602052604090206007810154821061149357604051630d12026b60e31b81526001600160a01b038416600482015260248101839052604401610ad5565b6006810180549083905560408051828152602081018590526001600160a01b038616917fc6a8c526618a1ece6f5d33564501b92330c354faa23902079359e52c8efd72f391015b60405180910390a250505050565b6114f06140ef565b60028054141561151357604051633ee5aeb560e01b815260040160405180910390fd5b600280556001600160a01b038316600090815260166020526040902054839061155a576040516308cfe49560e31b81526001600160a01b0382166004820152602401610ad5565b60006115668585611f17565b60065460c08201519192506115a19133916001600160a01b039081169161158f918a1690612e2b565b6001600160a01b03891692919061363b565b6115c7333061158f846101600151896001600160a01b0316612e2b90919063ffffffff16565b610c0181612f6c565b6000546201000090046001600160a01b03163314611601576040516305e7700560e51b815260040160405180910390fd5b600f5460408051918252602082018390527fd2a3e4f854a80a895407f8743c1363ac14b698c432d22d8c65519e13a9e4983d910160405180910390a1600f55565b60028054141561166557604051633ee5aeb560e01b815260040160405180910390fd5b600280556000611673611e2a565b90506000600460009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156116c557600080fd5b505afa1580156116d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116fd9190614599565b9050600061170b83836145b2565b9050600061171882613679565b905060006117268285613691565b905060115481101561174b576040516363b74cfb60e01b815260040160405180910390fd5b60008313156118645760048054604051632770a7eb60e21b81523092810192909252602482018490526001600160a01b031690639dc29fac90604401600060405180830381600087803b1580156117a157600080fd5b505af19250505080156117b2575060015b61185f57600480546040516370a0823160e01b815230928101929092526000916001600160a01b03909116906370a082319060240160206040518083038186803b1580156117ff57600080fd5b505afa158015611813573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118379190614599565b90506118438184614582565b60405163dc14e6f760e01b8152600401610ad591815260200190565b6118ca565b600480546040516340c10f1960e01b81523092810192909252602482018490526001600160a01b0316906340c10f1990604401600060405180830381600087803b1580156118b157600080fd5b505af11580156118c5573d6000803e3d6000fd5b505050505b6040518381527fa3cc94864c69eaba081615f691669aa27c9f8697ad249e6c01a4d792b2aace949060200160405180910390a150506001600255505050565b6000546201000090046001600160a01b0316331461193a576040516305e7700560e51b815260040160405180910390fd5b60045481906001600160a01b038083169116148061196f57506001600160a01b03811660009081526016602052604090205415155b156119975760405162919e6d60e01b81526001600160a01b0383166004820152602401610ad5565b6006546040516370a0823160e01b8152306004820152611a2b916001600160a01b0390811691908516906370a082319060240160206040518083038186803b1580156119e257600080fd5b505afa1580156119f6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a1a9190614599565b6001600160a01b0385169190612edc565b5050565b6000546201000090046001600160a01b03163314611a60576040516305e7700560e51b815260040160405180910390fd5b6001600160a01b03821660009081526016602052604090205415611aa25760405163ca6d908160e01b81526001600160a01b0383166004820152602401610ad5565b600f548110611ad657604051630d12026b60e31b81526001600160a01b038316600482015260248101829052604401610ad5565b6000826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015611b1157600080fd5b505afa158015611b25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b49919061460a565b905060ff8116611b775760405163016058a160e51b81526001600160a01b0384166004820152602401610ad5565b601260ff82161115611bb05760405163dbba24db60e01b81526001600160a01b038416600482015260ff82166024820152604401610ad5565b611bbb6015846136a6565b15611d135760408051610140810182526001600160a01b038086168083526005805483166020808601918252600b54868801908152600c5460608801908152600d5460808901908152600e5460a08a0190815260c08a018d8152600f5460e08c019081526010546101008d0190815260006101208e018181528c825260149099528e81209d518e54908e166001600160a01b0319918216178f55995160018f01805491909e169a1699909917909b55945160028c0155925160038b0155905160048a0155519488019490945592516006870155915160078601559251600885015551600990930192909255915190917f55dcc5a02a669292f3baba7762915a1182901a9c28a30cc15d3325afcbb4bccc91a26040805160008152602081018490526001600160a01b038516917fc6a8c526618a1ece6f5d33564501b92330c354faa23902079359e52c8efd72f3910160405180910390a25b505050565b611d206140ef565b6001600160a01b038084166000908152601460209081526040918290208251610140810184528154851681526001820154909416918401919091526002810154918301919091526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e0830152600881015461010083015260090154610120820152610d009083613716565b6000546201000090046001600160a01b03163314611de9576040516305e7700560e51b815260040160405180910390fd5b60115460408051918252602082018390527f5eb53b71d73d0607121e658859e0125d7bbbf83c4288d44c18438d4fe94d1e07910160405180910390a1601155565b6000805b601554811015611f1357611ef56014600060156000018481548110611e5557611e5561456c565b60009182526020808320909101546001600160a01b0390811684528382019490945260409283019091208251610140810184528154851681526001820154909416918401919091526002810154918301919091526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e08301526008810154610100830152600901546101208201526138e2565b611eff9083614554565b915080611f0b8161462d565b915050611e2e565b5090565b611f1f6140ef565b6001600160a01b038084166000908152601460209081526040918290208251610140810184528154851681526001820154909416918401919091526002810154918301919091526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e0830152600881015461010083015260090154610120820152610d009083613979565b6000546201000090046001600160a01b03163314611fe8576040516305e7700560e51b815260040160405180910390fd5b6001600160a01b03811660009081526016602052604090205461202957604051634cbfe6c960e11b81526001600160a01b0382166004820152602401610ad5565b612034601582613b51565b156120ca576001600160a01b03811660008181526014602052604080822080546001600160a01b03199081168255600182018054909116905560028101839055600381018390556004810183905560058101839055600681018390556007810183905560088101839055600901829055517f6d08717837ebdfd34a4ddffe3e4566e0a68e8dde2464854e9242a8f7e6399a339190a25b50565b6015546060908067ffffffffffffffff8111156120ec576120ec614648565b60405190808252806020026020018201604052801561218557816020015b61217260405180610140016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526020019060019003908161210a5790505b50915060005b8181101561227a5760146000601560000183815481106121ad576121ad61456c565b60009182526020808320909101546001600160a01b0390811684528382019490945260409283019091208251610140810184528154851681526001820154909416918401919091526002810154918301919091526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e0830152600881015461010083015260090154610120820152835184908390811061225c5761225c61456c565b602002602001018190525080806122729061462d565b91505061218b565b505090565b6002805414156122a257604051633ee5aeb560e01b815260040160405180910390fd5b600280556012548190811015806122e05750601281815481106122c7576122c761456c565b600091825260209091206001600c90920201015460ff16155b15612301576040516372c4e6fd60e01b815260048101829052602401610ad5565b81600261230d82612ac6565b600281111561231e5761231e6144d4565b141561234057604051633d240fc360e01b815260048101829052602401610ad5565b600354601280546001600160a01b0390921691859081106123635761236361456c565b600091825260209091206002600c9092020101546001600160a01b0316146123a157604051635d64f43b60e01b815260048101849052602401610ad5565b600360009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156123f157600080fd5b505af1158015612405573d6000803e3d6000fd5b50505050506124148334613c8a565b5050600160025550565b60028054141561244157604051633ee5aeb560e01b815260040160405180910390fd5b6002805560125482908110158061247f5750601281815481106124665761246661456c565b600091825260209091206001600c90920201015460ff16155b156124a0576040516372c4e6fd60e01b815260048101829052602401610ad5565b8260026124ac82612ac6565b60028111156124bd576124bd6144d4565b14156124df57604051633d240fc360e01b815260048101829052602401610ad5565b826124fd57604051631d23e67d60e21b815260040160405180910390fd5b6000601285815481106125125761251261456c565b90600052602060002090600c02019050838160080160008282546125369190614582565b909155505060048054604051632770a7eb60e21b81523392810192909252602482018690526001600160a01b031690639dc29fac90604401600060405180830381600087803b15801561258857600080fd5b505af115801561259c573d6000803e3d6000fd5b505042600b84015550506008810154156125ef57847f552544cb36551120f07c66c5cd4b2987725a0c72198587f2ce796099bb66c58c856040516125e291815260200190565b60405180910390a26127fe565b6009810154600282015460009161260f916001600160a01b031690612e2b565b60098084015460028501546001600160a01b0316600090815260146020526040812090920180549394509092909190612649908490614582565b909155505060006009830155600480546005840154604051632770a7eb60e21b8152309381019390935260248301526001600160a01b031690639dc29fac90604401600060405180830381600087803b1580156126a557600080fd5b505af11580156126b9573d6000803e3d6000fd5b50505060018301805460ff191690555060405186907f33a382daad6aace935340a474d09fec82af4bec7e2b69518d283231b03a65f2490600090a26002820154600160a01b900460ff16612733576001820154600283015461272e916001600160a01b03918216916101009091041683612edc565b6127fc565b600354604051632e1a7d4d60e01b8152600481018390526001600160a01b0390911690632e1a7d4d90602401600060405180830381600087803b15801561277957600080fd5b505af115801561278d573d6000803e3d6000fd5b50506040516000925033915083908381818185875af1925050503d80600081146127d3576040519150601f19603f3d011682016040523d82523d6000602084013e6127d8565b606091505b50509050806127fa57604051638762150d60e01b815260040160405180910390fd5b505b505b50506001600255505050565b6001600160a01b0381166000908152601360205260409020546060908067ffffffffffffffff81111561283f5761283f614648565b60405190808252806020026020018201604052801561287857816020015b6128656140ef565b81526020019060019003908161285d5790505b50915060005b818110156129d1576001600160a01b0384166000908152601360205260409020805460129190839081106128b4576128b461456c565b9060005260206000200154815481106128cf576128cf61456c565b6000918252602091829020604080516101c081018252600c90930290910180548352600181015460ff8082161515958501959095526001600160a01b036101009182900481169385019390935260028201548084166060860152600160a01b900490941615156080840152600381015490911660a0830152600481015460c0830152600581015460e0830152600681015492820192909252600782015461012082015260088201546101408201526009820154610160820152600a820154610180820152600b909101546101a082015283518490839081106129b3576129b361456c565b602002602001018190525080806129c99061462d565b91505061287e565b5050919050565b6000546201000090046001600160a01b03163314612a09576040516305e7700560e51b815260040160405180910390fd5b6001600160a01b038216612a305760405163604b48b960e11b815260040160405180910390fd5b6001600160a01b038216301415612a5a576040516306b3e95d60e21b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b03841617905580612abd57600080546040516001600160a01b03808616936201000090930416917fc606c9af1451cadeb333f6ff7b24a5540974f4e800bac274fa7fff9edc305cb191a35050565b611a2b82613438565b600080612ad283610c0f565b9050601054811015612af657600f54811015612aef576000610d00565b6001610d00565b60029392505050565b6000546201000090046001600160a01b03163314612b30576040516305e7700560e51b815260040160405180910390fd5b670de0b6b3a764000081612b448486614554565b612b4e9190614554565b14612b7d5760405163245c170760e21b8152600481018490526024810183905260448101829052606401610ad5565b600c54600d54600e54604080519384526020840187905283019190915260608201849052608082015260a081018290527f1f7068a9be898db6fcd350ac2ff32fc5f1e6fc46c8e6cc973cde53793ff3ab5e9060c00160405180910390a1600c92909255600d55600e55565b60128181548110612bf857600080fd5b60009182526020909120600c9091020180546001820154600283015460038401546004850154600586015460068701546007880154600889015460098a0154600a8b0154600b909b0154999b5060ff808a169b610100909a046001600160a01b039081169b818b169b600160a01b909b0490921699981697908e565b600280541415612c9757604051633ee5aeb560e01b815260040160405180910390fd5b60028055601254829081101580612cd5575060128181548110612cbc57612cbc61456c565b600091825260209091206001600c90920201015460ff16155b15612cf6576040516372c4e6fd60e01b815260048101829052602401610ad5565b826002612d0282612ac6565b6002811115612d1357612d136144d4565b1415612d3557604051633d240fc360e01b815260048101829052602401610ad5565b612d7333308560128881548110612d4e57612d4e61456c565b600091825260209091206002600c9092020101546001600160a01b031692919061363b565b612d7d8484613c8a565b505060016002555050565b60136020528160005260406000208181548110612da457600080fd5b90600052602060002001600091509150505481565b6000546201000090046001600160a01b03163314612dea576040516305e7700560e51b815260040160405180910390fd5b600b5460408051918252602082018390527fde9fa07b6ca9d540214c05366e57cb33adf8f132014d9d1b2802a5b89a99512a910160405180910390a1600b55565b600080836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015612e6757600080fd5b505afa158015612e7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e9f919061460a565b612eaa90601261465e565b612eb590600a614765565b905080600114612ed157612ec98184614774565b915050612ed6565b829150505b92915050565b6040516001600160a01b038316602482015260448101829052611d1390849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152613d6f565b612f746140ef565b610140820151612f97576040516379d1504360e01b815260040160405180910390fd5b600a548261014001511015612fbf57604051631efe3f1960e11b815260040160405180910390fd5b6004805460e08401516040516340c10f1960e01b8152309381019390935260248301526001600160a01b0316906340c10f1990604401600060405180830381600087803b15801561300f57600080fd5b505af1158015613023573d6000803e3d6000fd5b5050600480546008546101008701516040516340c10f1960e01b81526001600160a01b039283169481019490945260248401521692506340c10f199150604401600060405180830381600087803b15801561307d57600080fd5b505af1158015613091573d6000803e3d6000fd5b5050600480546009546101208701516040516340c10f1960e01b81526001600160a01b039283169481019490945260248401521692506340c10f199150604401600060405180830381600087803b1580156130eb57600080fd5b505af11580156130ff573d6000803e3d6000fd5b50506004805460408681015161014088015191516340c10f1960e01b81526001600160a01b039182169481019490945260248401919091521692506340c10f199150604401600060405180830381600087803b15801561315e57600080fd5b505af1158015613172573d6000803e3d6000fd5b50505050600060128054905090508083600001818152505060128390806001815401808255809150506001900390600052602060002090600c02016000909190919091506000820151816000015560208201518160010160006101000a81548160ff02191690831515021790555060408201518160010160016101000a8154816001600160a01b0302191690836001600160a01b0316021790555060608201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060808201518160020160146101000a81548160ff02191690831515021790555060a08201518160030160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060c0820151816004015560e08201518160050155610100820151816006015561012082015181600701556101408201518160080155610160820151816009015561018082015181600a01556101a082015181600b015550506013600084604001516001600160a01b03166001600160a01b031681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150558261016001516014600085606001516001600160a01b03166001600160a01b0316815260200190815260200160002060090160008282546133709190614554565b90915550506060838101516040808601516101408701516101608801516001600160a01b03948516600081815260146020908152908690206006015486519485529084019290925293820152919392169184917f1c719a9a8ef2d44db7255e8d65b4a18a23f44758d6ebc0d6b80fe018d25433fb910160405180910390a45090919050565b60008161014001516000141561340d57506000919050565b6101608201516134205750600019919050565b612ed661342c8361349f565b61014084015190613691565b6000805475ffffffffffffffffffffffffffffffffffffffff00001916620100006001600160a01b0384811682810293909317808555604051939492900416917f564590b81987d147246f63910a8e1ee4eb09c4d64cc75ee975a8ffedfcc2210e9190a350565b60a08101516060820151604051630787c49960e21b81526001600160a01b03918216600482015260009283921690631e1f12649060240160206040518083038186803b1580156134ee57600080fd5b505afa158015613502573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135269190614599565b610160840151909150610d009082613df9565b6135416140ef565b60208301518351604051630787c49960e21b81526001600160a01b0391821660048201526000929190911690631e1f12649060240160206040518083038186803b15801561358e57600080fd5b505afa1580156135a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135c69190614599565b905060006135e58560c001518660400151613df990919063ffffffff16565b905060006136256135fe670de0b6b3a764000084614554565b61361f856136198a60c001518a613df990919063ffffffff16565b90613df9565b90613691565b90506136318682613979565b9695505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526136739085906323b872dd60e01b90608401612f08565b50505050565b600080821215611f135761368c82614796565b612ed6565b6000610d0083670de0b6b3a764000084613ec9565b6001600160a01b0381166000908152600183016020526040812054156136ce57506000612ed6565b508154600180820184556000848152602080822090930180546001600160a01b0319166001600160a01b03959095169485179055845493815293810190915260409092205590565b61371e6140ef565b60208301518351604051630787c49960e21b81526001600160a01b0391821660048201526000929190911690631e1f12649060240160206040518083038186803b15801561376b57600080fd5b505afa15801561377f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137a39190614599565b905060006137c2826136198760c0015187613df990919063ffffffff16565b60c08601519091506000906137ed9061361f6137e682670de0b6b3a7640000614582565b8590613df9565b90506000613808876060015183613df990919063ffffffff16565b90506000613823886080015184613df990919063ffffffff16565b9050600061383e8960a0015185613df990919063ffffffff16565b9050600061385d8761361f888d60400151613df990919063ffffffff16565b604080516101c0810182526000808252600160208084019190915233938301939093528d516001600160a01b03908116606084015260808301919091529c90910151909b1660a08c015260c08b01525060e08901929092526101008801526101208701525061014085015250506101608201524261018082018190526101a082015290565b60208101518151604051630787c49960e21b81526001600160a01b03918216600482015260009283921690631e1f12649060240160206040518083038186803b15801561392e57600080fd5b505afa158015613942573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139669190614599565b610120840151909150610d009082613df9565b6139816140ef565b60208301518351604051630787c49960e21b81526001600160a01b0391821660048201526000929190911690631e1f12649060240160206040518083038186803b1580156139ce57600080fd5b505afa1580156139e2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a069190614599565b60c0850151909150600090613a319061361f613a2a82670de0b6b3a7640000614582565b8790613df9565b90506000613a4c866060015183613df990919063ffffffff16565b90506000613a67876080015184613df990919063ffffffff16565b90506000613a828860a0015185613df990919063ffffffff16565b90506000613aa7613aa0878b60c00151613df990919063ffffffff16565b8990613691565b90506000613ac68761361f8b8d60400151613df990919063ffffffff16565b604080516101c0810182526000808252600160208084019190915233938301939093528d516001600160a01b03908116606084015260808301919091529c90910151909b1660a08c015260c08b01525060e08901939093526101008801919091526101208701526101408601949094525050506101608201524261018082018190526101a082015290565b6001600160a01b038116600090815260018301602052604081205480613b7b576000915050612ed6565b6000613b88600183614582565b905060006001613b96875490565b613ba09190614582565b9050808214613c2c576000866000018281548110613bc057613bc061456c565b60009182526020909120015487546001600160a01b0390911691508190889085908110613bef57613bef61456c565b600091825260208083209190910180546001600160a01b0319166001600160a01b0394851617905592909116815260018801909152604090208390555b8554869080613c3d57613c3d6147b3565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b038716825260018881019091526040822091909155935050505092915050565b80613ca857604051635491c16d60e01b815260040160405180910390fd5b600060128381548110613cbd57613cbd61456c565b6000918252602082206002600c9092020190810154909250613ce8906001600160a01b031684613f84565b905080826009016000828254613cfe9190614554565b909155505042600a83015560028201546001600160a01b031660009081526014602052604081206009018054839290613d38908490614554565b909155505060405181815284907fa3af609bf46297028ce551832669030f9effef2b02606d02cbbcc40fe6b47c55906020016114da565b6040805180820190915260208082527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564908201528290600090613dbe906001600160a01b038416908590614022565b8051909150156136735780806020019051810190613ddc91906147c9565b61367357604051639b8d506160e01b815260040160405180910390fd5b60008080600019848609848602925082811083820303915050670de0b6b3a76400008110613e4b5760405163072fa3c960e31b815260048101829052670de0b6b3a76400006024820152604401610ad5565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff811182613e855780670de0b6b3a7640000850401945050505050612ed6565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b60008080600019858709858702925082811083820303915050838110613f0c5760405163072fa3c960e31b81526004810182905260248101859052604401610ad5565b80613f1c57508290049050610d00565b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b600080836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015613fc057600080fd5b505afa158015613fd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ff8919061460a565b61400390601261465e565b61400e90600a614765565b905080600114612ed157612ec981846147e6565b6060833b61404e5760405163dc5dd7fd60e01b81526001600160a01b0385166004820152602401610ad5565b600080856001600160a01b0316856040516140699190614831565b6000604051808303816000865af19150503d80600081146140a6576040519150601f19603f3d011682016040523d82523d6000602084013e6140ab565b606091505b5091509150613631828286606083156140c5575081610d00565b8251156140d55782518060208501fd5b8160405162461bcd60e51b8152600401610ad5919061484d565b604051806101c001604052806000815260200160001515815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160001515815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60006020828403121561418f57600080fd5b5035919050565b8051825260208101516141ad602084018215159052565b5060408101516141c860408401826001600160a01b03169052565b5060608101516141e360608401826001600160a01b03169052565b5060808101516141f7608084018215159052565b5060a081015161421260a08401826001600160a01b03169052565b5060c0818101519083015260e08082015190830152610100808201519083015261012080820151908301526101408082015190830152610160808201519083015261018080820151908301526101a090810151910152565b6101c08101612ed68284614196565b6001600160a01b03811681146120ca57600080fd5b600080600080600080600060e0888a0312156142a957600080fd5b87356142b481614279565b965060208801356142c481614279565b955060408801356142d481614279565b945060608801356142e481614279565b935060808801356142f481614279565b925060a088013561430481614279565b915060c088013561431481614279565b8091505092959891949750929550565b6000806040838503121561433757600080fd5b823561434281614279565b946020939093013593505050565b60006020828403121561436257600080fd5b8135610d0081614279565b602080825282518282018190526000919060409081850190868401855b8281101561440f57815180516001600160a01b0390811686528782015116878601528581015186860152606080820151908601526080808201519086015260a0808201519086015260c0808201519086015260e0808201519086015261010080820151908601526101209081015190850152610140909301929085019060010161438a565b5091979650505050505050565b6000806040838503121561442f57600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b818110156144815761446d838551614196565b928401926101c0929092019160010161445a565b50909695505050505050565b80151581146120ca57600080fd5b600080604083850312156144ae57600080fd5b82356144b981614279565b915060208301356144c98161448d565b809150509250929050565b634e487b7160e01b600052602160045260246000fd5b602081016003831061450c57634e487b7160e01b600052602160045260246000fd5b91905290565b60008060006060848603121561452757600080fd5b505081359360208301359350604090920135919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156145675761456761453e565b500190565b634e487b7160e01b600052603260045260246000fd5b6000828210156145945761459461453e565b500390565b6000602082840312156145ab57600080fd5b5051919050565b60008083128015600160ff1b8501841216156145d0576145d061453e565b837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0183138116156146045761460461453e565b50500390565b60006020828403121561461c57600080fd5b815160ff81168114610d0057600080fd5b60006000198214156146415761464161453e565b5060010190565b634e487b7160e01b600052604160045260246000fd5b600060ff821660ff8416808210156146785761467861453e565b90039392505050565b600181815b808511156146bc5781600019048211156146a2576146a261453e565b808516156146af57918102915b93841c9390800290614686565b509250929050565b6000826146d357506001612ed6565b816146e057506000612ed6565b81600181146146f657600281146147005761471c565b6001915050612ed6565b60ff8411156147115761471161453e565b50506001821b612ed6565b5060208310610133831016604e8410600b841016171561473f575081810a612ed6565b6147498383614681565b806000190482111561475d5761475d61453e565b029392505050565b6000610d0060ff8416836146c4565b60008261479157634e487b7160e01b600052601260045260246000fd5b500490565b6000600160ff1b8214156147ac576147ac61453e565b5060000390565b634e487b7160e01b600052603160045260246000fd5b6000602082840312156147db57600080fd5b8151610d008161448d565b60008160001904831182151516156148005761480061453e565b500290565b60005b83811015614820578181015183820152602001614808565b838111156136735750506000910152565b60008251614843818460208701614805565b9190910192915050565b602081526000825180602084015261486c816040850160208701614805565b601f01601f1916919091016040019291505056fea164736f6c6343000809000a",
  "devdoc": {
    "author": "Andrey Gulitsky",
    "errors": {
      "BaksDAOBorrowBelowMinimumPrincipalAmount()": [
        {
          "details": "Thrown when trying to borrow below minimum principal amount."
        }
      ],
      "BaksDAOBorrowZeroAmount()": [
        {
          "details": "Thrown when borrowing a zero amount of stablecoin."
        }
      ],
      "BaksDAOCollateralTokenAlreadyListed(address)": [
        {
          "details": "Thrown when trying to list collateral token that's already listed.",
          "params": {
            "token": "The address of the collateral token contract."
          }
        }
      ],
      "BaksDAOCollateralTokenNotListed(address)": [
        {
          "details": "Thrown when trying to unlist collateral token that's not listed.",
          "params": {
            "token": "The address of the collateral token contract."
          }
        }
      ],
      "BaksDAOCollateralTokenTooLargeDecimals(address,uint8)": [
        {
          "details": "Thrown when trying to list collateral token that has too large decimals.",
          "params": {
            "token": "The address of the collateral token contract."
          }
        }
      ],
      "BaksDAOCollateralTokenZeroDecimals(address)": [
        {
          "details": "Thrown when trying to list collateral token that has zero decimals.",
          "params": {
            "token": "The address of the collateral token contract."
          }
        }
      ],
      "BaksDAODepositZeroAmount()": [
        {
          "details": "Thrown when depositing a zero amount of collateral token."
        }
      ],
      "BaksDAOInactiveLoan(uint256)": [
        {
          "details": "Thrown when trying to interact with inactive loan with `id` id.",
          "params": {
            "id": "The loan id."
          }
        }
      ],
      "BaksDAOInitialLoanToValueRatioTooHigh(address,uint256)": [
        {
          "details": "Thrown when trying to set initial loan-to-value ratio that higher than margin call or liquidation ones.",
          "params": {
            "initialLoanToValueRatio": "The initial loan-to-value ratio that was tried to set.",
            "token": "The address of the collateral token contract."
          }
        }
      ],
      "BaksDAOLoanIsSubjectToLiquidation(uint256)": [
        {
          "details": "Thrown when trying to interact with loan with `id` id that is subject to liquidation.",
          "params": {
            "id": "The loan id."
          }
        }
      ],
      "BaksDAOLoanNotSubjectToLiquidation(uint256)": [
        {
          "details": "Thrown when trying to liquidate healthy loan with `id` id.",
          "params": {
            "id": "The loan id."
          }
        }
      ],
      "BaksDAONativeCurrencyCollateralNotAllowed(uint256)": [
        {
          "details": "Thrown when trying to deposit native currency collateral to the non-wrapped native currency token loan with `id` id.",
          "params": {
            "id": "The loan id."
          }
        }
      ],
      "BaksDAONoNeedToRebalance()": [
        {
          "details": "Thrown when there's no need to rebalance the platform."
        }
      ],
      "BaksDAOPlatformFeesDontSumUpToOne(uint256,uint256,uint256)": [
        {
          "details": "Thrown when trying to set platform fees that don't sum up to one.",
          "params": {
            "developmentFee": "The stabilization fee that was tried to set.",
            "exchangeFee": "The stabilization fee that was tried to set.",
            "stabilizationFee": "The stabilization fee that was tried to set."
          }
        }
      ],
      "BaksDAORepayZeroAmount()": [
        {
          "details": "Thrown when repaying a zero amount of stablecoin."
        }
      ],
      "BaksDAOStabilizationFundOutOfFunds(uint256)": [
        {
          "details": "Thrown when trying to rebalance the platform and there is a shortage of funds to burn.",
          "params": {
            "shortage": "Shoratge of funds to burn."
          }
        }
      ],
      "BaksDAOTokenNotAllowedAsCollateral(address)": [
        {
          "details": "Thrown when interacting with a token that's not allowed as collateral.",
          "params": {
            "token": "The address of the collateral token contract."
          }
        }
      ],
      "BaksDAOTokenNotAllowedToBeSalvaged(address)": [
        {
          "details": "Thrown when trying to salvage one of allowed collateral tokens or stablecoin.",
          "params": {
            "token": "The address of the token contract."
          }
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "borrow(address,uint256)": {
        "details": "The caller must have allowed this contract to spend a sufficient amount of collateral tokens to cover initial loan-to-value ratio.",
        "params": {
          "amount": "The amount of stablecoin to borrow and issue.",
          "collateralToken": "The address of the collateral token contract."
        }
      },
      "deposit(uint256,uint256)": {
        "details": "The caller must have allowed this contract to spend `amount` of collateral tokens.",
        "params": {
          "amount": "The amount of collateral token to deposit.",
          "loanId": "The loan id."
        }
      },
      "repay(uint256,uint256)": {
        "params": {
          "amount": "The amount of stablecoin to repay.",
          "loanId": "The loan id."
        }
      }
    },
    "title": "Core smart contract of BaksDAO platform",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "borrow(address,uint256)": {
        "notice": "Increases loan's principal on `collateralToken` collateral token and mints `amount` of stablecoin."
      },
      "borrowInNativeCurrency(uint256)": {
        "notice": "Increases loan's principal on wrapped native currency token and mints stablecoin."
      },
      "deposit(uint256,uint256)": {
        "notice": "Deposits `amount` of collateral token to loan with `id` id."
      },
      "depositInNativeCurrency(uint256)": {
        "notice": "Deposits wrapped native currency token to loan with `id` id."
      },
      "repay(uint256,uint256)": {
        "notice": "Decreases principal of loan with `id` id by `amount` of stablecoin."
      }
    },
    "notice": "You should use this contract to interact with the BaksDAO platform.Only this contract can issue stablecoins.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 5927,
        "contract": "contracts/Bank.sol:Bank",
        "label": "initializing",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 5929,
        "contract": "contracts/Bank.sol:Bank",
        "label": "initialized",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 4117,
        "contract": "contracts/Bank.sol:Bank",
        "label": "governor",
        "offset": 2,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 4119,
        "contract": "contracts/Bank.sol:Bank",
        "label": "pendingGovernor",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 5645,
        "contract": "contracts/Bank.sol:Bank",
        "label": "status",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 183,
        "contract": "contracts/Bank.sol:Bank",
        "label": "wrappedNativeCurrency",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(IWrappedNativeCurrency)4442"
      },
      {
        "astId": 186,
        "contract": "contracts/Bank.sol:Bank",
        "label": "stablecoin",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(IMintableAndBurnableERC20)4354"
      },
      {
        "astId": 189,
        "contract": "contracts/Bank.sol:Bank",
        "label": "priceOracle",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(IPriceOracle)4427"
      },
      {
        "astId": 191,
        "contract": "contracts/Bank.sol:Bank",
        "label": "operator",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 193,
        "contract": "contracts/Bank.sol:Bank",
        "label": "liquidator",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      },
      {
        "astId": 195,
        "contract": "contracts/Bank.sol:Bank",
        "label": "exchangeFund",
        "offset": 0,
        "slot": "8",
        "type": "t_address"
      },
      {
        "astId": 197,
        "contract": "contracts/Bank.sol:Bank",
        "label": "developmentFund",
        "offset": 0,
        "slot": "9",
        "type": "t_address"
      },
      {
        "astId": 199,
        "contract": "contracts/Bank.sol:Bank",
        "label": "minimumPrincipalAmount",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 201,
        "contract": "contracts/Bank.sol:Bank",
        "label": "stabilityFee",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 203,
        "contract": "contracts/Bank.sol:Bank",
        "label": "stabilizationFee",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 205,
        "contract": "contracts/Bank.sol:Bank",
        "label": "exchangeFee",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 207,
        "contract": "contracts/Bank.sol:Bank",
        "label": "developmentFee",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      },
      {
        "astId": 209,
        "contract": "contracts/Bank.sol:Bank",
        "label": "marginCallLoanToValueRatio",
        "offset": 0,
        "slot": "15",
        "type": "t_uint256"
      },
      {
        "astId": 211,
        "contract": "contracts/Bank.sol:Bank",
        "label": "liquidationLoanToValueRatio",
        "offset": 0,
        "slot": "16",
        "type": "t_uint256"
      },
      {
        "astId": 213,
        "contract": "contracts/Bank.sol:Bank",
        "label": "rebalancingThreshold",
        "offset": 0,
        "slot": "17",
        "type": "t_uint256"
      },
      {
        "astId": 217,
        "contract": "contracts/Bank.sol:Bank",
        "label": "loans",
        "offset": 0,
        "slot": "18",
        "type": "t_array(t_struct(Data)5542_storage)dyn_storage"
      },
      {
        "astId": 222,
        "contract": "contracts/Bank.sol:Bank",
        "label": "loanIds",
        "offset": 0,
        "slot": "19",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 228,
        "contract": "contracts/Bank.sol:Bank",
        "label": "collateralTokens",
        "offset": 0,
        "slot": "20",
        "type": "t_mapping(t_contract(IERC20)4337,t_struct(Data)4828_storage)"
      },
      {
        "astId": 231,
        "contract": "contracts/Bank.sol:Bank",
        "label": "collateralTokensSet",
        "offset": 0,
        "slot": "21",
        "type": "t_struct(Set)5127_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Data)5542_storage)dyn_storage": {
        "base": "t_struct(Data)5542_storage",
        "encoding": "dynamic_array",
        "label": "struct Loan.Data[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)4337": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IMintableAndBurnableERC20)4354": {
        "encoding": "inplace",
        "label": "contract IMintableAndBurnableERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IPriceOracle)4427": {
        "encoding": "inplace",
        "label": "contract IPriceOracle",
        "numberOfBytes": "20"
      },
      "t_contract(IWrappedNativeCurrency)4442": {
        "encoding": "inplace",
        "label": "contract IWrappedNativeCurrency",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_contract(IERC20)4337,t_struct(Data)4828_storage)": {
        "encoding": "mapping",
        "key": "t_contract(IERC20)4337",
        "label": "mapping(contract IERC20 => struct CollateralToken.Data)",
        "numberOfBytes": "32",
        "value": "t_struct(Data)4828_storage"
      },
      "t_struct(Data)4828_storage": {
        "encoding": "inplace",
        "label": "struct CollateralToken.Data",
        "members": [
          {
            "astId": 4808,
            "contract": "contracts/Bank.sol:Bank",
            "label": "collateralToken",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)4337"
          },
          {
            "astId": 4811,
            "contract": "contracts/Bank.sol:Bank",
            "label": "priceOracle",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IPriceOracle)4427"
          },
          {
            "astId": 4813,
            "contract": "contracts/Bank.sol:Bank",
            "label": "stabilityFee",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 4815,
            "contract": "contracts/Bank.sol:Bank",
            "label": "stabilizationFee",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 4817,
            "contract": "contracts/Bank.sol:Bank",
            "label": "exchangeFee",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 4819,
            "contract": "contracts/Bank.sol:Bank",
            "label": "developmentFee",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 4821,
            "contract": "contracts/Bank.sol:Bank",
            "label": "initialLoanToValueRatio",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 4823,
            "contract": "contracts/Bank.sol:Bank",
            "label": "marginCallLoanToValueRatio",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 4825,
            "contract": "contracts/Bank.sol:Bank",
            "label": "liquidationLoanToValueRatio",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 4827,
            "contract": "contracts/Bank.sol:Bank",
            "label": "collateralAmount",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_struct(Data)5542_storage": {
        "encoding": "inplace",
        "label": "struct Loan.Data",
        "members": [
          {
            "astId": 5513,
            "contract": "contracts/Bank.sol:Bank",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 5515,
            "contract": "contracts/Bank.sol:Bank",
            "label": "isActive",
            "offset": 0,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 5517,
            "contract": "contracts/Bank.sol:Bank",
            "label": "borrower",
            "offset": 1,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 5520,
            "contract": "contracts/Bank.sol:Bank",
            "label": "collateralToken",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IERC20)4337"
          },
          {
            "astId": 5522,
            "contract": "contracts/Bank.sol:Bank",
            "label": "isNativeCurrency",
            "offset": 20,
            "slot": "2",
            "type": "t_bool"
          },
          {
            "astId": 5525,
            "contract": "contracts/Bank.sol:Bank",
            "label": "priceOracle",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IPriceOracle)4427"
          },
          {
            "astId": 5527,
            "contract": "contracts/Bank.sol:Bank",
            "label": "stabilityFee",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 5529,
            "contract": "contracts/Bank.sol:Bank",
            "label": "stabilizationFee",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 5531,
            "contract": "contracts/Bank.sol:Bank",
            "label": "exchangeFee",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 5533,
            "contract": "contracts/Bank.sol:Bank",
            "label": "developmentFee",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 5535,
            "contract": "contracts/Bank.sol:Bank",
            "label": "principalAmount",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 5537,
            "contract": "contracts/Bank.sol:Bank",
            "label": "collateralAmount",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 5539,
            "contract": "contracts/Bank.sol:Bank",
            "label": "lastDepositAt",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 5541,
            "contract": "contracts/Bank.sol:Bank",
            "label": "lastRepaymentAt",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "384"
      },
      "t_struct(Set)5127_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableAddressSet.Set",
        "members": [
          {
            "astId": 5122,
            "contract": "contracts/Bank.sol:Bank",
            "label": "elements",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 5126,
            "contract": "contracts/Bank.sol:Bank",
            "label": "indexes",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_uint256)"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}