{
  "address": "0x4d401b7d54fd335722FDb08a28095cc1Af7E796b",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_wrappedNativeCurrency",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "GovernedCantGoverItself",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GovernedGovernorZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GovernedOnlyGovernorAllowedToCall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GovernedOnlyPendingGovernorAllowedToCall",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "governor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newGovernor",
          "type": "address"
        }
      ],
      "name": "GovernanceTransited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "governor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newGovernor",
          "type": "address"
        }
      ],
      "name": "PendingGovernanceTransition",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getNormalizedPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "normalizedPrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingGovernor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "name": "prices",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newGovernor",
          "type": "address"
        }
      ],
      "name": "transitGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wrappedNativeCurrency",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x9a2183c516356b4baad309bba36224aec5ecbe986d820cf563409d49bcea3395",
  "receipt": {
    "to": null,
    "from": "0x21309DA9AD64eA82431758B27cbD63E5d53A556c",
    "contractAddress": "0x4d401b7d54fd335722FDb08a28095cc1Af7E796b",
    "transactionIndex": 2,
    "gasUsed": "279938",
    "logsBloom": "0x
    "blockHash": "0x05af74d577c3e487538e9a61a6b182fe662f87cdac67378f5c83660b03e6f1cd",
    "transactionHash": "0x9a2183c516356b4baad309bba36224aec5ecbe986d820cf563409d49bcea3395",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 13128689,
        "transactionHash": "0x9a2183c516356b4baad309bba36224aec5ecbe986d820cf563409d49bcea3395",
        "address": "0x4d401b7d54fd335722FDb08a28095cc1Af7E796b",
        "topics": [
          "0xc606c9af1451cadeb333f6ff7b24a5540974f4e800bac274fa7fff9edc305cb1",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000021309da9ad64ea82431758b27cbd63e5d53a556c"
        ],
        "data": "0x",
        "logIndex": 5,
        "blockHash": "0x05af74d577c3e487538e9a61a6b182fe662f87cdac67378f5c83660b03e6f1cd"
      },
      {
        "transactionIndex": 2,
        "blockNumber": 13128689,
        "transactionHash": "0x9a2183c516356b4baad309bba36224aec5ecbe986d820cf563409d49bcea3395",
        "address": "0x4d401b7d54fd335722FDb08a28095cc1Af7E796b",
        "topics": [
          "0x564590b81987d147246f63910a8e1ee4eb09c4d64cc75ee975a8ffedfcc2210e",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000021309da9ad64ea82431758b27cbd63e5d53a556c"
        ],
        "data": "0x",
        "logIndex": 6,
        "blockHash": "0x05af74d577c3e487538e9a61a6b182fe662f87cdac67378f5c83660b03e6f1cd"
      }
    ],
    "blockNumber": 13128689,
    "cumulativeGasUsed": "595189",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x2Cf210ad0a8f31D8A7b5742931B9C3ECb663cdB8"
  ],
  "solcInputHash": "37e44ceb5ade6fd628df41eb5d70582d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_wrappedNativeCurrency\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"GovernedCantGoverItself\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GovernedGovernorZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GovernedOnlyGovernorAllowedToCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GovernedOnlyPendingGovernorAllowedToCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"GovernanceTransited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"PendingGovernanceTransition\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getNormalizedPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"normalizedPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingGovernor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"prices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"transitGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrappedNativeCurrency\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getNormalizedPrice(address)\":{\"params\":{\"token\":\"The address of the token contract.\"},\"returns\":{\"normalizedPrice\":\"Normalized price.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getNormalizedPrice(address)\":{\"notice\":\"Gets normalized to 18 decimals price for the `token` token.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/DummyPriceOracle.sol\":\"DummyPriceOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/Governance.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.9;\\n\\nerror GovernedOnlyGovernorAllowedToCall();\\nerror GovernedOnlyPendingGovernorAllowedToCall();\\nerror GovernedGovernorZeroAddress();\\nerror GovernedCantGoverItself();\\n\\nabstract contract Governed {\\n    address public governor;\\n    address public pendingGovernor;\\n\\n    event PendingGovernanceTransition(address indexed governor, address indexed newGovernor);\\n    event GovernanceTransited(address indexed governor, address indexed newGovernor);\\n\\n    modifier onlyGovernor() {\\n        if (msg.sender != governor) {\\n            revert GovernedOnlyGovernorAllowedToCall();\\n        }\\n        _;\\n    }\\n\\n    constructor() {\\n        governor = msg.sender;\\n        emit PendingGovernanceTransition(address(0), governor);\\n        emit GovernanceTransited(address(0), governor);\\n    }\\n\\n    function transitGovernance(address newGovernor) external onlyGovernor {\\n        if (newGovernor == address(0)) {\\n            revert GovernedGovernorZeroAddress();\\n        }\\n        if (newGovernor == address(this)) {\\n            revert GovernedCantGoverItself();\\n        }\\n\\n        pendingGovernor = newGovernor;\\n        emit PendingGovernanceTransition(governor, newGovernor);\\n    }\\n\\n    function acceptGovernance() external {\\n        if (msg.sender != pendingGovernor) {\\n            revert GovernedOnlyPendingGovernorAllowedToCall();\\n        }\\n\\n        governor = pendingGovernor;\\n        emit GovernanceTransited(governor, pendingGovernor);\\n    }\\n}\\n\",\"keccak256\":\"0x81655e56aecd1a2f5896c12fee267066cc58b447afc1d79c3695f98926714da8\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\ninterface IERC20 {\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n}\\n\\ninterface IMintableAndBurnableERC20 is IERC20 {\\n    function mint(address to, uint256 amount) external;\\n\\n    function burn(address from, uint256 amount) external;\\n}\\n\",\"keccak256\":\"0x555b3bf9906cdd22fd702e227764b81c027180c0af11c48222ba6273441c63f3\",\"license\":\"MIT\"},\"contracts/interfaces/IPriceOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./../libraries/FixedPointMath.sol\\\";\\n\\n/// @notice Thrown when oracle doesn't provide price for `token` token.\\n/// @param token The address of the token contract.\\nerror PriceOracleTokenUnknown(IERC20 token);\\n/// @notice Thrown when oracle provide stale price `price` for `token` token.\\n/// @param token The address of the token contract.\\n/// @param price Provided price.\\nerror PriceOracleStalePrice(IERC20 token, uint256 price);\\n/// @notice Thrown when oracle provide negative, zero or in other ways invalid price `price` for `token` token.\\n/// @param token The address of the token contract.\\n/// @param price Provided price.\\nerror PriceOracleInvalidPrice(IERC20 token, int256 price);\\n\\ninterface IPriceOracle {\\n    /// @notice Gets normalized to 18 decimals price for the `token` token.\\n    /// @param token The address of the token contract.\\n    /// @return normalizedPrice Normalized price.\\n    function getNormalizedPrice(IERC20 token) external view returns (uint256 normalizedPrice);\\n}\\n\",\"keccak256\":\"0x21c070369f7fe028994543eb4963d468e0968a6e088ee66d50ffdf05774ed202\",\"license\":\"MIT\"},\"contracts/libraries/FixedPointMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nerror FixedPointMathMulDivOverflow(uint256 prod1, uint256 denominator);\\n\\n/// @title Fixed point math implementation\\nlibrary FixedPointMath {\\n    uint256 internal constant SCALE = 1e18;\\n    /// @dev Largest power of two divisor of scale.\\n    uint256 internal constant SCALE_LPOTD = 262144;\\n    /// @dev Scale inverted mod 2**256.\\n    uint256 internal constant SCALE_INVERSE =\\n        78156646155174841979727994598816262306175212592076161876661508869554232690281;\\n\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 result) {\\n        uint256 prod0;\\n        uint256 prod1;\\n        assembly {\\n            let mm := mulmod(a, b, not(0))\\n            prod0 := mul(a, b)\\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n        }\\n\\n        if (prod1 >= SCALE) {\\n            revert FixedPointMathMulDivOverflow(prod1, SCALE);\\n        }\\n\\n        uint256 remainder;\\n        uint256 roundUpUnit;\\n        assembly {\\n            remainder := mulmod(a, b, SCALE)\\n            roundUpUnit := gt(remainder, 499999999999999999)\\n        }\\n\\n        if (prod1 == 0) {\\n            assembly {\\n                result := add(div(prod0, SCALE), roundUpUnit)\\n            }\\n            return result;\\n        }\\n\\n        assembly {\\n            result := add(\\n                mul(\\n                    or(\\n                        div(sub(prod0, remainder), SCALE_LPOTD),\\n                        mul(sub(prod1, gt(remainder, prod0)), add(div(sub(0, SCALE_LPOTD), SCALE_LPOTD), 1))\\n                    ),\\n                    SCALE_INVERSE\\n                ),\\n                roundUpUnit\\n            )\\n        }\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256 result) {\\n        result = mulDiv(a, SCALE, b);\\n    }\\n\\n    /// @notice Calculates \\u230aa \\u00d7 b \\u00f7 denominator\\u230b with full precision.\\n    /// @dev Credit to Remco Bloemen under MIT license https://2\\u03c0.com/21/muldiv.\\n    function mulDiv(\\n        uint256 a,\\n        uint256 b,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        uint256 prod0;\\n        uint256 prod1;\\n        assembly {\\n            let mm := mulmod(a, b, not(0))\\n            prod0 := mul(a, b)\\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n        }\\n\\n        if (prod1 >= denominator) {\\n            revert FixedPointMathMulDivOverflow(prod1, denominator);\\n        }\\n\\n        if (prod1 == 0) {\\n            assembly {\\n                result := div(prod0, denominator)\\n            }\\n            return result;\\n        }\\n\\n        uint256 remainder;\\n        assembly {\\n            remainder := mulmod(a, b, denominator)\\n\\n            prod1 := sub(prod1, gt(remainder, prod0))\\n            prod0 := sub(prod0, remainder)\\n        }\\n\\n        unchecked {\\n            uint256 lpotdod = denominator & (~denominator + 1);\\n            assembly {\\n                denominator := div(denominator, lpotdod)\\n                prod0 := div(prod0, lpotdod)\\n                lpotdod := add(div(sub(0, lpotdod), lpotdod), 1)\\n            }\\n            prod0 |= prod1 * lpotdod;\\n\\n            uint256 inverse = (3 * denominator) ^ 2;\\n            inverse *= 2 - denominator * inverse;\\n            inverse *= 2 - denominator * inverse;\\n            inverse *= 2 - denominator * inverse;\\n            inverse *= 2 - denominator * inverse;\\n            inverse *= 2 - denominator * inverse;\\n            inverse *= 2 - denominator * inverse;\\n\\n            result = prod0 * inverse;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9d0813682bbe12845de0111298ec16fb9ebf5ac404cce4bee155a455fa547eb4\",\"license\":\"MIT\"},\"contracts/test/DummyPriceOracle.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.9;\\n\\nimport \\\"./../interfaces/IERC20.sol\\\";\\nimport \\\"./../libraries/FixedPointMath.sol\\\";\\nimport {Governed} from \\\"./../Governance.sol\\\";\\nimport \\\"./../interfaces/IPriceOracle.sol\\\";\\n\\ncontract DummyPriceOracle is Governed, IPriceOracle {\\n    IERC20 public immutable wrappedNativeCurrency;\\n\\n    mapping(IERC20 => uint256) public prices;\\n\\n    constructor(IERC20 _wrappedNativeCurrency) {\\n        wrappedNativeCurrency = _wrappedNativeCurrency;\\n    }\\n\\n    function setPrice(IERC20 token, uint256 price) external onlyGovernor {\\n        prices[token] = price;\\n    }\\n\\n    function getNormalizedPrice(IERC20 token) external view override returns (uint256 normalizedPrice) {\\n        normalizedPrice = prices[token];\\n    }\\n}\\n\",\"keccak256\":\"0xed652e818820a83b3c727644a71b23308944829cf118916999085fa4d6a75da9\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5060405161049938038061049983398101604081905261002f916100b8565b600080546001600160a01b0319163390811782556040519091907fc606c9af1451cadeb333f6ff7b24a5540974f4e800bac274fa7fff9edc305cb1908290a3600080546040516001600160a01b0390911691907f564590b81987d147246f63910a8e1ee4eb09c4d64cc75ee975a8ffedfcc2210e908290a36001600160a01b03166080526100e8565b6000602082840312156100ca57600080fd5b81516001600160a01b03811681146100e157600080fd5b9392505050565b608051610396610103600039600061015b01526103966000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c8063631aa9e21161005b578063631aa9e214610110578063cfed246b14610123578063e3056a3414610143578063e7f3028c1461015657600080fd5b8062e4768b1461008c5780630c340a24146100a15780631e1f1264146100d1578063238efcbc14610108575b600080fd5b61009f61009a366004610339565b61017d565b005b6000546100b4906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100fa6100df366004610365565b6001600160a01b031660009081526002602052604090205490565b6040519081526020016100c8565b61009f6101c4565b61009f61011e366004610365565b610247565b6100fa610131366004610365565b60026020526000908152604090205481565b6001546100b4906001600160a01b031681565b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b031633146101a8576040516305e7700560e51b815260040160405180910390fd5b6001600160a01b03909116600090815260026020526040902055565b6001546001600160a01b031633146101ef5760405163aec80d4b60e01b815260040160405180910390fd5b6001546000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216918217815560405182917f564590b81987d147246f63910a8e1ee4eb09c4d64cc75ee975a8ffedfcc2210e91a3565b6000546001600160a01b03163314610272576040516305e7700560e51b815260040160405180910390fd5b6001600160a01b0381166102995760405163604b48b960e11b815260040160405180910390fd5b6001600160a01b0381163014156102c3576040516306b3e95d60e21b815260040160405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383811691821790925560008054604051929316917fc606c9af1451cadeb333f6ff7b24a5540974f4e800bac274fa7fff9edc305cb19190a350565b6001600160a01b038116811461033657600080fd5b50565b6000806040838503121561034c57600080fd5b823561035781610321565b946020939093013593505050565b60006020828403121561037757600080fd5b813561038281610321565b939250505056fea164736f6c6343000809000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100875760003560e01c8063631aa9e21161005b578063631aa9e214610110578063cfed246b14610123578063e3056a3414610143578063e7f3028c1461015657600080fd5b8062e4768b1461008c5780630c340a24146100a15780631e1f1264146100d1578063238efcbc14610108575b600080fd5b61009f61009a366004610339565b61017d565b005b6000546100b4906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100fa6100df366004610365565b6001600160a01b031660009081526002602052604090205490565b6040519081526020016100c8565b61009f6101c4565b61009f61011e366004610365565b610247565b6100fa610131366004610365565b60026020526000908152604090205481565b6001546100b4906001600160a01b031681565b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b031633146101a8576040516305e7700560e51b815260040160405180910390fd5b6001600160a01b03909116600090815260026020526040902055565b6001546001600160a01b031633146101ef5760405163aec80d4b60e01b815260040160405180910390fd5b6001546000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216918217815560405182917f564590b81987d147246f63910a8e1ee4eb09c4d64cc75ee975a8ffedfcc2210e91a3565b6000546001600160a01b03163314610272576040516305e7700560e51b815260040160405180910390fd5b6001600160a01b0381166102995760405163604b48b960e11b815260040160405180910390fd5b6001600160a01b0381163014156102c3576040516306b3e95d60e21b815260040160405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383811691821790925560008054604051929316917fc606c9af1451cadeb333f6ff7b24a5540974f4e800bac274fa7fff9edc305cb19190a350565b6001600160a01b038116811461033657600080fd5b50565b6000806040838503121561034c57600080fd5b823561035781610321565b946020939093013593505050565b60006020828403121561037757600080fd5b813561038281610321565b939250505056fea164736f6c6343000809000a",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getNormalizedPrice(address)": {
        "params": {
          "token": "The address of the token contract."
        },
        "returns": {
          "normalizedPrice": "Normalized price."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getNormalizedPrice(address)": {
        "notice": "Gets normalized to 18 decimals price for the `token` token."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4002,
        "contract": "contracts/test/DummyPriceOracle.sol:DummyPriceOracle",
        "label": "governor",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 4004,
        "contract": "contracts/test/DummyPriceOracle.sol:DummyPriceOracle",
        "label": "pendingGovernor",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 5755,
        "contract": "contracts/test/DummyPriceOracle.sol:DummyPriceOracle",
        "label": "prices",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_contract(IERC20)4263,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)4263": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_contract(IERC20)4263,t_uint256)": {
        "encoding": "mapping",
        "key": "t_contract(IERC20)4263",
        "label": "mapping(contract IERC20 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}