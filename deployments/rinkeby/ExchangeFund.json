{
  "address": "0x077369a190C69F090B6549BDb6c858fd615C5311",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_wrappedNativeCurrency",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_stablecoin",
          "type": "address"
        },
        {
          "internalType": "contract IPriceOracle",
          "name": "_priceOracle",
          "type": "address"
        },
        {
          "internalType": "contract IUniswapV2Router",
          "name": "_uniswapV2Router",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "CallToNonContract",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "ExchangeFundDepositableTokenAlreadyListed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "ExchangeFundDepositableTokenNotListed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "name": "ExchangeFundDepositableTokenTooLargeDecimals",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "ExchangeFundDepositableTokenZeroDecimals",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ExchangeFundInsufficientDeposits",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ExchangeFundInsufficientLiquidity",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "ExchangeFundSameTokenSwap",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "ExchangeFundTokenNotAllowedToBeDeposited",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "ExchangeFundTokenNotAllowedToBeSalvaged",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "ExchangeFundTokenNotAllowedToBeSwapped",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "ExchangeFundTokenNotAllowedToBeWithdrawn",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "prod1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "denominator",
          "type": "uint256"
        }
      ],
      "name": "FixedPointMathMulDivOverflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GovernedCantGoverItself",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GovernedGovernorZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GovernedOnlyGovernorAllowedToCall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GovernedOnlyPendingGovernorAllowedToCall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SafeERC20NoReturnData",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IUniswapV2Pair",
          "name": "pair",
          "type": "address"
        }
      ],
      "name": "DepositableTokenListed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "DepositableTokenUnlisted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Divest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "governor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newGovernor",
          "type": "address"
        }
      ],
      "name": "GovernanceTransited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Invest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "governor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newGovernor",
          "type": "address"
        }
      ],
      "name": "PendingGovernanceTransition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "slippageTolerance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newSlippageTolerance",
          "type": "uint256"
        }
      ],
      "name": "SlippageToleranceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "tokenA",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "tokenB",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        }
      ],
      "name": "Swap",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "name": "depositableTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "name": "deposits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "divest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDepositableTokens",
      "outputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "invest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "name": "liquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "listDepositableToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingGovernor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceOracle",
      "outputs": [
        {
          "internalType": "contract IPriceOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "quote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stablecoinAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "salvage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newSlippageTolerance",
          "type": "uint256"
        }
      ],
      "name": "setSlippageTolerance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "slippageTolerance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stablecoin",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "useWrappedNativeCurrencyAsIntermediateToken",
          "type": "bool"
        }
      ],
      "name": "swap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newGovernor",
          "type": "address"
        }
      ],
      "name": "transitGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV2Router",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Router",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "unlistDepositableToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wrappedNativeCurrency",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x5f97ce979daf897eaa452bdef77325995f6484fc0ff299dcdf1561f9bde30df4",
  "receipt": {
    "to": null,
    "from": "0x21309DA9AD64eA82431758B27cbD63E5d53A556c",
    "contractAddress": "0x077369a190C69F090B6549BDb6c858fd615C5311",
    "transactionIndex": 49,
    "gasUsed": "2723667",
    "logsBloom": "0x
    "blockHash": "0x09e7a0bc6ad49c70d110f1f085d19640fbc27ce8158d6918e7e613fe29822534",
    "transactionHash": "0x5f97ce979daf897eaa452bdef77325995f6484fc0ff299dcdf1561f9bde30df4",
    "logs": [
      {
        "transactionIndex": 49,
        "blockNumber": 9227291,
        "transactionHash": "0x5f97ce979daf897eaa452bdef77325995f6484fc0ff299dcdf1561f9bde30df4",
        "address": "0x077369a190C69F090B6549BDb6c858fd615C5311",
        "topics": [
          "0xc606c9af1451cadeb333f6ff7b24a5540974f4e800bac274fa7fff9edc305cb1",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000021309da9ad64ea82431758b27cbd63e5d53a556c"
        ],
        "data": "0x",
        "logIndex": 81,
        "blockHash": "0x09e7a0bc6ad49c70d110f1f085d19640fbc27ce8158d6918e7e613fe29822534"
      },
      {
        "transactionIndex": 49,
        "blockNumber": 9227291,
        "transactionHash": "0x5f97ce979daf897eaa452bdef77325995f6484fc0ff299dcdf1561f9bde30df4",
        "address": "0x077369a190C69F090B6549BDb6c858fd615C5311",
        "topics": [
          "0x564590b81987d147246f63910a8e1ee4eb09c4d64cc75ee975a8ffedfcc2210e",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000021309da9ad64ea82431758b27cbd63e5d53a556c"
        ],
        "data": "0x",
        "logIndex": 82,
        "blockHash": "0x09e7a0bc6ad49c70d110f1f085d19640fbc27ce8158d6918e7e613fe29822534"
      },
      {
        "transactionIndex": 49,
        "blockNumber": 9227291,
        "transactionHash": "0x5f97ce979daf897eaa452bdef77325995f6484fc0ff299dcdf1561f9bde30df4",
        "address": "0x5478479544f14013714Af58eB50d2A27E849E4C9",
        "topics": [
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
          "0x000000000000000000000000077369a190c69f090b6549bdb6c858fd615c5311",
          "0x0000000000000000000000007a250d5630b4cf539739df2c5dacb4c659f2488d"
        ],
        "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "logIndex": 83,
        "blockHash": "0x09e7a0bc6ad49c70d110f1f085d19640fbc27ce8158d6918e7e613fe29822534"
      }
    ],
    "blockNumber": 9227291,
    "cumulativeGasUsed": "16358377",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xc778417E063141139Fce010982780140Aa0cD5Ab",
    "0x5478479544f14013714Af58eB50d2A27E849E4C9",
    "0x6b25356A930Ac5299B86E76012192A7b47C48F41",
    "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D",
    "0xb02E726015885207D534ea5EBB339e7F0cee61D7"
  ],
  "solcInputHash": "ee81eac0b6770a7f9008729207f6bf31",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_wrappedNativeCurrency\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_stablecoin\",\"type\":\"address\"},{\"internalType\":\"contract IPriceOracle\",\"name\":\"_priceOracle\",\"type\":\"address\"},{\"internalType\":\"contract IUniswapV2Router\",\"name\":\"_uniswapV2Router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"CallToNonContract\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"ExchangeFundDepositableTokenAlreadyListed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"ExchangeFundDepositableTokenNotListed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"ExchangeFundDepositableTokenTooLargeDecimals\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"ExchangeFundDepositableTokenZeroDecimals\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExchangeFundInsufficientDeposits\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExchangeFundInsufficientLiquidity\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"ExchangeFundSameTokenSwap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"ExchangeFundTokenNotAllowedToBeDeposited\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"ExchangeFundTokenNotAllowedToBeSalvaged\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"ExchangeFundTokenNotAllowedToBeSwapped\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"ExchangeFundTokenNotAllowedToBeWithdrawn\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"prod1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"FixedPointMathMulDivOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GovernedCantGoverItself\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GovernedGovernorZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GovernedOnlyGovernorAllowedToCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GovernedOnlyPendingGovernorAllowedToCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeERC20NoReturnData\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IUniswapV2Pair\",\"name\":\"pair\",\"type\":\"address\"}],\"name\":\"DepositableTokenListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"DepositableTokenUnlisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Divest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"GovernanceTransited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Invest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"PendingGovernanceTransition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slippageTolerance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSlippageTolerance\",\"type\":\"uint256\"}],\"name\":\"SlippageToleranceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenA\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenB\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"depositableTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"divest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDepositableTokens\",\"outputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"invest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"listDepositableToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingGovernor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceOracle\",\"outputs\":[{\"internalType\":\"contract IPriceOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stablecoinAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"salvage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newSlippageTolerance\",\"type\":\"uint256\"}],\"name\":\"setSlippageTolerance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slippageTolerance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stablecoin\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"useWrappedNativeCurrencyAsIntermediateToken\",\"type\":\"bool\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"transitGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"unlistDepositableToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrappedNativeCurrency\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ExchangeFundDepositableTokenAlreadyListed(address)\":[{\"details\":\"Thrown when trying to list depositable token that's already listed.\",\"params\":{\"token\":\"The address of the token contract.\"}}],\"ExchangeFundDepositableTokenNotListed(address)\":[{\"details\":\"Thrown when trying to unlist depositable token that's not listed.\",\"params\":{\"token\":\"The address of the token contract.\"}}],\"ExchangeFundDepositableTokenTooLargeDecimals(address,uint8)\":[{\"details\":\"Thrown when trying to list depositable token that has too large decimals.\",\"params\":{\"token\":\"The address of the token contract.\"}}],\"ExchangeFundDepositableTokenZeroDecimals(address)\":[{\"details\":\"Thrown when trying to list depositable token that has zero decimals.\",\"params\":{\"token\":\"The address of the token contract.\"}}],\"ExchangeFundTokenNotAllowedToBeDeposited(address)\":[{\"details\":\"Thrown when interacting with a token that's not allowed to be deposited.\",\"params\":{\"token\":\"The address of the token contract.\"}}],\"ExchangeFundTokenNotAllowedToBeSalvaged(address)\":[{\"details\":\"Thrown when trying to salvage one of depositable tokens or stablecoin.\",\"params\":{\"token\":\"The address of the token contract.\"}}],\"ExchangeFundTokenNotAllowedToBeSwapped(address)\":[{\"details\":\"Thrown when trying to swap token that's not allowed to be swapped.\",\"params\":{\"token\":\"The address of the token contract.\"}}],\"ExchangeFundTokenNotAllowedToBeWithdrawn(address)\":[{\"details\":\"Thrown when interacting with a token that's not allowed to be withdrawn.\",\"params\":{\"token\":\"The address of the token contract.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ExchangeFund.sol\":\"ExchangeFund\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/ExchangeFund.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.7;\\n\\nimport \\\"./libraries/AmountNormalization.sol\\\";\\nimport \\\"./libraries/EnumerableAddressSet.sol\\\";\\nimport \\\"./libraries/FixedPointMath.sol\\\";\\nimport \\\"./libraries/ReentrancyGuard.sol\\\";\\nimport \\\"./libraries/SafeERC20.sol\\\";\\nimport {Governed} from \\\"./Governance.sol\\\";\\nimport {IERC20} from \\\"./interfaces/IERC20.sol\\\";\\nimport {IPriceOracle} from \\\"./interfaces/IPriceOracle.sol\\\";\\nimport {IUniswapV2Factory, IUniswapV2Router, IUniswapV2Pair} from \\\"./interfaces/UniswapV2.sol\\\";\\n\\n/// @dev Thrown when trying to list depositable token that has zero decimals.\\n/// @param token The address of the token contract.\\nerror ExchangeFundDepositableTokenZeroDecimals(IERC20 token);\\n\\n/// @dev Thrown when trying to list depositable token that has too large decimals.\\n/// @param token The address of the token contract.\\nerror ExchangeFundDepositableTokenTooLargeDecimals(IERC20 token, uint8 decimals);\\n\\n/// @dev Thrown when trying to list depositable token that's already listed.\\n/// @param token The address of the token contract.\\nerror ExchangeFundDepositableTokenAlreadyListed(IERC20 token);\\n\\n/// @dev Thrown when trying to unlist depositable token that's not listed.\\n/// @param token The address of the token contract.\\nerror ExchangeFundDepositableTokenNotListed(IERC20 token);\\n\\n/// @dev Thrown when interacting with a token that's not allowed to be deposited.\\n/// @param token The address of the token contract.\\nerror ExchangeFundTokenNotAllowedToBeDeposited(IERC20 token);\\n\\n/// @dev Thrown when interacting with a token that's not allowed to be withdrawn.\\n/// @param token The address of the token contract.\\nerror ExchangeFundTokenNotAllowedToBeWithdrawn(IERC20 token);\\n\\n/// @dev Thrown when trying to salvage one of depositable tokens or stablecoin.\\n/// @param token The address of the token contract.\\nerror ExchangeFundTokenNotAllowedToBeSalvaged(IERC20 token);\\n\\nerror ExchangeFundInsufficientDeposits();\\n\\nerror ExchangeFundInsufficientLiquidity();\\n\\nerror ExchangeFundSameTokenSwap(IERC20 token);\\n\\n/// @dev Thrown when trying to swap token that's not allowed to be swapped.\\n/// @param token The address of the token contract.\\nerror ExchangeFundTokenNotAllowedToBeSwapped(IERC20 token);\\n\\ncontract ExchangeFund is Governed, ReentrancyGuard {\\n    using AmountNormalization for IERC20;\\n    using EnumerableAddressSet for EnumerableAddressSet.Set;\\n    using FixedPointMath for uint256;\\n    using SafeERC20 for IERC20;\\n\\n    uint256 internal constant ONE = 100e16;\\n    uint8 internal constant DECIMALS = 18;\\n\\n    IERC20 public immutable wrappedNativeCurrency;\\n\\n    IERC20 public immutable stablecoin;\\n    IPriceOracle public immutable priceOracle;\\n    IUniswapV2Router public immutable uniswapV2Router;\\n\\n    address public immutable operator;\\n\\n    uint256 public slippageTolerance = 5e15; // 0.5 %\\n\\n    mapping(address => mapping(IERC20 => uint256)) public deposits;\\n    mapping(address => mapping(IERC20 => uint256)) public liquidity;\\n\\n    mapping(IERC20 => bool) public depositableTokens;\\n    EnumerableAddressSet.Set internal depositableTokensSet;\\n\\n    event DepositableTokenListed(IERC20 indexed token, IUniswapV2Pair pair);\\n    event DepositableTokenUnlisted(IERC20 indexed token);\\n\\n    event SlippageToleranceUpdated(uint256 slippageTolerance, uint256 newSlippageTolerance);\\n\\n    event Deposit(address indexed account, IERC20 indexed token, uint256 amount);\\n    event Swap(address indexed account, IERC20 indexed tokenA, IERC20 indexed tokenB, uint256 amountA, uint256 amountB);\\n    event Invest(address indexed account, IERC20 indexed token, uint256 amount);\\n    event Divest(address indexed account, IERC20 indexed token, uint256 amount);\\n    event Withdrawal(address indexed account, IERC20 indexed token, uint256 amount);\\n\\n    modifier tokenAllowedToBeDeposited(IERC20 token) {\\n        if (!depositableTokensSet.contains(address(token))) {\\n            revert ExchangeFundTokenNotAllowedToBeDeposited(token);\\n        }\\n        _;\\n    }\\n\\n    modifier tokenAllowedToBeSwapped(IERC20 token) {\\n        if (token != stablecoin && !depositableTokensSet.contains(address(token))) {\\n            revert ExchangeFundTokenNotAllowedToBeSwapped(token);\\n        }\\n        _;\\n    }\\n\\n    constructor(\\n        IERC20 _wrappedNativeCurrency,\\n        IERC20 _stablecoin,\\n        IPriceOracle _priceOracle,\\n        IUniswapV2Router _uniswapV2Router,\\n        address _operator\\n    ) {\\n        wrappedNativeCurrency = _wrappedNativeCurrency;\\n\\n        stablecoin = _stablecoin;\\n        priceOracle = _priceOracle;\\n        uniswapV2Router = _uniswapV2Router;\\n        operator = _operator;\\n\\n        _stablecoin.approve(address(_uniswapV2Router), type(uint256).max);\\n    }\\n\\n    function deposit(IERC20 token, uint256 amount) external nonReentrant tokenAllowedToBeDeposited(token) {\\n        token.safeTransferFrom(msg.sender, address(this), amount);\\n\\n        uint256 normalizedAmount = token.normalizeAmount(amount);\\n        deposits[msg.sender][token] += normalizedAmount;\\n\\n        emit Deposit(msg.sender, token, normalizedAmount);\\n    }\\n\\n    function swap(\\n        IERC20 tokenA,\\n        IERC20 tokenB,\\n        uint256 amount,\\n        bool useWrappedNativeCurrencyAsIntermediateToken\\n    ) external nonReentrant tokenAllowedToBeSwapped(tokenA) tokenAllowedToBeSwapped(tokenB) {\\n        uint256 normalizedAmount = tokenA.normalizeAmount(amount);\\n        if (normalizedAmount > deposits[msg.sender][tokenA]) {\\n            revert ExchangeFundInsufficientDeposits();\\n        }\\n\\n        if (tokenA == tokenB) {\\n            revert ExchangeFundSameTokenSwap(tokenA);\\n        }\\n\\n        address[] memory path = new address[](useWrappedNativeCurrencyAsIntermediateToken ? 3 : 2);\\n        path[0] = address(tokenA);\\n        path[1] = useWrappedNativeCurrencyAsIntermediateToken ? address(wrappedNativeCurrency) : address(tokenB);\\n        if (useWrappedNativeCurrencyAsIntermediateToken) {\\n            path[2] = address(tokenB);\\n        }\\n\\n        uint256[] memory amounts = uniswapV2Router.getAmountsOut(amount, path);\\n        uint256 normalizedAmountOut = tokenB.normalizeAmount(amounts[amounts.length - 1]);\\n\\n        amounts = uniswapV2Router.swapExactTokensForTokens(\\n            amount,\\n            tokenB.denormalizeAmount(normalizedAmountOut.mul(ONE - slippageTolerance)),\\n            path,\\n            address(this),\\n            block.timestamp\\n        );\\n\\n        uint256 normalizedTokenAAmount = tokenA.normalizeAmount(amounts[0]);\\n        uint256 normalizedTokenBAmount = tokenB.normalizeAmount(amounts[amounts.length - 1]);\\n\\n        deposits[msg.sender][tokenA] -= normalizedTokenAAmount;\\n        deposits[msg.sender][tokenB] += normalizedTokenBAmount;\\n\\n        emit Swap(msg.sender, tokenA, tokenB, normalizedTokenAAmount, normalizedTokenBAmount);\\n    }\\n\\n    function invest(IERC20 token, uint256 amount) external nonReentrant {\\n        uint256 normalizedAmount = token.normalizeAmount(amount);\\n        if (normalizedAmount > deposits[msg.sender][token]) {\\n            revert ExchangeFundInsufficientDeposits();\\n        }\\n\\n        uint256 tokenValue = quote(token, amount);\\n        (, uint256 amountSent, uint256 liquidityMinted) = uniswapV2Router.addLiquidity(\\n            stablecoin,\\n            token,\\n            tokenValue,\\n            amount,\\n            tokenValue.mul(ONE - slippageTolerance),\\n            token.denormalizeAmount(normalizedAmount.mul(ONE - slippageTolerance)),\\n            address(this),\\n            block.timestamp\\n        );\\n\\n        deposits[msg.sender][token] -= token.normalizeAmount(amountSent);\\n        liquidity[msg.sender][token] += liquidityMinted;\\n\\n        emit Invest(msg.sender, token, normalizedAmount);\\n    }\\n\\n    function divest(IERC20 token, uint256 amount) external nonReentrant {\\n        if (amount > liquidity[msg.sender][token]) {\\n            revert ExchangeFundInsufficientLiquidity();\\n        }\\n\\n        (, uint256 amountReceived) = uniswapV2Router.removeLiquidity(\\n            stablecoin,\\n            token,\\n            amount,\\n            0,\\n            0,\\n            address(this),\\n            block.timestamp\\n        );\\n\\n        deposits[msg.sender][token] += token.normalizeAmount(amountReceived);\\n        liquidity[msg.sender][token] -= amount;\\n\\n        emit Divest(msg.sender, token, amount);\\n    }\\n\\n    function withdraw(IERC20 token, uint256 amount) external nonReentrant {\\n        if (token == stablecoin) {\\n            revert ExchangeFundTokenNotAllowedToBeWithdrawn(token);\\n        }\\n\\n        uint256 normalizedAmount = token.normalizeAmount(amount);\\n        if (normalizedAmount > deposits[msg.sender][token]) {\\n            revert ExchangeFundInsufficientDeposits();\\n        }\\n\\n        deposits[msg.sender][token] -= normalizedAmount;\\n        token.safeTransfer(msg.sender, amount);\\n\\n        emit Withdrawal(msg.sender, token, normalizedAmount);\\n    }\\n\\n    function listDepositableToken(IERC20 token) external onlyGovernor {\\n        if (depositableTokensSet.contains(address(token))) {\\n            revert ExchangeFundDepositableTokenAlreadyListed(token);\\n        }\\n\\n        uint8 decimals = token.decimals();\\n        if (decimals == 0) {\\n            revert ExchangeFundDepositableTokenZeroDecimals(token);\\n        }\\n        if (decimals > DECIMALS) {\\n            revert ExchangeFundDepositableTokenTooLargeDecimals(token, decimals);\\n        }\\n\\n        if (depositableTokensSet.add(address(token))) {\\n            token.approve(address(uniswapV2Router), type(uint256).max);\\n\\n            IUniswapV2Factory uniswapV2Factory = uniswapV2Router.factory();\\n            IUniswapV2Pair uniswapV2Pair = uniswapV2Factory.getPair(stablecoin, token);\\n            if (address(uniswapV2Pair) == address(0)) {\\n                uniswapV2Pair = uniswapV2Factory.createPair(stablecoin, token);\\n            }\\n            uniswapV2Pair.approve(address(uniswapV2Router), type(uint256).max);\\n\\n            depositableTokens[token] = true;\\n            emit DepositableTokenListed(token, uniswapV2Pair);\\n        }\\n    }\\n\\n    function unlistDepositableToken(IERC20 token) external onlyGovernor {\\n        if (!depositableTokensSet.contains(address(token))) {\\n            revert ExchangeFundDepositableTokenNotListed(token);\\n        }\\n\\n        if (depositableTokensSet.remove(address(token))) {\\n            token.approve(address(uniswapV2Router), 0);\\n\\n            IUniswapV2Factory uniswapV2Factory = uniswapV2Router.factory();\\n            IUniswapV2Pair uniswapV2Pair = uniswapV2Factory.getPair(stablecoin, token);\\n            if (address(uniswapV2Pair) != address(0)) {\\n                uniswapV2Pair.approve(address(uniswapV2Router), 0);\\n            }\\n\\n            delete depositableTokens[token];\\n            emit DepositableTokenUnlisted(token);\\n        }\\n    }\\n\\n    function setSlippageTolerance(uint256 newSlippageTolerance) external onlyGovernor {\\n        emit SlippageToleranceUpdated(slippageTolerance, newSlippageTolerance);\\n        slippageTolerance = newSlippageTolerance;\\n    }\\n\\n    function salvage(IERC20 token) external onlyGovernor {\\n        address tokenAddress = address(token);\\n        if (token == stablecoin || depositableTokensSet.contains(tokenAddress)) {\\n            revert ExchangeFundTokenNotAllowedToBeSalvaged(token);\\n        }\\n        token.safeTransfer(operator, token.balanceOf(address(this)));\\n    }\\n\\n    function getDepositableTokens() external view returns (IERC20[] memory tokens) {\\n        uint256 length = depositableTokensSet.elements.length;\\n        tokens = new IERC20[](length);\\n\\n        for (uint256 i = 0; i < length; i++) {\\n            tokens[i] = IERC20(depositableTokensSet.elements[i]);\\n        }\\n    }\\n\\n    function quote(IERC20 token, uint256 amount) public view returns (uint256 stablecoinAmount) {\\n        IUniswapV2Pair uniswapV2Pair = uniswapV2Router.factory().getPair(stablecoin, token);\\n\\n        (uint256 reserveA, uint256 reserveB, ) = uniswapV2Pair.getReserves();\\n        if (reserveA == 0 || reserveB == 0) {\\n            stablecoinAmount = token.normalizeAmount(amount).mul(priceOracle.getNormalizedPrice(token));\\n            return stablecoinAmount;\\n        }\\n\\n        stablecoinAmount = address(stablecoin) < address(token)\\n            ? uniswapV2Router.quote(amount, reserveB, reserveA)\\n            : uniswapV2Router.quote(amount, reserveA, reserveB);\\n    }\\n}\\n\",\"keccak256\":\"0xc9552061a648e42b5e948f7965b8fb97df3038e93abbcd6ee83778b1047a7937\",\"license\":\"BUSL-1.1\"},\"contracts/Governance.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.7;\\n\\nerror GovernedOnlyGovernorAllowedToCall();\\nerror GovernedOnlyPendingGovernorAllowedToCall();\\nerror GovernedGovernorZeroAddress();\\nerror GovernedCantGoverItself();\\n\\nabstract contract Governed {\\n    address public governor;\\n    address public pendingGovernor;\\n\\n    event PendingGovernanceTransition(address indexed governor, address indexed newGovernor);\\n    event GovernanceTransited(address indexed governor, address indexed newGovernor);\\n\\n    modifier onlyGovernor() {\\n        if (msg.sender != governor) {\\n            revert GovernedOnlyGovernorAllowedToCall();\\n        }\\n        _;\\n    }\\n\\n    constructor() {\\n        governor = msg.sender;\\n        emit PendingGovernanceTransition(address(0), governor);\\n        emit GovernanceTransited(address(0), governor);\\n    }\\n\\n    function transitGovernance(address newGovernor) external {\\n        if (newGovernor == address(0)) {\\n            revert GovernedGovernorZeroAddress();\\n        }\\n        if (newGovernor == address(this)) {\\n            revert GovernedCantGoverItself();\\n        }\\n\\n        pendingGovernor = newGovernor;\\n        emit PendingGovernanceTransition(governor, newGovernor);\\n    }\\n\\n    function acceptGovernance() external {\\n        if (msg.sender != pendingGovernor) {\\n            revert GovernedOnlyPendingGovernorAllowedToCall();\\n        }\\n\\n        governor = pendingGovernor;\\n        emit GovernanceTransited(governor, pendingGovernor);\\n    }\\n}\\n\",\"keccak256\":\"0x144bdf7b3aad44cc0084cacb3d6ac9c68a19484d2a0f0021a40ee03129c9b462\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.7;\\n\\ninterface IERC20 {\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n}\\n\\ninterface IMintableAndBurnableERC20 is IERC20 {\\n    function mint(address to, uint256 amount) external;\\n\\n    function burn(address from, uint256 amount) external;\\n}\\n\",\"keccak256\":\"0x05eafc19c3f6a255dd44fd2f0d282871c31a5f2606165d9c1eb9a7fc908ccca4\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IPriceOracle.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.7;\\n\\nimport \\\"./../interfaces/IERC20.sol\\\";\\nimport \\\"./../libraries/FixedPointMath.sol\\\";\\n\\n/// @notice Thrown when oracle doesn't provide price for `token` token.\\n/// @param token The address of the token contract.\\nerror PriceOracleTokenUnknown(IERC20 token);\\n/// @notice Thrown when oracle provide stale price `price` for `token` token.\\n/// @param token The address of the token contract.\\n/// @param price Provided price.\\nerror PriceOracleStalePrice(IERC20 token, uint256 price);\\n/// @notice Thrown when oracle provide negative, zero or in other ways invalid price `price` for `token` token.\\n/// @param token The address of the token contract.\\n/// @param price Provided price.\\nerror PriceOracleInvalidPrice(IERC20 token, int256 price);\\n\\ninterface IPriceOracle {\\n    /// @notice Gets normalized to 18 decimals price for the `token` token.\\n    /// @param token The address of the token contract.\\n    /// @return normalizedPrice Normalized price.\\n    function getNormalizedPrice(IERC20 token) external view returns (uint256 normalizedPrice);\\n}\\n\",\"keccak256\":\"0x03a00db043da3c063a85d39f68dfa0c9e88702ef817f185e11f35d64ff89b41c\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/UniswapV2.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.7;\\n\\nimport {IERC20} from \\\"./../interfaces/IERC20.sol\\\";\\n\\ninterface IUniswapV2Factory {\\n    function createPair(IERC20 tokenA, IERC20 tokenB) external returns (IUniswapV2Pair pair);\\n\\n    function getPair(IERC20 tokenA, IERC20 tokenB) external view returns (IUniswapV2Pair pair);\\n}\\n\\ninterface IUniswapV2Pair is IERC20 {\\n    function token0() external view returns (IERC20);\\n\\n    function token1() external view returns (IERC20);\\n\\n    function getReserves()\\n        external\\n        view\\n        returns (\\n            uint112 reserve0,\\n            uint112 reserve1,\\n            uint32 blockTimestampLast\\n        );\\n}\\n\\ninterface IUniswapV2Router {\\n    function addLiquidity(\\n        IERC20 tokenA,\\n        IERC20 tokenB,\\n        uint256 amountADesired,\\n        uint256 amountBDesired,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    )\\n        external\\n        returns (\\n            uint256 amountA,\\n            uint256 amountB,\\n            uint256 liquidity\\n        );\\n\\n    function removeLiquidity(\\n        IERC20 tokenA,\\n        IERC20 tokenB,\\n        uint256 liquidity,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountA, uint256 amountB);\\n\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function getAmountsOut(uint256 amountIn, address[] calldata path) external view returns (uint256[] memory amounts);\\n\\n    function factory() external view returns (IUniswapV2Factory factory);\\n\\n    function quote(\\n        uint256 amountA,\\n        uint256 reserveA,\\n        uint256 reserveB\\n    ) external pure returns (uint256 amountB);\\n}\\n\",\"keccak256\":\"0x9bf0addf595ca43d62e31ba9996fe95940c86ef798477cab78e7d041f2240f40\",\"license\":\"BUSL-1.1\"},\"contracts/libraries/Address.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.7;\\n\\nerror CallToNonContract(address target);\\n\\nlibrary Address {\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        if (!isContract(target)) {\\n            revert CallToNonContract(target);\\n        }\\n\\n        (bool success, bytes memory returnData) = target.call(data);\\n        return verifyCallResult(success, returnData, errorMessage);\\n    }\\n\\n    function delegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        if (!isContract(target)) {\\n            revert CallToNonContract(target);\\n        }\\n\\n        (bool success, bytes memory returnData) = target.delegatecall(data);\\n        return verifyCallResult(success, returnData, errorMessage);\\n    }\\n\\n    function isContract(address account) internal view returns (bool) {\\n        uint256 codeSize;\\n        assembly {\\n            codeSize := extcodesize(account)\\n        }\\n\\n        return codeSize > 0;\\n    }\\n\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returnData,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returnData;\\n        } else {\\n            if (returnData.length > 0) {\\n                assembly {\\n                    let returnDataSize := mload(returnData)\\n                    revert(add(returnData, 32), returnDataSize)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaa6360c0519df7ce842de6853c4772bd8b4a0c94bd1f9cff5e8c0788771f7ba8\",\"license\":\"BUSL-1.1\"},\"contracts/libraries/AmountNormalization.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.7;\\n\\nimport \\\"./../interfaces/IERC20.sol\\\";\\n\\nlibrary AmountNormalization {\\n    uint8 internal constant DECIMALS = 18;\\n\\n    function normalizeAmount(IERC20 self, uint256 denormalizedAmount) internal view returns (uint256 normalizedAmount) {\\n        uint256 scale = 10**(DECIMALS - self.decimals());\\n        if (scale != 1) {\\n            return denormalizedAmount * scale;\\n        }\\n        return denormalizedAmount;\\n    }\\n\\n    function denormalizeAmount(IERC20 self, uint256 normalizedAmount)\\n        internal\\n        view\\n        returns (uint256 denormalizedAmount)\\n    {\\n        uint256 scale = 10**(DECIMALS - self.decimals());\\n        if (scale != 1) {\\n            return normalizedAmount / scale;\\n        }\\n        return normalizedAmount;\\n    }\\n}\\n\",\"keccak256\":\"0xefd7cbf9a84146fab4696f029b7cb1d05cf6728dec37bc4a0fbf889b88b57d3f\",\"license\":\"BUSL-1.1\"},\"contracts/libraries/EnumerableAddressSet.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.7;\\n\\nlibrary EnumerableAddressSet {\\n    struct Set {\\n        address[] elements;\\n        mapping(address => uint256) indexes;\\n    }\\n\\n    function add(Set storage self, address element) internal returns (bool) {\\n        if (contains(self, element)) {\\n            return false;\\n        }\\n\\n        self.elements.push(element);\\n        self.indexes[element] = self.elements.length;\\n\\n        return true;\\n    }\\n\\n    function remove(Set storage self, address element) internal returns (bool) {\\n        uint256 elementIndex = indexOf(self, element);\\n        if (elementIndex == 0) {\\n            return false;\\n        }\\n\\n        uint256 indexToRemove = elementIndex - 1;\\n        uint256 lastIndex = count(self) - 1;\\n        if (indexToRemove != lastIndex) {\\n            address lastElement = self.elements[lastIndex];\\n            self.elements[indexToRemove] = lastElement;\\n            self.indexes[lastElement] = elementIndex;\\n        }\\n        self.elements.pop();\\n        delete self.indexes[element];\\n\\n        return true;\\n    }\\n\\n    function indexOf(Set storage self, address element) internal view returns (uint256) {\\n        return self.indexes[element];\\n    }\\n\\n    function contains(Set storage self, address element) internal view returns (bool) {\\n        return indexOf(self, element) != 0;\\n    }\\n\\n    function count(Set storage self) internal view returns (uint256) {\\n        return self.elements.length;\\n    }\\n}\\n\",\"keccak256\":\"0x760d57ee43b7a4268f5f5a259041450ad9be13f8b08811ce107d360d142eb84d\",\"license\":\"BUSL-1.1\"},\"contracts/libraries/FixedPointMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.7;\\n\\nerror FixedPointMathMulDivOverflow(uint256 prod1, uint256 denominator);\\n\\n/// @title Fixed point math implementation\\nlibrary FixedPointMath {\\n    uint256 internal constant SCALE = 1e18;\\n    /// @dev Largest power of two divisor of scale.\\n    uint256 internal constant SCALE_LPOTD = 262144;\\n    /// @dev Scale inverted mod 2**256.\\n    uint256 internal constant SCALE_INVERSE =\\n        78156646155174841979727994598816262306175212592076161876661508869554232690281;\\n\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 result) {\\n        uint256 prod0;\\n        uint256 prod1;\\n        assembly {\\n            let mm := mulmod(a, b, not(0))\\n            prod0 := mul(a, b)\\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n        }\\n\\n        if (prod1 >= SCALE) {\\n            revert FixedPointMathMulDivOverflow(prod1, SCALE);\\n        }\\n\\n        uint256 remainder;\\n        uint256 roundUpUnit;\\n        assembly {\\n            remainder := mulmod(a, b, SCALE)\\n            roundUpUnit := gt(remainder, 499999999999999999)\\n        }\\n\\n        if (prod1 == 0) {\\n            assembly {\\n                result := add(div(prod0, SCALE), roundUpUnit)\\n            }\\n            return result;\\n        }\\n\\n        assembly {\\n            result := add(\\n                mul(\\n                    or(\\n                        div(sub(prod0, remainder), SCALE_LPOTD),\\n                        mul(sub(prod1, gt(remainder, prod0)), add(div(sub(0, SCALE_LPOTD), SCALE_LPOTD), 1))\\n                    ),\\n                    SCALE_INVERSE\\n                ),\\n                roundUpUnit\\n            )\\n        }\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256 result) {\\n        result = mulDiv(a, SCALE, b);\\n    }\\n\\n    /// @notice Calculates \\u230aa \\u00d7 b \\u00f7 denominator\\u230b with full precision.\\n    /// @dev Credit to Remco Bloemen under MIT license https://2\\u03c0.com/21/muldiv.\\n    function mulDiv(\\n        uint256 a,\\n        uint256 b,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        uint256 prod0;\\n        uint256 prod1;\\n        assembly {\\n            let mm := mulmod(a, b, not(0))\\n            prod0 := mul(a, b)\\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n        }\\n\\n        if (prod1 >= denominator) {\\n            revert FixedPointMathMulDivOverflow(prod1, denominator);\\n        }\\n\\n        if (prod1 == 0) {\\n            assembly {\\n                result := div(prod0, denominator)\\n            }\\n            return result;\\n        }\\n\\n        uint256 remainder;\\n        assembly {\\n            remainder := mulmod(a, b, denominator)\\n\\n            prod1 := sub(prod1, gt(remainder, prod0))\\n            prod0 := sub(prod0, remainder)\\n        }\\n\\n        unchecked {\\n            uint256 lpotdod = denominator & (~denominator + 1);\\n            assembly {\\n                denominator := div(denominator, lpotdod)\\n                prod0 := div(prod0, lpotdod)\\n                lpotdod := add(div(sub(0, lpotdod), lpotdod), 1)\\n            }\\n            prod0 |= prod1 * lpotdod;\\n\\n            uint256 inverse = (3 * denominator) ^ 2;\\n            inverse *= 2 - denominator * inverse;\\n            inverse *= 2 - denominator * inverse;\\n            inverse *= 2 - denominator * inverse;\\n            inverse *= 2 - denominator * inverse;\\n            inverse *= 2 - denominator * inverse;\\n            inverse *= 2 - denominator * inverse;\\n\\n            result = prod0 * inverse;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2f335c64cfec6ebf78a441dbc1e58b739653160d643e1ebec297314660c1c5d4\",\"license\":\"MIT\"},\"contracts/libraries/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.7;\\n\\nerror ReentrancyGuardReentrantCall();\\n\\nabstract contract ReentrancyGuard {\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private status;\\n\\n    modifier nonReentrant() {\\n        if (status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        status = ENTERED;\\n\\n        _;\\n\\n        status = NOT_ENTERED;\\n    }\\n\\n    constructor() {\\n        status = NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x1adea780cdefb27ad21c300b45b7e957414ca2dbe36dd19e9098f9b778d2bad3\",\"license\":\"BUSL-1.1\"},\"contracts/libraries/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.7;\\n\\nimport \\\"./../interfaces/IERC20.sol\\\";\\nimport \\\"./Address.sol\\\";\\n\\nerror SafeERC20NoReturnData();\\n\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        callWithOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, amount));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        callWithOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, amount));\\n    }\\n\\n    function callWithOptionalReturn(IERC20 token, bytes memory data) internal {\\n        address tokenAddress = address(token);\\n\\n        bytes memory returnData = tokenAddress.functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returnData.length > 0) {\\n            if (!abi.decode(returnData, (bool))) {\\n                revert SafeERC20NoReturnData();\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9d9993130858224db05b5986cea6a94c2d0e177bd7d8258ecc4bfae3780704e1\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x6101206040526611c37937e080006003553480156200001d57600080fd5b50604051620031d7380380620031d78339810160408190526200004091620001ae565b600080546001600160a01b0319163390811782556040519091907fc606c9af1451cadeb333f6ff7b24a5540974f4e800bac274fa7fff9edc305cb1908290a3600080546040516001600160a01b0390911691907f564590b81987d147246f63910a8e1ee4eb09c4d64cc75ee975a8ffedfcc2210e908290a360016002556001600160601b0319606086811b821660805285811b821660a05284811b821660c05283811b821660e05282901b166101005260405163095ea7b360e01b81526001600160a01b038084166004830152600019602483015285169063095ea7b390604401602060405180830381600087803b1580156200013c57600080fd5b505af115801562000151573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000177919062000183565b50505050505062000247565b6000602082840312156200019657600080fd5b81518015158114620001a757600080fd5b9392505050565b600080600080600060a08688031215620001c757600080fd5b8551620001d4816200022e565b6020870151909550620001e7816200022e565b6040870151909450620001fa816200022e565b60608701519093506200020d816200022e565b608087015190925062000220816200022e565b809150509295509295909350565b6001600160a01b03811681146200024457600080fd5b50565b60805160601c60a05160601c60c05160601c60e05160601c6101005160601c612e7f620003586000396000818161026301526116d10152600081816101e7015281816106c901528181610759015281816108b701528181610e0401528181610ed901528181611276015281816113070152818161150a0152818161176b01528181611a6901528181611b1401528181611c380152611f47015260008181610216015261196d0152600081816103fe015281816107ff01528181610b2801528181610baa015281816113ad015281816114640152818161163a0152818161181101528181611a1801528181611c6701528181611ef301526120c20152600081816103d70152610d5c0152612e7f6000f3fe608060405234801561001057600080fd5b50600436106101985760003560e01c8063863a03e0116100e3578063c14edd791161008c578063e7f3028c11610066578063e7f3028c146103d2578063e9cbd822146103f9578063f3fef3a31461042057600080fd5b8063c14edd7914610383578063d03153aa146103b6578063e3056a34146103bf57600080fd5b8063b2217281116100bd578063b221728114610332578063b9b8c2461461035d578063bb5043171461037057600080fd5b8063863a03e0146102d35780638f601f66146102e65780638f79306e1461031f57600080fd5b806348be771911610145578063631aa9e21161011f578063631aa9e21461029a5780637e83f7d7146102ad57806385881e2a146102c057600080fd5b806348be77191461024b578063570ca7351461025e5780635e6fdf431461028557600080fd5b8063238efcbc11610176578063238efcbc146102095780632630c12f1461021157806347e7ef241461023857600080fd5b80630c340a241461019d578063117da1ee146101cd5780631694505e146101e2575b600080fd5b6000546101b0906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101e06101db366004612a4b565b610433565b005b6101b07f000000000000000000000000000000000000000000000000000000000000000081565b6101e061049f565b6101b07f000000000000000000000000000000000000000000000000000000000000000081565b6101e06102463660046129b2565b610515565b6101e0610259366004612827565b610636565b6101b07f000000000000000000000000000000000000000000000000000000000000000081565b61028d610990565b6040516101c49190612b52565b6101e06102a8366004612827565b610a59565b6101e06102bb36600461295f565b610afb565b6101e06102ce366004612827565b611108565b6101e06102e1366004612827565b611608565b6103116102f4366004612844565b600460209081526000928352604080842090915290825290205481565b6040519081526020016101c4565b61031161032d3660046129b2565b611766565b610311610340366004612844565b600560209081526000928352604080842090915290825290205481565b6101e061036b3660046129b2565b611ba2565b6101e061037e3660046129b2565b611e71565b6103a6610391366004612827565b60066020526000908152604090205460ff1681565b60405190151581526020016101c4565b61031160035481565b6001546101b0906001600160a01b031681565b6101b07f000000000000000000000000000000000000000000000000000000000000000081565b6101b07f000000000000000000000000000000000000000000000000000000000000000081565b6101e061042e3660046129b2565b612096565b6000546001600160a01b0316331461045e576040516305e7700560e51b815260040160405180910390fd5b60035460408051918252602082018390527fddd31550b26e9ef8ade466958be83ff8a014d9b4f36d546b61a6847a45306575910160405180910390a1600355565b6001546001600160a01b031633146104ca5760405163aec80d4b60e01b815260040160405180910390fd5b600154600080546001600160a01b0319166001600160a01b03909216918217815560405182917f564590b81987d147246f63910a8e1ee4eb09c4d64cc75ee975a8ffedfcc2210e91a3565b60028054141561053857604051633ee5aeb560e01b815260040160405180910390fd5b600280556001600160a01b03821660009081526008602052604090205482906105845760405163497e1e0360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b6105996001600160a01b038416333085612204565b60006105ae6001600160a01b038516846122a2565b3360009081526004602090815260408083206001600160a01b03891684529091528120805492935083929091906105e6908490612c2f565b90915550506040518181526001600160a01b0385169033907f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f629060200160405180910390a3505060016002555050565b6000546001600160a01b03163314610661576040516305e7700560e51b815260040160405180910390fd5b6001600160a01b0381166000908152600860205260409020546106a25760405163635c3e1f60e11b81526001600160a01b038216600482015260240161057b565b6106ad600782612350565b1561098d5760405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526000602483015282169063095ea7b390604401602060405180830381600087803b15801561071c57600080fd5b505af1158015610730573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107549190612942565b5060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b1580156107b057600080fd5b505afa1580156107c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e891906129de565b60405163e6a4390560e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152848116602483015291925060009183169063e6a439059060440160206040518083038186803b15801561085757600080fd5b505afa15801561086b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088f91906129de565b90506001600160a01b038116156109445760405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526000602483015282169063095ea7b390604401602060405180830381600087803b15801561090a57600080fd5b505af115801561091e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109429190612942565b505b6001600160a01b038316600081815260066020526040808220805460ff19169055517fbd6c0ac05a911841e71daa23bb8022779f3957fad4fa3546eb22a1782c747c839190a250505b50565b6007546060908067ffffffffffffffff8111156109af576109af612e39565b6040519080825280602002602001820160405280156109d8578160200160208202803683370190505b50915060005b81811015610a545760078054829081106109fa576109fa612e23565b9060005260206000200160009054906101000a90046001600160a01b0316838281518110610a2a57610a2a612e23565b6001600160a01b039092166020928302919091019091015280610a4c81612ddc565b9150506109de565b505090565b6001600160a01b038116610a805760405163604b48b960e11b815260040160405180910390fd5b6001600160a01b038116301415610aaa576040516306b3e95d60e21b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fc606c9af1451cadeb333f6ff7b24a5540974f4e800bac274fa7fff9edc305cb19190a350565b600280541415610b1e57604051633ee5aeb560e01b815260040160405180910390fd5b60028081905550837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b031614158015610b7e57506001600160a01b038116600090815260086020526040902054155b15610ba75760405163569695af60e01b81526001600160a01b038216600482015260240161057b565b837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b031614158015610c0057506001600160a01b038116600090815260086020526040902054155b15610c295760405163569695af60e01b81526001600160a01b038216600482015260240161057b565b6000610c3e6001600160a01b038816866122a2565b3360009081526004602090815260408083206001600160a01b038c168452909152902054909150811115610c855760405163c0993c3760e01b815260040160405180910390fd5b856001600160a01b0316876001600160a01b03161415610cc357604051630e9f73ab60e21b81526001600160a01b038816600482015260240161057b565b600084610cd1576002610cd4565b60035b60ff1667ffffffffffffffff811115610cef57610cef612e39565b604051908082528060200260200182016040528015610d18578160200160208202803683370190505b5090508781600081518110610d2f57610d2f612e23565b60200260200101906001600160a01b031690816001600160a01b03168152505084610d5a5786610d7c565b7f00000000000000000000000000000000000000000000000000000000000000005b81600181518110610d8f57610d8f612e23565b60200260200101906001600160a01b031690816001600160a01b0316815250508415610dea578681600281518110610dc957610dc9612e23565b60200260200101906001600160a01b031690816001600160a01b0316815250505b60405163d06ca61f60e01b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063d06ca61f90610e3b908a908690600401612bd2565b60006040518083038186803b158015610e5357600080fd5b505afa158015610e67573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e8f919081019061287d565b90506000610ed58260018451610ea59190612d76565b81518110610eb557610eb5612e23565b60200260200101518a6001600160a01b03166122a290919063ffffffff16565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166338ed173989610f3a610f2a600354670de0b6b3a7640000610f239190612d76565b8690612489565b6001600160a01b038e1690612559565b8630426040518663ffffffff1660e01b8152600401610f5d959493929190612bf3565b600060405180830381600087803b158015610f7757600080fd5b505af1158015610f8b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610fb3919081019061287d565b91506000610fed83600081518110610fcd57610fcd612e23565b60200260200101518c6001600160a01b03166122a290919063ffffffff16565b9050600061101384600186516110039190612d76565b81518110610fcd57610fcd612e23565b90508160046000336001600160a01b03166001600160a01b0316815260200190815260200160002060008e6001600160a01b03166001600160a01b03168152602001908152602001600020600082825461106d9190612d76565b90915550503360009081526004602090815260408083206001600160a01b038f168452909152812080548392906110a5908490612c2f565b909155505060408051838152602081018390526001600160a01b03808e1692908f169133917fcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e46062910160405180910390a45050600160025550505050505050505050565b6000546001600160a01b03163314611133576040516305e7700560e51b815260040160405180910390fd5b6001600160a01b03811660009081526008602052604090205415611175576040516382cce5f360e01b81526001600160a01b038216600482015260240161057b565b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156111b057600080fd5b505afa1580156111c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e89190612acf565b905060ff8116611216576040516316d13e4960e21b81526001600160a01b038316600482015260240161057b565b601260ff8216111561124f576040516321b3807960e11b81526001600160a01b038316600482015260ff8216602482015260440161057b565b61125a6007836125f7565b156116045760405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152600019602483015283169063095ea7b390604401602060405180830381600087803b1580156112ca57600080fd5b505af11580156112de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113029190612942565b5060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b15801561135e57600080fd5b505afa158015611372573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061139691906129de565b60405163e6a4390560e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152858116602483015291925060009183169063e6a439059060440160206040518083038186803b15801561140557600080fd5b505afa158015611419573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061143d91906129de565b90506001600160a01b0381166114f3576040516364e329cb60e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152858116602483015283169063c9c6539690604401602060405180830381600087803b1580156114b857600080fd5b505af11580156114cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f091906129de565b90505b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152600019602483015282169063095ea7b390604401602060405180830381600087803b15801561155e57600080fd5b505af1158015611572573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115969190612942565b506001600160a01b03841660008181526006602052604090819020805460ff19166001179055517f55011b433ad455f23aa134ee4f1fcd2190a063cb514134436b32358ead356ada906115f99084906001600160a01b0391909116815260200190565b60405180910390a250505b5050565b6000546001600160a01b03163314611633576040516305e7700560e51b815260040160405180910390fd5b60008190507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316148061168f57506001600160a01b03811660009081526008602052604090205415155b156116b857604051631af19dff60e01b81526001600160a01b038316600482015260240161057b565b6040516370a0823160e01b8152306004820152611604907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b038516906370a082319060240160206040518083038186803b15801561171d57600080fd5b505afa158015611731573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117559190612a64565b6001600160a01b0385169190612667565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b1580156117c257600080fd5b505afa1580156117d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117fa91906129de565b60405163e6a4390560e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301528681166024830152919091169063e6a439059060440160206040518083038186803b15801561186557600080fd5b505afa158015611879573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061189d91906129de565b9050600080826001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156118db57600080fd5b505afa1580156118ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061191391906129fb565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff1691508160001480611945575080155b15611a0c57604051630787c49960e21b81526001600160a01b038781166004830152611a02917f000000000000000000000000000000000000000000000000000000000000000090911690631e1f12649060240160206040518083038186803b1580156119b157600080fd5b505afa1580156119c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119e99190612a64565b6119fc6001600160a01b038916886122a2565b90612489565b9350505050611b9c565b856001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031610611af057604051632b58577b60e21b81526004810186905260248101839052604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063ad615dec9060640160206040518083038186803b158015611ab357600080fd5b505afa158015611ac7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aeb9190612a64565b611b96565b604051632b58577b60e21b81526004810186905260248101829052604481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063ad615dec9060640160206040518083038186803b158015611b5e57600080fd5b505afa158015611b72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b969190612a64565b93505050505b92915050565b600280541415611bc557604051633ee5aeb560e01b815260040160405180910390fd5b600280556000611bde6001600160a01b038416836122a2565b3360009081526004602090815260408083206001600160a01b0388168452909152902054909150811115611c255760405163c0993c3760e01b815260040160405180910390fd5b6000611c318484611766565b90506000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e8e337007f0000000000000000000000000000000000000000000000000000000000000000888689611ca9600354670de0b6b3a7640000611ca29190612d76565b8a90612489565b611cdc611ccc600354670de0b6b3a7640000611cc59190612d76565b8d90612489565b6001600160a01b038f1690612559565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e089901b1681526001600160a01b03968716600482015295909416602486015260448501929092526064840152608483015260a48201523060c48201524260e482015261010401606060405180830381600087803b158015611d6257600080fd5b505af1158015611d76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d9a9190612aa1565b9093509150611db490506001600160a01b038716836122a2565b3360009081526004602090815260408083206001600160a01b038b16845290915281208054909190611de7908490612d76565b90915550503360009081526005602090815260408083206001600160a01b038a16845290915281208054839290611e1f908490612c2f565b90915550506040518481526001600160a01b0387169033907f0657e0c8fff72ae811b8683a3411c30ebb5098754ec5e814687711e97cbd6db29060200160405180910390a35050600160025550505050565b600280541415611e9457604051633ee5aeb560e01b815260040160405180910390fd5b600280553360009081526005602090815260408083206001600160a01b0386168452909152902054811115611edc5760405163dc93df4560e01b815260040160405180910390fd5b604051635d5155ef60e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152838116602483015260448201839052600060648301819052608483018190523060a48401524260c4840152917f00000000000000000000000000000000000000000000000000000000000000009091169063baa2abde9060e4016040805180830381600087803b158015611f8c57600080fd5b505af1158015611fa0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fc49190612a7d565b9150611fdb90506001600160a01b038416826122a2565b3360009081526004602090815260408083206001600160a01b03881684529091528120805490919061200e908490612c2f565b90915550503360009081526005602090815260408083206001600160a01b038716845290915281208054849290612046908490612d76565b90915550506040518281526001600160a01b0384169033907f8c6e1d3aa13e82e61da9350057ab35ded0bd548b8905b82dfa012876992b8ef5906020015b60405180910390a35050600160025550565b6002805414156120b957604051633ee5aeb560e01b815260040160405180910390fd5b600280819055507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316141561211e5760405163f099c8a560e01b81526001600160a01b038316600482015260240161057b565b60006121336001600160a01b038416836122a2565b3360009081526004602090815260408083206001600160a01b038816845290915290205490915081111561217a5760405163c0993c3760e01b815260040160405180910390fd5b3360009081526004602090815260408083206001600160a01b0387168452909152812080548392906121ad908490612d76565b909155506121c790506001600160a01b0384163384612667565b6040518181526001600160a01b0384169033907f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b639890602001612084565b6040516001600160a01b038085166024830152831660448201526064810182905261229c9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261269c565b50505050565b600080836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156122de57600080fd5b505afa1580156122f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123169190612acf565b612321906012612d8d565b61232c90600a612cac565b905080600114612348576123408184612d57565b915050611b9c565b509092915050565b6001600160a01b03811660009081526001830160205260408120548061237a576000915050611b9c565b6000612387600183612d76565b905060006001612395875490565b61239f9190612d76565b905080821461242b5760008660000182815481106123bf576123bf612e23565b60009182526020909120015487546001600160a01b03909116915081908890859081106123ee576123ee612e23565b600091825260208083209190910180546001600160a01b0319166001600160a01b0394851617905592909116815260018801909152604090208390555b855486908061243c5761243c612e0d565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b038716825260018881019091526040822091909155935050505092915050565b60008080600019848609848602925082811083820303915050670de0b6b3a764000081106124db5760405163072fa3c960e31b815260048101829052670de0b6b3a7640000602482015260440161057b565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff8111826125155780670de0b6b3a7640000850401945050505050611b9c565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600080836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561259557600080fd5b505afa1580156125a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125cd9190612acf565b6125d8906012612d8d565b6125e390600a612cac565b905080600114612348576123408184612c47565b6001600160a01b03811660009081526001830160205260408120541561261f57506000611b9c565b508154600180820184556000848152602080822090930180546001600160a01b0319166001600160a01b03959095169485179055845493815293810190915260409092205590565b6040516001600160a01b03831660248201526044810182905261269790849063a9059cbb60e01b90606401612238565b505050565b6040805180820190915260208082527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65649082015282906000906126eb906001600160a01b038416908590612726565b80519091501561229c57808060200190518101906127099190612942565b61229c57604051639b8d506160e01b815260040160405180910390fd5b6060833b6127525760405163dc5dd7fd60e01b81526001600160a01b038516600482015260240161057b565b600080856001600160a01b03168560405161276d9190612b36565b6000604051808303816000865af19150503d80600081146127aa576040519150601f19603f3d011682016040523d82523d6000602084013e6127af565b606091505b50915091506127bf8282866127cb565b925050505b9392505050565b606083156127da5750816127c4565b8251156127ea5782518060208501fd5b8160405162461bcd60e51b815260040161057b9190612b9f565b80516dffffffffffffffffffffffffffff8116811461282257600080fd5b919050565b60006020828403121561283957600080fd5b81356127c481612e4f565b6000806040838503121561285757600080fd5b823561286281612e4f565b9150602083013561287281612e4f565b809150509250929050565b6000602080838503121561289057600080fd5b825167ffffffffffffffff808211156128a857600080fd5b818501915085601f8301126128bc57600080fd5b8151818111156128ce576128ce612e39565b8060051b604051601f19603f830116810181811085821117156128f3576128f3612e39565b604052828152858101935084860182860187018a101561291257600080fd5b600095505b83861015612935578051855260019590950194938601938601612917565b5098975050505050505050565b60006020828403121561295457600080fd5b81516127c481612e64565b6000806000806080858703121561297557600080fd5b843561298081612e4f565b9350602085013561299081612e4f565b92506040850135915060608501356129a781612e64565b939692955090935050565b600080604083850312156129c557600080fd5b82356129d081612e4f565b946020939093013593505050565b6000602082840312156129f057600080fd5b81516127c481612e4f565b600080600060608486031215612a1057600080fd5b612a1984612804565b9250612a2760208501612804565b9150604084015163ffffffff81168114612a4057600080fd5b809150509250925092565b600060208284031215612a5d57600080fd5b5035919050565b600060208284031215612a7657600080fd5b5051919050565b60008060408385031215612a9057600080fd5b505080516020909101519092909150565b600080600060608486031215612ab657600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215612ae157600080fd5b815160ff811681146127c457600080fd5b600081518084526020808501945080840160005b83811015612b2b5781516001600160a01b031687529582019590820190600101612b06565b509495945050505050565b60008251612b48818460208701612db0565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b81811015612b935783516001600160a01b031683529284019291840191600101612b6e565b50909695505050505050565b6020815260008251806020840152612bbe816040850160208701612db0565b601f01601f19169190910160400192915050565b828152604060208201526000612beb6040830184612af2565b949350505050565b85815284602082015260a060408201526000612c1260a0830186612af2565b6001600160a01b0394909416606083015250608001529392505050565b60008219821115612c4257612c42612df7565b500190565b600082612c6457634e487b7160e01b600052601260045260246000fd5b500490565b600181815b80851115612ca4578160001904821115612c8a57612c8a612df7565b80851615612c9757918102915b93841c9390800290612c6e565b509250929050565b60006127c460ff841683600082612cc557506001611b9c565b81612cd257506000611b9c565b8160018114612ce85760028114612cf257612d0e565b6001915050611b9c565b60ff841115612d0357612d03612df7565b50506001821b611b9c565b5060208310610133831016604e8410600b8410161715612d31575081810a611b9c565b612d3b8383612c69565b8060001904821115612d4f57612d4f612df7565b029392505050565b6000816000190483118215151615612d7157612d71612df7565b500290565b600082821015612d8857612d88612df7565b500390565b600060ff821660ff841680821015612da757612da7612df7565b90039392505050565b60005b83811015612dcb578181015183820152602001612db3565b8381111561229c5750506000910152565b6000600019821415612df057612df0612df7565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461098d57600080fd5b801515811461098d57600080fdfea164736f6c6343000807000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101985760003560e01c8063863a03e0116100e3578063c14edd791161008c578063e7f3028c11610066578063e7f3028c146103d2578063e9cbd822146103f9578063f3fef3a31461042057600080fd5b8063c14edd7914610383578063d03153aa146103b6578063e3056a34146103bf57600080fd5b8063b2217281116100bd578063b221728114610332578063b9b8c2461461035d578063bb5043171461037057600080fd5b8063863a03e0146102d35780638f601f66146102e65780638f79306e1461031f57600080fd5b806348be771911610145578063631aa9e21161011f578063631aa9e21461029a5780637e83f7d7146102ad57806385881e2a146102c057600080fd5b806348be77191461024b578063570ca7351461025e5780635e6fdf431461028557600080fd5b8063238efcbc11610176578063238efcbc146102095780632630c12f1461021157806347e7ef241461023857600080fd5b80630c340a241461019d578063117da1ee146101cd5780631694505e146101e2575b600080fd5b6000546101b0906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101e06101db366004612a4b565b610433565b005b6101b07f000000000000000000000000000000000000000000000000000000000000000081565b6101e061049f565b6101b07f000000000000000000000000000000000000000000000000000000000000000081565b6101e06102463660046129b2565b610515565b6101e0610259366004612827565b610636565b6101b07f000000000000000000000000000000000000000000000000000000000000000081565b61028d610990565b6040516101c49190612b52565b6101e06102a8366004612827565b610a59565b6101e06102bb36600461295f565b610afb565b6101e06102ce366004612827565b611108565b6101e06102e1366004612827565b611608565b6103116102f4366004612844565b600460209081526000928352604080842090915290825290205481565b6040519081526020016101c4565b61031161032d3660046129b2565b611766565b610311610340366004612844565b600560209081526000928352604080842090915290825290205481565b6101e061036b3660046129b2565b611ba2565b6101e061037e3660046129b2565b611e71565b6103a6610391366004612827565b60066020526000908152604090205460ff1681565b60405190151581526020016101c4565b61031160035481565b6001546101b0906001600160a01b031681565b6101b07f000000000000000000000000000000000000000000000000000000000000000081565b6101b07f000000000000000000000000000000000000000000000000000000000000000081565b6101e061042e3660046129b2565b612096565b6000546001600160a01b0316331461045e576040516305e7700560e51b815260040160405180910390fd5b60035460408051918252602082018390527fddd31550b26e9ef8ade466958be83ff8a014d9b4f36d546b61a6847a45306575910160405180910390a1600355565b6001546001600160a01b031633146104ca5760405163aec80d4b60e01b815260040160405180910390fd5b600154600080546001600160a01b0319166001600160a01b03909216918217815560405182917f564590b81987d147246f63910a8e1ee4eb09c4d64cc75ee975a8ffedfcc2210e91a3565b60028054141561053857604051633ee5aeb560e01b815260040160405180910390fd5b600280556001600160a01b03821660009081526008602052604090205482906105845760405163497e1e0360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b6105996001600160a01b038416333085612204565b60006105ae6001600160a01b038516846122a2565b3360009081526004602090815260408083206001600160a01b03891684529091528120805492935083929091906105e6908490612c2f565b90915550506040518181526001600160a01b0385169033907f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f629060200160405180910390a3505060016002555050565b6000546001600160a01b03163314610661576040516305e7700560e51b815260040160405180910390fd5b6001600160a01b0381166000908152600860205260409020546106a25760405163635c3e1f60e11b81526001600160a01b038216600482015260240161057b565b6106ad600782612350565b1561098d5760405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526000602483015282169063095ea7b390604401602060405180830381600087803b15801561071c57600080fd5b505af1158015610730573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107549190612942565b5060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b1580156107b057600080fd5b505afa1580156107c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e891906129de565b60405163e6a4390560e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152848116602483015291925060009183169063e6a439059060440160206040518083038186803b15801561085757600080fd5b505afa15801561086b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088f91906129de565b90506001600160a01b038116156109445760405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526000602483015282169063095ea7b390604401602060405180830381600087803b15801561090a57600080fd5b505af115801561091e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109429190612942565b505b6001600160a01b038316600081815260066020526040808220805460ff19169055517fbd6c0ac05a911841e71daa23bb8022779f3957fad4fa3546eb22a1782c747c839190a250505b50565b6007546060908067ffffffffffffffff8111156109af576109af612e39565b6040519080825280602002602001820160405280156109d8578160200160208202803683370190505b50915060005b81811015610a545760078054829081106109fa576109fa612e23565b9060005260206000200160009054906101000a90046001600160a01b0316838281518110610a2a57610a2a612e23565b6001600160a01b039092166020928302919091019091015280610a4c81612ddc565b9150506109de565b505090565b6001600160a01b038116610a805760405163604b48b960e11b815260040160405180910390fd5b6001600160a01b038116301415610aaa576040516306b3e95d60e21b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fc606c9af1451cadeb333f6ff7b24a5540974f4e800bac274fa7fff9edc305cb19190a350565b600280541415610b1e57604051633ee5aeb560e01b815260040160405180910390fd5b60028081905550837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b031614158015610b7e57506001600160a01b038116600090815260086020526040902054155b15610ba75760405163569695af60e01b81526001600160a01b038216600482015260240161057b565b837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b031614158015610c0057506001600160a01b038116600090815260086020526040902054155b15610c295760405163569695af60e01b81526001600160a01b038216600482015260240161057b565b6000610c3e6001600160a01b038816866122a2565b3360009081526004602090815260408083206001600160a01b038c168452909152902054909150811115610c855760405163c0993c3760e01b815260040160405180910390fd5b856001600160a01b0316876001600160a01b03161415610cc357604051630e9f73ab60e21b81526001600160a01b038816600482015260240161057b565b600084610cd1576002610cd4565b60035b60ff1667ffffffffffffffff811115610cef57610cef612e39565b604051908082528060200260200182016040528015610d18578160200160208202803683370190505b5090508781600081518110610d2f57610d2f612e23565b60200260200101906001600160a01b031690816001600160a01b03168152505084610d5a5786610d7c565b7f00000000000000000000000000000000000000000000000000000000000000005b81600181518110610d8f57610d8f612e23565b60200260200101906001600160a01b031690816001600160a01b0316815250508415610dea578681600281518110610dc957610dc9612e23565b60200260200101906001600160a01b031690816001600160a01b0316815250505b60405163d06ca61f60e01b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063d06ca61f90610e3b908a908690600401612bd2565b60006040518083038186803b158015610e5357600080fd5b505afa158015610e67573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e8f919081019061287d565b90506000610ed58260018451610ea59190612d76565b81518110610eb557610eb5612e23565b60200260200101518a6001600160a01b03166122a290919063ffffffff16565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166338ed173989610f3a610f2a600354670de0b6b3a7640000610f239190612d76565b8690612489565b6001600160a01b038e1690612559565b8630426040518663ffffffff1660e01b8152600401610f5d959493929190612bf3565b600060405180830381600087803b158015610f7757600080fd5b505af1158015610f8b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610fb3919081019061287d565b91506000610fed83600081518110610fcd57610fcd612e23565b60200260200101518c6001600160a01b03166122a290919063ffffffff16565b9050600061101384600186516110039190612d76565b81518110610fcd57610fcd612e23565b90508160046000336001600160a01b03166001600160a01b0316815260200190815260200160002060008e6001600160a01b03166001600160a01b03168152602001908152602001600020600082825461106d9190612d76565b90915550503360009081526004602090815260408083206001600160a01b038f168452909152812080548392906110a5908490612c2f565b909155505060408051838152602081018390526001600160a01b03808e1692908f169133917fcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e46062910160405180910390a45050600160025550505050505050505050565b6000546001600160a01b03163314611133576040516305e7700560e51b815260040160405180910390fd5b6001600160a01b03811660009081526008602052604090205415611175576040516382cce5f360e01b81526001600160a01b038216600482015260240161057b565b6000816001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156111b057600080fd5b505afa1580156111c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e89190612acf565b905060ff8116611216576040516316d13e4960e21b81526001600160a01b038316600482015260240161057b565b601260ff8216111561124f576040516321b3807960e11b81526001600160a01b038316600482015260ff8216602482015260440161057b565b61125a6007836125f7565b156116045760405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152600019602483015283169063095ea7b390604401602060405180830381600087803b1580156112ca57600080fd5b505af11580156112de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113029190612942565b5060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b15801561135e57600080fd5b505afa158015611372573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061139691906129de565b60405163e6a4390560e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152858116602483015291925060009183169063e6a439059060440160206040518083038186803b15801561140557600080fd5b505afa158015611419573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061143d91906129de565b90506001600160a01b0381166114f3576040516364e329cb60e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152858116602483015283169063c9c6539690604401602060405180830381600087803b1580156114b857600080fd5b505af11580156114cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f091906129de565b90505b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152600019602483015282169063095ea7b390604401602060405180830381600087803b15801561155e57600080fd5b505af1158015611572573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115969190612942565b506001600160a01b03841660008181526006602052604090819020805460ff19166001179055517f55011b433ad455f23aa134ee4f1fcd2190a063cb514134436b32358ead356ada906115f99084906001600160a01b0391909116815260200190565b60405180910390a250505b5050565b6000546001600160a01b03163314611633576040516305e7700560e51b815260040160405180910390fd5b60008190507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316148061168f57506001600160a01b03811660009081526008602052604090205415155b156116b857604051631af19dff60e01b81526001600160a01b038316600482015260240161057b565b6040516370a0823160e01b8152306004820152611604907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b038516906370a082319060240160206040518083038186803b15801561171d57600080fd5b505afa158015611731573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117559190612a64565b6001600160a01b0385169190612667565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b1580156117c257600080fd5b505afa1580156117d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117fa91906129de565b60405163e6a4390560e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301528681166024830152919091169063e6a439059060440160206040518083038186803b15801561186557600080fd5b505afa158015611879573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061189d91906129de565b9050600080826001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156118db57600080fd5b505afa1580156118ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061191391906129fb565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff1691508160001480611945575080155b15611a0c57604051630787c49960e21b81526001600160a01b038781166004830152611a02917f000000000000000000000000000000000000000000000000000000000000000090911690631e1f12649060240160206040518083038186803b1580156119b157600080fd5b505afa1580156119c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119e99190612a64565b6119fc6001600160a01b038916886122a2565b90612489565b9350505050611b9c565b856001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031610611af057604051632b58577b60e21b81526004810186905260248101839052604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063ad615dec9060640160206040518083038186803b158015611ab357600080fd5b505afa158015611ac7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aeb9190612a64565b611b96565b604051632b58577b60e21b81526004810186905260248101829052604481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063ad615dec9060640160206040518083038186803b158015611b5e57600080fd5b505afa158015611b72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b969190612a64565b93505050505b92915050565b600280541415611bc557604051633ee5aeb560e01b815260040160405180910390fd5b600280556000611bde6001600160a01b038416836122a2565b3360009081526004602090815260408083206001600160a01b0388168452909152902054909150811115611c255760405163c0993c3760e01b815260040160405180910390fd5b6000611c318484611766565b90506000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e8e337007f0000000000000000000000000000000000000000000000000000000000000000888689611ca9600354670de0b6b3a7640000611ca29190612d76565b8a90612489565b611cdc611ccc600354670de0b6b3a7640000611cc59190612d76565b8d90612489565b6001600160a01b038f1690612559565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e089901b1681526001600160a01b03968716600482015295909416602486015260448501929092526064840152608483015260a48201523060c48201524260e482015261010401606060405180830381600087803b158015611d6257600080fd5b505af1158015611d76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d9a9190612aa1565b9093509150611db490506001600160a01b038716836122a2565b3360009081526004602090815260408083206001600160a01b038b16845290915281208054909190611de7908490612d76565b90915550503360009081526005602090815260408083206001600160a01b038a16845290915281208054839290611e1f908490612c2f565b90915550506040518481526001600160a01b0387169033907f0657e0c8fff72ae811b8683a3411c30ebb5098754ec5e814687711e97cbd6db29060200160405180910390a35050600160025550505050565b600280541415611e9457604051633ee5aeb560e01b815260040160405180910390fd5b600280553360009081526005602090815260408083206001600160a01b0386168452909152902054811115611edc5760405163dc93df4560e01b815260040160405180910390fd5b604051635d5155ef60e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152838116602483015260448201839052600060648301819052608483018190523060a48401524260c4840152917f00000000000000000000000000000000000000000000000000000000000000009091169063baa2abde9060e4016040805180830381600087803b158015611f8c57600080fd5b505af1158015611fa0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fc49190612a7d565b9150611fdb90506001600160a01b038416826122a2565b3360009081526004602090815260408083206001600160a01b03881684529091528120805490919061200e908490612c2f565b90915550503360009081526005602090815260408083206001600160a01b038716845290915281208054849290612046908490612d76565b90915550506040518281526001600160a01b0384169033907f8c6e1d3aa13e82e61da9350057ab35ded0bd548b8905b82dfa012876992b8ef5906020015b60405180910390a35050600160025550565b6002805414156120b957604051633ee5aeb560e01b815260040160405180910390fd5b600280819055507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316141561211e5760405163f099c8a560e01b81526001600160a01b038316600482015260240161057b565b60006121336001600160a01b038416836122a2565b3360009081526004602090815260408083206001600160a01b038816845290915290205490915081111561217a5760405163c0993c3760e01b815260040160405180910390fd5b3360009081526004602090815260408083206001600160a01b0387168452909152812080548392906121ad908490612d76565b909155506121c790506001600160a01b0384163384612667565b6040518181526001600160a01b0384169033907f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b639890602001612084565b6040516001600160a01b038085166024830152831660448201526064810182905261229c9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261269c565b50505050565b600080836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156122de57600080fd5b505afa1580156122f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123169190612acf565b612321906012612d8d565b61232c90600a612cac565b905080600114612348576123408184612d57565b915050611b9c565b509092915050565b6001600160a01b03811660009081526001830160205260408120548061237a576000915050611b9c565b6000612387600183612d76565b905060006001612395875490565b61239f9190612d76565b905080821461242b5760008660000182815481106123bf576123bf612e23565b60009182526020909120015487546001600160a01b03909116915081908890859081106123ee576123ee612e23565b600091825260208083209190910180546001600160a01b0319166001600160a01b0394851617905592909116815260018801909152604090208390555b855486908061243c5761243c612e0d565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b038716825260018881019091526040822091909155935050505092915050565b60008080600019848609848602925082811083820303915050670de0b6b3a764000081106124db5760405163072fa3c960e31b815260048101829052670de0b6b3a7640000602482015260440161057b565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff8111826125155780670de0b6b3a7640000850401945050505050611b9c565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600080836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561259557600080fd5b505afa1580156125a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125cd9190612acf565b6125d8906012612d8d565b6125e390600a612cac565b905080600114612348576123408184612c47565b6001600160a01b03811660009081526001830160205260408120541561261f57506000611b9c565b508154600180820184556000848152602080822090930180546001600160a01b0319166001600160a01b03959095169485179055845493815293810190915260409092205590565b6040516001600160a01b03831660248201526044810182905261269790849063a9059cbb60e01b90606401612238565b505050565b6040805180820190915260208082527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65649082015282906000906126eb906001600160a01b038416908590612726565b80519091501561229c57808060200190518101906127099190612942565b61229c57604051639b8d506160e01b815260040160405180910390fd5b6060833b6127525760405163dc5dd7fd60e01b81526001600160a01b038516600482015260240161057b565b600080856001600160a01b03168560405161276d9190612b36565b6000604051808303816000865af19150503d80600081146127aa576040519150601f19603f3d011682016040523d82523d6000602084013e6127af565b606091505b50915091506127bf8282866127cb565b925050505b9392505050565b606083156127da5750816127c4565b8251156127ea5782518060208501fd5b8160405162461bcd60e51b815260040161057b9190612b9f565b80516dffffffffffffffffffffffffffff8116811461282257600080fd5b919050565b60006020828403121561283957600080fd5b81356127c481612e4f565b6000806040838503121561285757600080fd5b823561286281612e4f565b9150602083013561287281612e4f565b809150509250929050565b6000602080838503121561289057600080fd5b825167ffffffffffffffff808211156128a857600080fd5b818501915085601f8301126128bc57600080fd5b8151818111156128ce576128ce612e39565b8060051b604051601f19603f830116810181811085821117156128f3576128f3612e39565b604052828152858101935084860182860187018a101561291257600080fd5b600095505b83861015612935578051855260019590950194938601938601612917565b5098975050505050505050565b60006020828403121561295457600080fd5b81516127c481612e64565b6000806000806080858703121561297557600080fd5b843561298081612e4f565b9350602085013561299081612e4f565b92506040850135915060608501356129a781612e64565b939692955090935050565b600080604083850312156129c557600080fd5b82356129d081612e4f565b946020939093013593505050565b6000602082840312156129f057600080fd5b81516127c481612e4f565b600080600060608486031215612a1057600080fd5b612a1984612804565b9250612a2760208501612804565b9150604084015163ffffffff81168114612a4057600080fd5b809150509250925092565b600060208284031215612a5d57600080fd5b5035919050565b600060208284031215612a7657600080fd5b5051919050565b60008060408385031215612a9057600080fd5b505080516020909101519092909150565b600080600060608486031215612ab657600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215612ae157600080fd5b815160ff811681146127c457600080fd5b600081518084526020808501945080840160005b83811015612b2b5781516001600160a01b031687529582019590820190600101612b06565b509495945050505050565b60008251612b48818460208701612db0565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b81811015612b935783516001600160a01b031683529284019291840191600101612b6e565b50909695505050505050565b6020815260008251806020840152612bbe816040850160208701612db0565b601f01601f19169190910160400192915050565b828152604060208201526000612beb6040830184612af2565b949350505050565b85815284602082015260a060408201526000612c1260a0830186612af2565b6001600160a01b0394909416606083015250608001529392505050565b60008219821115612c4257612c42612df7565b500190565b600082612c6457634e487b7160e01b600052601260045260246000fd5b500490565b600181815b80851115612ca4578160001904821115612c8a57612c8a612df7565b80851615612c9757918102915b93841c9390800290612c6e565b509250929050565b60006127c460ff841683600082612cc557506001611b9c565b81612cd257506000611b9c565b8160018114612ce85760028114612cf257612d0e565b6001915050611b9c565b60ff841115612d0357612d03612df7565b50506001821b611b9c565b5060208310610133831016604e8410600b8410161715612d31575081810a611b9c565b612d3b8383612c69565b8060001904821115612d4f57612d4f612df7565b029392505050565b6000816000190483118215151615612d7157612d71612df7565b500290565b600082821015612d8857612d88612df7565b500390565b600060ff821660ff841680821015612da757612da7612df7565b90039392505050565b60005b83811015612dcb578181015183820152602001612db3565b8381111561229c5750506000910152565b6000600019821415612df057612df0612df7565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461098d57600080fd5b801515811461098d57600080fdfea164736f6c6343000807000a",
  "libraries": {
    "AmountNormalization": "0xD920F6E5211c4764De2777678039C8EDc5B5FD7C",
    "EnumerableAddressSet": "0x028e981f8A68b2CA37EA04553eE5B7632b8ab931",
    "FixedPointMath": "0xdAc45f69cde02c3c6A185cb0f7Ac778b88c82bC6",
    "SafeERC20": "0xD0f43313872F58a4342E58750CA368EE6722413B"
  },
  "devdoc": {
    "errors": {
      "ExchangeFundDepositableTokenAlreadyListed(address)": [
        {
          "details": "Thrown when trying to list depositable token that's already listed.",
          "params": {
            "token": "The address of the token contract."
          }
        }
      ],
      "ExchangeFundDepositableTokenNotListed(address)": [
        {
          "details": "Thrown when trying to unlist depositable token that's not listed.",
          "params": {
            "token": "The address of the token contract."
          }
        }
      ],
      "ExchangeFundDepositableTokenTooLargeDecimals(address,uint8)": [
        {
          "details": "Thrown when trying to list depositable token that has too large decimals.",
          "params": {
            "token": "The address of the token contract."
          }
        }
      ],
      "ExchangeFundDepositableTokenZeroDecimals(address)": [
        {
          "details": "Thrown when trying to list depositable token that has zero decimals.",
          "params": {
            "token": "The address of the token contract."
          }
        }
      ],
      "ExchangeFundTokenNotAllowedToBeDeposited(address)": [
        {
          "details": "Thrown when interacting with a token that's not allowed to be deposited.",
          "params": {
            "token": "The address of the token contract."
          }
        }
      ],
      "ExchangeFundTokenNotAllowedToBeSalvaged(address)": [
        {
          "details": "Thrown when trying to salvage one of depositable tokens or stablecoin.",
          "params": {
            "token": "The address of the token contract."
          }
        }
      ],
      "ExchangeFundTokenNotAllowedToBeSwapped(address)": [
        {
          "details": "Thrown when trying to swap token that's not allowed to be swapped.",
          "params": {
            "token": "The address of the token contract."
          }
        }
      ],
      "ExchangeFundTokenNotAllowedToBeWithdrawn(address)": [
        {
          "details": "Thrown when interacting with a token that's not allowed to be withdrawn.",
          "params": {
            "token": "The address of the token contract."
          }
        }
      ]
    },
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3431,
        "contract": "contracts/ExchangeFund.sol:ExchangeFund",
        "label": "governor",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 3433,
        "contract": "contracts/ExchangeFund.sol:ExchangeFund",
        "label": "pendingGovernor",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 4963,
        "contract": "contracts/ExchangeFund.sol:ExchangeFund",
        "label": "status",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 2350,
        "contract": "contracts/ExchangeFund.sol:ExchangeFund",
        "label": "slippageTolerance",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 2357,
        "contract": "contracts/ExchangeFund.sol:ExchangeFund",
        "label": "deposits",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_mapping(t_contract(IERC20)3690,t_uint256))"
      },
      {
        "astId": 2364,
        "contract": "contracts/ExchangeFund.sol:ExchangeFund",
        "label": "liquidity",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_contract(IERC20)3690,t_uint256))"
      },
      {
        "astId": 2369,
        "contract": "contracts/ExchangeFund.sol:ExchangeFund",
        "label": "depositableTokens",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_contract(IERC20)3690,t_bool)"
      },
      {
        "astId": 2372,
        "contract": "contracts/ExchangeFund.sol:ExchangeFund",
        "label": "depositableTokensSet",
        "offset": 0,
        "slot": "7",
        "type": "t_struct(Set)4372_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)3690": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_contract(IERC20)3690,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(contract IERC20 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_contract(IERC20)3690,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_contract(IERC20)3690,t_bool)": {
        "encoding": "mapping",
        "key": "t_contract(IERC20)3690",
        "label": "mapping(contract IERC20 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_contract(IERC20)3690,t_uint256)": {
        "encoding": "mapping",
        "key": "t_contract(IERC20)3690",
        "label": "mapping(contract IERC20 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(Set)4372_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableAddressSet.Set",
        "members": [
          {
            "astId": 4367,
            "contract": "contracts/ExchangeFund.sol:ExchangeFund",
            "label": "elements",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 4371,
            "contract": "contracts/ExchangeFund.sol:ExchangeFund",
            "label": "indexes",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_uint256)"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
