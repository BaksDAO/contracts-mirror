{
  "address": "0x0A1f20e41Bb02A15CAD97462B50A735E68472999",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IMintableAndBurnableERC20",
          "name": "_stablecoin",
          "type": "address"
        },
        {
          "internalType": "contract IPriceOracle",
          "name": "_priceOracle",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_liquidator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_exchangeFund",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_investmentFund",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "CallToNonContract",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CoinsSafeBorrowZeroAmount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "CoinsSafeCollateralTokenAlreadyListed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "CoinsSafeCollateralTokenNotListed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "name": "CoinsSafeCollateralTokenTooLargeDecimals",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "CoinsSafeCollateralTokenZeroDecimals",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CoinsSafeDepositZeroAmount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "CoinsSafeInactiveLoan",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialLoanToValueRatio",
          "type": "uint256"
        }
      ],
      "name": "CoinsSafeInitialLoanToValueRatioTooHigh",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "CoinsSafeLoanIsSubjectToLiquidation",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "CoinsSafeLoanNotSubjectToLiquidation",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CoinsSafeNoNeedToRebalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stabilizationFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "exchangeFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "investmentFee",
          "type": "uint256"
        }
      ],
      "name": "CoinsSafePlatformFeesDontSumUpToOne",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CoinsSafeRepayZeroAmount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shortage",
          "type": "uint256"
        }
      ],
      "name": "CoinsSafeStabilizationFundOutOfFunds",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "CoinsSafeTokenNotAllowedAsCollateral",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "CoinsSafeTokenNotAllowedToBeSalvaged",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "prod1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "denominator",
          "type": "uint256"
        }
      ],
      "name": "FixedPointMathMulDivOverflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GovernedCantGoverItself",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GovernedGovernorZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GovernedOnlyGovernorAllowedToCall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "GovernedOnlyPendingGovernorAllowedToCall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SafeERC20NoReturnData",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "principalAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "initialLoanToValueRatio",
          "type": "uint256"
        }
      ],
      "name": "Borrow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "CollateralTokenListed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "CollateralTokenUnlisted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "governor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newGovernor",
          "type": "address"
        }
      ],
      "name": "GovernanceTransited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "initialLoanToValueRatio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newInitialLoanToValueRatio",
          "type": "uint256"
        }
      ],
      "name": "InitialLoanToValueRatioUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Liquidated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liqudationLoanToValueRatio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newLiquidationLoanToValueRatio",
          "type": "uint256"
        }
      ],
      "name": "LiquidationLoanToValueRatioUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "marginCallLoanToValueRatio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newMarginCallLoanToValueRatio",
          "type": "uint256"
        }
      ],
      "name": "MarginCallLoanToValueRatioUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "governor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newGovernor",
          "type": "address"
        }
      ],
      "name": "PendingGovernanceTransition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stabilizationFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newStabilizationFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "exchangeFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newExchangeFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "investmentFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newInvestmentFee",
          "type": "uint256"
        }
      ],
      "name": "PlatformFeesUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "delta",
          "type": "int256"
        }
      ],
      "name": "Rebalance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rebalancingThreshold",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRebalancingThreshold",
          "type": "uint256"
        }
      ],
      "name": "RebalancingThresholdUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Repaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "principalAmount",
          "type": "uint256"
        }
      ],
      "name": "Repay",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stabilityFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newStabilityFee",
          "type": "uint256"
        }
      ],
      "name": "StabilityFeeUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "borrow",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "internalType": "contract IPriceOracle",
              "name": "priceOracle",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "stabilityFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stabilizationFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "exchangeFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "investmentFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "principalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastDepositAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastRepaymentAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct Loan.Data",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "calculateLoanByCollateralAmount",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "internalType": "contract IPriceOracle",
              "name": "priceOracle",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "stabilityFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stabilizationFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "exchangeFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "investmentFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "principalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastDepositAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastRepaymentAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct Loan.Data",
          "name": "loan",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "principalAmount",
          "type": "uint256"
        }
      ],
      "name": "calculateLoanByPrincipalAmount",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "internalType": "contract IPriceOracle",
              "name": "priceOracle",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "stabilityFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stabilizationFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "exchangeFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "investmentFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "principalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastDepositAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastRepaymentAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct Loan.Data",
          "name": "loan",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "checkHealth",
      "outputs": [
        {
          "internalType": "enum CoinsSafe.Health",
          "name": "health",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "name": "collateralTokens",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "internalType": "contract IPriceOracle",
          "name": "priceOracle",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "stabilityFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stabilizationFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "exchangeFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "investmentFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initialLoanToValueRatio",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "marginCallLoanToValueRatio",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidationLoanToValueRatio",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exchangeFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "exchangeFund",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllowedCollateralTokens",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "internalType": "contract IPriceOracle",
              "name": "priceOracle",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "stabilityFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stabilizationFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "exchangeFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "investmentFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialLoanToValueRatio",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "marginCallLoanToValueRatio",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "liquidationLoanToValueRatio",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct CollateralToken.Data[]",
          "name": "allowedCollateralTokens",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "getLoanToValueRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "loanToValueRatio",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        }
      ],
      "name": "getLoans",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "collateralToken",
              "type": "address"
            },
            {
              "internalType": "contract IPriceOracle",
              "name": "priceOracle",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "stabilityFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stabilizationFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "exchangeFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "investmentFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "principalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastDepositAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastRepaymentAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct Loan.Data[]",
          "name": "_loans",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalValueLocked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalValueLocked",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "investmentFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "investmentFund",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "liquidate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidationLoanToValueRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialLoanToValueRatio",
          "type": "uint256"
        }
      ],
      "name": "listCollateralToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "loanIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "loans",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "internalType": "contract IPriceOracle",
          "name": "priceOracle",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "stabilityFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stabilizationFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "exchangeFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "investmentFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "principalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastDepositAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastRepaymentAt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marginCallLoanToValueRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingGovernor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceOracle",
      "outputs": [
        {
          "internalType": "contract IPriceOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rebalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rebalancingThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "repay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "salvage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "newInitialLoanToValueRatio",
          "type": "uint256"
        }
      ],
      "name": "setInitialLoanToValueRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newLiquidationLoanToValueRatio",
          "type": "uint256"
        }
      ],
      "name": "setLiquidationLoanToValueRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMarginCallLoanToValueRatio",
          "type": "uint256"
        }
      ],
      "name": "setMarginCallLoanToValueRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newStabilizationFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newExchangeFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newInvestmentFee",
          "type": "uint256"
        }
      ],
      "name": "setPlatformFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newRebalancingThreshold",
          "type": "uint256"
        }
      ],
      "name": "setRebalancingThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newStabilityFee",
          "type": "uint256"
        }
      ],
      "name": "setStabilityFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stabilityFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stabilizationFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stablecoin",
      "outputs": [
        {
          "internalType": "contract IMintableAndBurnableERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newGovernor",
          "type": "address"
        }
      ],
      "name": "transitGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "unlistCollateralToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x76499324c32eb7f20067b0e64ba3d7a641627fa7390ce5d698b0ce117eb558e1",
  "receipt": {
    "to": null,
    "from": "0x21309DA9AD64eA82431758B27cbD63E5d53A556c",
    "contractAddress": "0x0A1f20e41Bb02A15CAD97462B50A735E68472999",
    "transactionIndex": 62,
    "gasUsed": "3608456",
    "logsBloom": "0x
    "blockHash": "0x7010d670e26bdb08b11bff1f0162077cb1faf919c5d02180d32216447e1a7f61",
    "transactionHash": "0x76499324c32eb7f20067b0e64ba3d7a641627fa7390ce5d698b0ce117eb558e1",
    "logs": [
      {
        "transactionIndex": 62,
        "blockNumber": 9227297,
        "transactionHash": "0x76499324c32eb7f20067b0e64ba3d7a641627fa7390ce5d698b0ce117eb558e1",
        "address": "0x0A1f20e41Bb02A15CAD97462B50A735E68472999",
        "topics": [
          "0xc606c9af1451cadeb333f6ff7b24a5540974f4e800bac274fa7fff9edc305cb1",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000021309da9ad64ea82431758b27cbd63e5d53a556c"
        ],
        "data": "0x",
        "logIndex": 53,
        "blockHash": "0x7010d670e26bdb08b11bff1f0162077cb1faf919c5d02180d32216447e1a7f61"
      },
      {
        "transactionIndex": 62,
        "blockNumber": 9227297,
        "transactionHash": "0x76499324c32eb7f20067b0e64ba3d7a641627fa7390ce5d698b0ce117eb558e1",
        "address": "0x0A1f20e41Bb02A15CAD97462B50A735E68472999",
        "topics": [
          "0x564590b81987d147246f63910a8e1ee4eb09c4d64cc75ee975a8ffedfcc2210e",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000021309da9ad64ea82431758b27cbd63e5d53a556c"
        ],
        "data": "0x",
        "logIndex": 54,
        "blockHash": "0x7010d670e26bdb08b11bff1f0162077cb1faf919c5d02180d32216447e1a7f61"
      }
    ],
    "blockNumber": 9227297,
    "cumulativeGasUsed": "23421256",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5478479544f14013714Af58eB50d2A27E849E4C9",
    "0x6b25356A930Ac5299B86E76012192A7b47C48F41",
    "0xb02E726015885207D534ea5EBB339e7F0cee61D7",
    "0xDD81C8c2791df0aF2D85aa4331964f4D65ACaE60",
    "0x077369a190C69F090B6549BDb6c858fd615C5311",
    "0x3FCe37328Fa373B1DDa44d99eB533f5Ba44E0529"
  ],
  "solcInputHash": "ee81eac0b6770a7f9008729207f6bf31",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IMintableAndBurnableERC20\",\"name\":\"_stablecoin\",\"type\":\"address\"},{\"internalType\":\"contract IPriceOracle\",\"name\":\"_priceOracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_liquidator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_exchangeFund\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_investmentFund\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"CallToNonContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CoinsSafeBorrowZeroAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"CoinsSafeCollateralTokenAlreadyListed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"CoinsSafeCollateralTokenNotListed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"CoinsSafeCollateralTokenTooLargeDecimals\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"CoinsSafeCollateralTokenZeroDecimals\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CoinsSafeDepositZeroAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"CoinsSafeInactiveLoan\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialLoanToValueRatio\",\"type\":\"uint256\"}],\"name\":\"CoinsSafeInitialLoanToValueRatioTooHigh\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"CoinsSafeLoanIsSubjectToLiquidation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"CoinsSafeLoanNotSubjectToLiquidation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CoinsSafeNoNeedToRebalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stabilizationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentFee\",\"type\":\"uint256\"}],\"name\":\"CoinsSafePlatformFeesDontSumUpToOne\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CoinsSafeRepayZeroAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shortage\",\"type\":\"uint256\"}],\"name\":\"CoinsSafeStabilizationFundOutOfFunds\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"CoinsSafeTokenNotAllowedAsCollateral\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"CoinsSafeTokenNotAllowedToBeSalvaged\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"prod1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"FixedPointMathMulDivOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GovernedCantGoverItself\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GovernedGovernorZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GovernedOnlyGovernorAllowedToCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GovernedOnlyPendingGovernorAllowedToCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeERC20NoReturnData\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"principalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"initialLoanToValueRatio\",\"type\":\"uint256\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"CollateralTokenListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"CollateralTokenUnlisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"GovernanceTransited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"initialLoanToValueRatio\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newInitialLoanToValueRatio\",\"type\":\"uint256\"}],\"name\":\"InitialLoanToValueRatioUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Liquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liqudationLoanToValueRatio\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newLiquidationLoanToValueRatio\",\"type\":\"uint256\"}],\"name\":\"LiquidationLoanToValueRatioUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"marginCallLoanToValueRatio\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMarginCallLoanToValueRatio\",\"type\":\"uint256\"}],\"name\":\"MarginCallLoanToValueRatioUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"PendingGovernanceTransition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stabilizationFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newStabilizationFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"exchangeFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newExchangeFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"investmentFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newInvestmentFee\",\"type\":\"uint256\"}],\"name\":\"PlatformFeesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"Rebalance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rebalancingThreshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRebalancingThreshold\",\"type\":\"uint256\"}],\"name\":\"RebalancingThresholdUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Repaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"principalAmount\",\"type\":\"uint256\"}],\"name\":\"Repay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stabilityFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newStabilityFee\",\"type\":\"uint256\"}],\"name\":\"StabilityFeeUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"borrow\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stabilityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stabilizationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastDepositAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRepaymentAt\",\"type\":\"uint256\"}],\"internalType\":\"struct Loan.Data\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"calculateLoanByCollateralAmount\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stabilityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stabilizationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastDepositAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRepaymentAt\",\"type\":\"uint256\"}],\"internalType\":\"struct Loan.Data\",\"name\":\"loan\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"principalAmount\",\"type\":\"uint256\"}],\"name\":\"calculateLoanByPrincipalAmount\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stabilityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stabilizationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastDepositAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRepaymentAt\",\"type\":\"uint256\"}],\"internalType\":\"struct Loan.Data\",\"name\":\"loan\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"checkHealth\",\"outputs\":[{\"internalType\":\"enum CoinsSafe.Health\",\"name\":\"health\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"collateralTokens\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stabilityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stabilizationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialLoanToValueRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"marginCallLoanToValueRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationLoanToValueRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllowedCollateralTokens\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stabilityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stabilizationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialLoanToValueRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"marginCallLoanToValueRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationLoanToValueRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct CollateralToken.Data[]\",\"name\":\"allowedCollateralTokens\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"getLoanToValueRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"loanToValueRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"getLoans\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stabilityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stabilizationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastDepositAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRepaymentAt\",\"type\":\"uint256\"}],\"internalType\":\"struct Loan.Data[]\",\"name\":\"_loans\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalValueLocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalValueLocked\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"investmentFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"investmentFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidationLoanToValueRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialLoanToValueRatio\",\"type\":\"uint256\"}],\"name\":\"listCollateralToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loanIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"contract IPriceOracle\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stabilityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stabilizationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exchangeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastDepositAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRepaymentAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marginCallLoanToValueRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingGovernor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceOracle\",\"outputs\":[{\"internalType\":\"contract IPriceOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalancingThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"salvage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newInitialLoanToValueRatio\",\"type\":\"uint256\"}],\"name\":\"setInitialLoanToValueRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newLiquidationLoanToValueRatio\",\"type\":\"uint256\"}],\"name\":\"setLiquidationLoanToValueRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMarginCallLoanToValueRatio\",\"type\":\"uint256\"}],\"name\":\"setMarginCallLoanToValueRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newStabilizationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newExchangeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newInvestmentFee\",\"type\":\"uint256\"}],\"name\":\"setPlatformFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newRebalancingThreshold\",\"type\":\"uint256\"}],\"name\":\"setRebalancingThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newStabilityFee\",\"type\":\"uint256\"}],\"name\":\"setStabilityFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stabilityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stabilizationFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stablecoin\",\"outputs\":[{\"internalType\":\"contract IMintableAndBurnableERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"transitGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"unlistCollateralToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Andrey Gulitsky\",\"errors\":{\"CoinsSafeBorrowZeroAmount()\":[{\"details\":\"Thrown when borrowing a zero amount of stablecoin.\"}],\"CoinsSafeCollateralTokenAlreadyListed(address)\":[{\"details\":\"Thrown when trying to list collateral token that's already listed.\",\"params\":{\"token\":\"The address of the collateral token contract.\"}}],\"CoinsSafeCollateralTokenNotListed(address)\":[{\"details\":\"Thrown when trying to unlist collateral token that's not listed.\",\"params\":{\"token\":\"The address of the collateral token contract.\"}}],\"CoinsSafeCollateralTokenTooLargeDecimals(address,uint8)\":[{\"details\":\"Thrown when trying to list collateral token that has too large decimals.\",\"params\":{\"token\":\"The address of the collateral token contract.\"}}],\"CoinsSafeCollateralTokenZeroDecimals(address)\":[{\"details\":\"Thrown when trying to list collateral token that has zero decimals.\",\"params\":{\"token\":\"The address of the collateral token contract.\"}}],\"CoinsSafeDepositZeroAmount()\":[{\"details\":\"Thrown when depositing a zero amount of collateral token.\"}],\"CoinsSafeInactiveLoan(uint256)\":[{\"details\":\"Thrown when trying to interact with inactive loan with `id` id.\",\"params\":{\"id\":\"The loan id.\"}}],\"CoinsSafeInitialLoanToValueRatioTooHigh(address,uint256)\":[{\"details\":\"Thrown when trying to set initial loan-to-value ratio that higher than margin call or liquidation ones.\",\"params\":{\"initialLoanToValueRatio\":\"The initial loan-to-value ratio that was tried to set.\",\"token\":\"The address of the collateral token contract.\"}}],\"CoinsSafeLoanIsSubjectToLiquidation(uint256)\":[{\"details\":\"Thrown when trying to interact with loan with `id` id that is subject to liquidation.\",\"params\":{\"id\":\"The loan id.\"}}],\"CoinsSafeLoanNotSubjectToLiquidation(uint256)\":[{\"details\":\"Thrown when trying to liquidate healthy loan with `id` id.\",\"params\":{\"id\":\"The loan id.\"}}],\"CoinsSafeNoNeedToRebalance()\":[{\"details\":\"Thrown when there's no need to rebalance the platform.\"}],\"CoinsSafePlatformFeesDontSumUpToOne(uint256,uint256,uint256)\":[{\"details\":\"Thrown when trying to set platform fees that don't sum up to one.\",\"params\":{\"exchangeFee\":\"The stabilization fee that was tried to set.\",\"investmentFee\":\"The stabilization fee that was tried to set.\",\"stabilizationFee\":\"The stabilization fee that was tried to set.\"}}],\"CoinsSafeRepayZeroAmount()\":[{\"details\":\"Thrown when repaying a zero amount of stablecoin.\"}],\"CoinsSafeStabilizationFundOutOfFunds(uint256)\":[{\"details\":\"Thrown when trying to rebalance the platform and there is a shortage of funds to burn.\",\"params\":{\"shortage\":\"Shoratge of funds to burn.\"}}],\"CoinsSafeTokenNotAllowedAsCollateral(address)\":[{\"details\":\"Thrown when interacting with a token that's not allowed as collateral.\",\"params\":{\"token\":\"The address of the collateral token contract.\"}}],\"CoinsSafeTokenNotAllowedToBeSalvaged(address)\":[{\"details\":\"Thrown when trying to salvage one of allowed collateral tokens or stablecoin.\",\"params\":{\"token\":\"The address of the token contract.\"}}]},\"kind\":\"dev\",\"methods\":{\"borrow(address,uint256)\":{\"details\":\"The caller must have allowed this contract to spend a sufficient amount of collateral tokens to cover initial loan-to-value ratio.\",\"params\":{\"amount\":\"The amount of stablecoin to borrow and issue.\",\"collateralToken\":\"The address of the collateral token contract.\"}},\"deposit(uint256,uint256)\":{\"details\":\"The caller must have allowed this contract to spend `amount` of collateral tokens.\",\"params\":{\"amount\":\"The amount of collateral token to deposit.\",\"loanId\":\"The loan id.\"}},\"repay(uint256,uint256)\":{\"params\":{\"amount\":\"The amount of stablecoin to repay.\",\"loanId\":\"The loan id.\"}}},\"title\":\"Core smart contract of CoinSafe platform\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"borrow(address,uint256)\":{\"notice\":\"Increases loan's principal on `collateralToken` collateral token and mints `amount` of stablecoin.\"},\"deposit(uint256,uint256)\":{\"notice\":\"Deposits `amount` of collateral token to loan with `id` id.\"},\"repay(uint256,uint256)\":{\"notice\":\"Decreases principal of loan with `id` id by `amount` of stablecoin.\"}},\"notice\":\"You should use this contract to interact with the CoinsSafe platform.Only this contract can issue stablecoins.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CoinsSafe.sol\":\"CoinsSafe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/CoinsSafe.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.7;\\n\\nimport \\\"./libraries/AmountNormalization.sol\\\";\\nimport \\\"./libraries/CollateralToken.sol\\\";\\nimport \\\"./libraries/EnumerableAddressSet.sol\\\";\\nimport \\\"./libraries/FixedPointMath.sol\\\";\\nimport \\\"./libraries/Loan.sol\\\";\\nimport \\\"./libraries/Math.sol\\\";\\nimport \\\"./libraries/ReentrancyGuard.sol\\\";\\nimport \\\"./libraries/SafeERC20.sol\\\";\\nimport {Governed} from \\\"./Governance.sol\\\";\\nimport {IERC20, IMintableAndBurnableERC20} from \\\"./interfaces/IERC20.sol\\\";\\nimport {IPriceOracle} from \\\"./interfaces/IPriceOracle.sol\\\";\\n\\n/// @dev Thrown when trying to list collateral token that has zero decimals.\\n/// @param token The address of the collateral token contract.\\nerror CoinsSafeCollateralTokenZeroDecimals(IERC20 token);\\n\\n/// @dev Thrown when trying to list collateral token that has too large decimals.\\n/// @param token The address of the collateral token contract.\\nerror CoinsSafeCollateralTokenTooLargeDecimals(IERC20 token, uint8 decimals);\\n\\n/// @dev Thrown when trying to list collateral token that's already listed.\\n/// @param token The address of the collateral token contract.\\nerror CoinsSafeCollateralTokenAlreadyListed(IERC20 token);\\n\\n/// @dev Thrown when trying to unlist collateral token that's not listed.\\n/// @param token The address of the collateral token contract.\\nerror CoinsSafeCollateralTokenNotListed(IERC20 token);\\n\\n/// @dev Thrown when interacting with a token that's not allowed as collateral.\\n/// @param token The address of the collateral token contract.\\nerror CoinsSafeTokenNotAllowedAsCollateral(IERC20 token);\\n\\n/// @dev Thrown when trying to set initial loan-to-value ratio that higher than margin call or liquidation ones.\\n/// @param token The address of the collateral token contract.\\n/// @param initialLoanToValueRatio The initial loan-to-value ratio that was tried to set.\\nerror CoinsSafeInitialLoanToValueRatioTooHigh(IERC20 token, uint256 initialLoanToValueRatio);\\n\\n/// @dev Thrown when trying to set platform fees that don't sum up to one.\\n/// @param stabilizationFee The stabilization fee that was tried to set.\\n/// @param exchangeFee The stabilization fee that was tried to set.\\n/// @param investmentFee The stabilization fee that was tried to set.\\nerror CoinsSafePlatformFeesDontSumUpToOne(uint256 stabilizationFee, uint256 exchangeFee, uint256 investmentFee);\\n\\n/// @dev Thrown when trying to interact with inactive loan with `id` id.\\n/// @param id The loan id.\\nerror CoinsSafeInactiveLoan(uint256 id);\\n\\n/// @dev Thrown when trying to liquidate healthy loan with `id` id.\\n/// @param id The loan id.\\nerror CoinsSafeLoanNotSubjectToLiquidation(uint256 id);\\n/// @dev Thrown when trying to interact with loan with `id` id that is subject to liquidation.\\n/// @param id The loan id.\\nerror CoinsSafeLoanIsSubjectToLiquidation(uint256 id);\\n\\n/// @dev Thrown when borrowing a zero amount of stablecoin.\\nerror CoinsSafeBorrowZeroAmount();\\n\\n/// @dev Thrown when depositing a zero amount of collateral token.\\nerror CoinsSafeDepositZeroAmount();\\n\\n/// @dev Thrown when repaying a zero amount of stablecoin.\\nerror CoinsSafeRepayZeroAmount();\\n\\n/// @dev Thrown when there's no need to rebalance the platform.\\nerror CoinsSafeNoNeedToRebalance();\\n\\n/// @dev Thrown when trying to rebalance the platform and there is a shortage of funds to burn.\\n/// @param shortage Shoratge of funds to burn.\\nerror CoinsSafeStabilizationFundOutOfFunds(uint256 shortage);\\n\\n/// @dev Thrown when trying to salvage one of allowed collateral tokens or stablecoin.\\n/// @param token The address of the token contract.\\nerror CoinsSafeTokenNotAllowedToBeSalvaged(IERC20 token);\\n\\n/// @title Core smart contract of CoinSafe platform\\n/// @author Andrey Gulitsky\\n/// @notice You should use this contract to interact with the CoinsSafe platform.\\n/// @notice Only this contract can issue stablecoins.\\ncontract CoinsSafe is Governed, ReentrancyGuard {\\n    using AmountNormalization for IERC20;\\n    using CollateralToken for CollateralToken.Data;\\n    using EnumerableAddressSet for EnumerableAddressSet.Set;\\n    using FixedPointMath for uint256;\\n    using Loan for Loan.Data;\\n    using SafeERC20 for IERC20;\\n    using SafeERC20 for IMintableAndBurnableERC20;\\n\\n    enum Health {\\n        Ok,\\n        MarginCall,\\n        Liquidation\\n    }\\n\\n    uint256 internal constant ONE = 100e16;\\n    uint8 internal constant DECIMALS = 18;\\n\\n    IMintableAndBurnableERC20 public immutable stablecoin;\\n    IPriceOracle public immutable priceOracle;\\n\\n    address public immutable operator;\\n    address public immutable liquidator;\\n    address public immutable exchangeFund;\\n    address public immutable investmentFund;\\n\\n    uint256 public stabilityFee = 3e16; // 3 %\\n    uint256 public stabilizationFee = 85e16; // 85 %\\n    uint256 public exchangeFee = 15e16; // 15 %\\n    uint256 public investmentFee = 0;\\n    uint256 public marginCallLoanToValueRatio = 75e16; // 75 %\\n    uint256 public liquidationLoanToValueRatio = 83e16; // 83 %\\n    uint256 public rebalancingThreshold = 1e16; // 1 %\\n\\n    Loan.Data[] public loans;\\n    mapping(address => uint256[]) public loanIds;\\n\\n    mapping(IERC20 => CollateralToken.Data) public collateralTokens;\\n    EnumerableAddressSet.Set internal collateralTokensSet;\\n\\n    event CollateralTokenListed(IERC20 indexed token);\\n    event CollateralTokenUnlisted(IERC20 indexed token);\\n\\n    event StabilityFeeUpdated(uint256 stabilityFee, uint256 newStabilityFee);\\n    event RebalancingThresholdUpdated(uint256 rebalancingThreshold, uint256 newRebalancingThreshold);\\n    event PlatformFeesUpdated(\\n        uint256 stabilizationFee,\\n        uint256 newStabilizationFee,\\n        uint256 exchangeFee,\\n        uint256 newExchangeFee,\\n        uint256 investmentFee,\\n        uint256 newInvestmentFee\\n    );\\n    event MarginCallLoanToValueRatioUpdated(uint256 marginCallLoanToValueRatio, uint256 newMarginCallLoanToValueRatio);\\n    event LiquidationLoanToValueRatioUpdated(\\n        uint256 liqudationLoanToValueRatio,\\n        uint256 newLiquidationLoanToValueRatio\\n    );\\n    event InitialLoanToValueRatioUpdated(\\n        IERC20 indexed token,\\n        uint256 initialLoanToValueRatio,\\n        uint256 newInitialLoanToValueRatio\\n    );\\n\\n    event Borrow(\\n        uint256 indexed id,\\n        address indexed borrower,\\n        IERC20 indexed token,\\n        uint256 principalAmount,\\n        uint256 collateralAmount,\\n        uint256 initialLoanToValueRatio\\n    );\\n    event Deposit(uint256 indexed id, uint256 collateralAmount);\\n    event Repay(uint256 indexed id, uint256 principalAmount);\\n    event Repaid(uint256 indexed id);\\n\\n    event Liquidated(uint256 indexed id);\\n\\n    event Rebalance(int256 delta);\\n\\n    modifier tokenAllowedAsCollateral(IERC20 token) {\\n        if (!collateralTokensSet.contains(address(token))) {\\n            revert CoinsSafeTokenNotAllowedAsCollateral(token);\\n        }\\n        _;\\n    }\\n\\n    modifier onActiveLoan(uint256 id) {\\n        if (id >= loans.length || !loans[id].isActive) {\\n            revert CoinsSafeInactiveLoan(id);\\n        }\\n        _;\\n    }\\n\\n    modifier notOnSubjectToLiquidation(uint256 loanId) {\\n        if (checkHealth(loanId) == Health.Liquidation) {\\n            revert CoinsSafeLoanIsSubjectToLiquidation(loanId);\\n        }\\n        _;\\n    }\\n\\n    modifier onSubjectToLiquidation(uint256 loanId) {\\n        if (checkHealth(loanId) != Health.Liquidation) {\\n            revert CoinsSafeLoanNotSubjectToLiquidation(loanId);\\n        }\\n        _;\\n    }\\n\\n    constructor(\\n        IMintableAndBurnableERC20 _stablecoin,\\n        IPriceOracle _priceOracle,\\n        address _operator,\\n        address _liquidator,\\n        address _exchangeFund,\\n        address _investmentFund\\n    ) {\\n        stablecoin = _stablecoin;\\n        priceOracle = _priceOracle;\\n        operator = _operator;\\n        liquidator = _liquidator;\\n        exchangeFund = _exchangeFund;\\n        investmentFund = _investmentFund;\\n    }\\n\\n    /// @notice Increases loan's principal on `collateralToken` collateral token and mints `amount` of stablecoin.\\n    /// @dev The caller must have allowed this contract to spend a sufficient amount of collateral tokens to cover\\n    /// initial loan-to-value ratio.\\n    /// @param collateralToken The address of the collateral token contract.\\n    /// @param amount The amount of stablecoin to borrow and issue.\\n    function borrow(IERC20 collateralToken, uint256 amount)\\n        external\\n        nonReentrant\\n        tokenAllowedAsCollateral(collateralToken)\\n        returns (Loan.Data memory)\\n    {\\n        if (amount == 0) {\\n            revert CoinsSafeBorrowZeroAmount();\\n        }\\n\\n        Loan.Data memory loan = calculateLoanByPrincipalAmount(collateralToken, amount);\\n\\n        collateralToken.safeTransferFrom(msg.sender, operator, collateralToken.denormalizeAmount(loan.stabilityFee));\\n        collateralToken.safeTransferFrom(\\n            msg.sender,\\n            address(this),\\n            collateralToken.denormalizeAmount(loan.collateralAmount)\\n        );\\n\\n        stablecoin.mint(address(this), loan.stabilizationFee);\\n        stablecoin.mint(exchangeFund, loan.exchangeFee);\\n        stablecoin.mint(investmentFund, loan.investmentFee);\\n        stablecoin.mint(msg.sender, amount);\\n\\n        uint256 id = loans.length;\\n        loan.id = id;\\n\\n        loans.push(loan);\\n        loanIds[msg.sender].push(id);\\n\\n        collateralTokens[collateralToken].collateralAmount += loan.collateralAmount;\\n\\n        emit Borrow(\\n            id,\\n            msg.sender,\\n            collateralToken,\\n            amount,\\n            loan.collateralAmount,\\n            collateralTokens[collateralToken].initialLoanToValueRatio\\n        );\\n\\n        return loan;\\n    }\\n\\n    /// @notice Deposits `amount` of collateral token to loan with `id` id.\\n    /// @dev The caller must have allowed this contract to spend `amount` of collateral tokens.\\n    /// @param loanId The loan id.\\n    /// @param amount The amount of collateral token to deposit.\\n    function deposit(uint256 loanId, uint256 amount)\\n        external\\n        nonReentrant\\n        onActiveLoan(loanId)\\n        notOnSubjectToLiquidation(loanId)\\n    {\\n        if (amount == 0) {\\n            revert CoinsSafeDepositZeroAmount();\\n        }\\n\\n        Loan.Data storage loan = loans[loanId];\\n\\n        loan.collateralToken.safeTransferFrom(msg.sender, address(this), amount);\\n\\n        uint256 normalizedCollateralAmount = loan.collateralToken.normalizeAmount(amount);\\n        loan.collateralAmount += normalizedCollateralAmount;\\n        loan.lastDepositAt = block.timestamp;\\n        collateralTokens[loan.collateralToken].collateralAmount += normalizedCollateralAmount;\\n\\n        emit Deposit(loanId, normalizedCollateralAmount);\\n    }\\n\\n    /// @notice Decreases principal of loan with `id` id by `amount` of stablecoin.\\n    /// @param loanId The loan id.\\n    /// @param amount The amount of stablecoin to repay.\\n    function repay(uint256 loanId, uint256 amount)\\n        external\\n        nonReentrant\\n        onActiveLoan(loanId)\\n        notOnSubjectToLiquidation(loanId)\\n    {\\n        if (amount == 0) {\\n            revert CoinsSafeRepayZeroAmount();\\n        }\\n        Loan.Data storage loan = loans[loanId];\\n        loan.principalAmount -= amount;\\n\\n        stablecoin.burn(msg.sender, amount);\\n        if (loan.principalAmount > 0) {\\n            loan.lastRepaymentAt = block.timestamp;\\n            emit Repay(loanId, amount);\\n        } else {\\n            collateralTokens[loan.collateralToken].collateralAmount -= loan.collateralAmount;\\n            loan.collateralToken.safeTransfer(\\n                loan.borrower,\\n                loan.collateralToken.denormalizeAmount(loan.collateralAmount)\\n            );\\n\\n            stablecoin.burn(address(this), loan.stabilizationFee);\\n\\n            loan.isActive = false;\\n            emit Repaid(loanId);\\n        }\\n    }\\n\\n    function liquidate(uint256 loanId) external nonReentrant onActiveLoan(loanId) onSubjectToLiquidation(loanId) {\\n        Loan.Data storage loan = loans[loanId];\\n\\n        collateralTokens[loan.collateralToken].collateralAmount -= loan.collateralAmount;\\n        loan.collateralToken.safeTransfer(liquidator, loan.collateralToken.denormalizeAmount(loan.collateralAmount));\\n\\n        uint256 collateralValue = loan.getCollateralValue();\\n        stablecoin.burn(liquidator, collateralValue - loan.stabilizationFee - loan.exchangeFee);\\n        stablecoin.burn(address(this), collateralValue - loan.principalAmount);\\n\\n        loan.isActive = false;\\n        emit Liquidated(loanId);\\n    }\\n\\n    function rebalance() external nonReentrant {\\n        uint256 totalValueLocked = getTotalValueLocked();\\n        uint256 totalSupply = stablecoin.totalSupply();\\n\\n        int256 delta = int256(totalSupply) - int256(totalValueLocked);\\n        uint256 absoluteDelta = Math.abs(delta);\\n        uint256 p = absoluteDelta.div(totalSupply);\\n        if (p < rebalancingThreshold) {\\n            revert CoinsSafeNoNeedToRebalance();\\n        }\\n\\n        if (delta > 0) {\\n            try stablecoin.burn(address(this), absoluteDelta) {} catch {\\n                uint256 balance = stablecoin.balanceOf(address(this));\\n                revert CoinsSafeStabilizationFundOutOfFunds(absoluteDelta - balance);\\n            }\\n        } else {\\n            stablecoin.mint(address(this), absoluteDelta);\\n        }\\n\\n        emit Rebalance(delta);\\n    }\\n\\n    function listCollateralToken(IERC20 token, uint256 initialLoanToValueRatio) external onlyGovernor {\\n        if (collateralTokensSet.contains(address(token))) {\\n            revert CoinsSafeCollateralTokenAlreadyListed(token);\\n        }\\n\\n        if (initialLoanToValueRatio >= marginCallLoanToValueRatio) {\\n            revert CoinsSafeInitialLoanToValueRatioTooHigh(token, initialLoanToValueRatio);\\n        }\\n\\n        uint8 decimals = token.decimals();\\n        if (decimals == 0) {\\n            revert CoinsSafeCollateralTokenZeroDecimals(token);\\n        }\\n        if (decimals > DECIMALS) {\\n            revert CoinsSafeCollateralTokenTooLargeDecimals(token, decimals);\\n        }\\n\\n        if (collateralTokensSet.add(address(token))) {\\n            collateralTokens[token] = CollateralToken.Data({\\n                collateralToken: token,\\n                priceOracle: priceOracle,\\n                stabilityFee: stabilityFee,\\n                stabilizationFee: stabilizationFee,\\n                exchangeFee: exchangeFee,\\n                investmentFee: investmentFee,\\n                initialLoanToValueRatio: initialLoanToValueRatio,\\n                marginCallLoanToValueRatio: marginCallLoanToValueRatio,\\n                liquidationLoanToValueRatio: liquidationLoanToValueRatio,\\n                collateralAmount: 0\\n            });\\n\\n            emit CollateralTokenListed(token);\\n            emit InitialLoanToValueRatioUpdated(token, 0, initialLoanToValueRatio);\\n        }\\n    }\\n\\n    function unlistCollateralToken(IERC20 token) external onlyGovernor {\\n        if (!collateralTokensSet.contains(address(token))) {\\n            revert CoinsSafeCollateralTokenNotListed(token);\\n        }\\n\\n        if (collateralTokensSet.remove(address(token))) {\\n            delete collateralTokens[token];\\n            emit CollateralTokenUnlisted(token);\\n        }\\n    }\\n\\n    function setStabilityFee(uint256 newStabilityFee) external onlyGovernor {\\n        emit StabilityFeeUpdated(stabilityFee, newStabilityFee);\\n        stabilityFee = newStabilityFee;\\n    }\\n\\n    function setPlatformFees(\\n        uint256 newStabilizationFee,\\n        uint256 newExchangeFee,\\n        uint256 newInvestmentFee\\n    ) external onlyGovernor {\\n        if (newStabilizationFee + newExchangeFee + newInvestmentFee != ONE) {\\n            revert CoinsSafePlatformFeesDontSumUpToOne(newStabilizationFee, newExchangeFee, newInvestmentFee);\\n        }\\n        emit PlatformFeesUpdated(\\n            stabilizationFee,\\n            newStabilizationFee,\\n            exchangeFee,\\n            newExchangeFee,\\n            investmentFee,\\n            newInvestmentFee\\n        );\\n        stabilizationFee = newStabilizationFee;\\n        exchangeFee = newExchangeFee;\\n        investmentFee = newInvestmentFee;\\n    }\\n\\n    function setMarginCallLoanToValueRatio(uint256 newMarginCallLoanToValueRatio) external onlyGovernor {\\n        emit MarginCallLoanToValueRatioUpdated(marginCallLoanToValueRatio, newMarginCallLoanToValueRatio);\\n        marginCallLoanToValueRatio = newMarginCallLoanToValueRatio;\\n    }\\n\\n    function setLiquidationLoanToValueRatio(uint256 newLiquidationLoanToValueRatio) external onlyGovernor {\\n        emit LiquidationLoanToValueRatioUpdated(liquidationLoanToValueRatio, newLiquidationLoanToValueRatio);\\n        liquidationLoanToValueRatio = newLiquidationLoanToValueRatio;\\n    }\\n\\n    function setRebalancingThreshold(uint256 newRebalancingThreshold) external onlyGovernor {\\n        emit RebalancingThresholdUpdated(rebalancingThreshold, newRebalancingThreshold);\\n        rebalancingThreshold = newRebalancingThreshold;\\n    }\\n\\n    function setInitialLoanToValueRatio(IERC20 token, uint256 newInitialLoanToValueRatio) external onlyGovernor {\\n        if (!collateralTokensSet.contains(address(token))) {\\n            revert CoinsSafeCollateralTokenNotListed(token);\\n        }\\n\\n        CollateralToken.Data storage collateralToken = collateralTokens[token];\\n        if (newInitialLoanToValueRatio >= collateralToken.marginCallLoanToValueRatio) {\\n            revert CoinsSafeInitialLoanToValueRatioTooHigh(token, newInitialLoanToValueRatio);\\n        }\\n\\n        uint256 initialLoanToValueRatio = collateralToken.initialLoanToValueRatio;\\n        collateralToken.initialLoanToValueRatio = newInitialLoanToValueRatio;\\n\\n        emit InitialLoanToValueRatioUpdated(token, initialLoanToValueRatio, newInitialLoanToValueRatio);\\n    }\\n\\n    function salvage(IERC20 token) external onlyGovernor {\\n        address tokenAddress = address(token);\\n        if (tokenAddress == address(stablecoin) || collateralTokensSet.contains(tokenAddress)) {\\n            revert CoinsSafeTokenNotAllowedToBeSalvaged(token);\\n        }\\n        token.safeTransfer(operator, token.balanceOf(address(this)));\\n    }\\n\\n    function getLoans(address borrower) external view returns (Loan.Data[] memory _loans) {\\n        uint256 length = loanIds[borrower].length;\\n        _loans = new Loan.Data[](length);\\n\\n        for (uint256 i = 0; i < length; i++) {\\n            _loans[i] = loans[loanIds[borrower][i]];\\n        }\\n    }\\n\\n    function getAllowedCollateralTokens()\\n        external\\n        view\\n        returns (CollateralToken.Data[] memory allowedCollateralTokens)\\n    {\\n        uint256 length = collateralTokensSet.elements.length;\\n        allowedCollateralTokens = new CollateralToken.Data[](length);\\n\\n        for (uint256 i = 0; i < length; i++) {\\n            allowedCollateralTokens[i] = collateralTokens[IERC20(collateralTokensSet.elements[i])];\\n        }\\n    }\\n\\n    function calculateLoanByPrincipalAmount(IERC20 collateralToken, uint256 principalAmount)\\n        public\\n        view\\n        returns (Loan.Data memory loan)\\n    {\\n        loan = collateralTokens[collateralToken].calculateLoanByPrincipalAmount(principalAmount);\\n    }\\n\\n    function calculateLoanByCollateralAmount(IERC20 collateralToken, uint256 collateralAmount)\\n        public\\n        view\\n        returns (Loan.Data memory loan)\\n    {\\n        loan = collateralTokens[collateralToken].calculateLoanByCollateralAmount(collateralAmount);\\n    }\\n\\n    function getTotalValueLocked() public view returns (uint256 totalValueLocked) {\\n        for (uint256 i = 0; i < collateralTokensSet.elements.length; i++) {\\n            totalValueLocked += collateralTokens[IERC20(collateralTokensSet.elements[i])].getCollateralValue();\\n        }\\n    }\\n\\n    function getLoanToValueRatio(uint256 loanId) public view returns (uint256 loanToValueRatio) {\\n        Loan.Data memory loan = loans[loanId];\\n        loanToValueRatio = loan.calculateLoanToValueRatio();\\n    }\\n\\n    function checkHealth(uint256 loanId) public view returns (Health health) {\\n        uint256 loanToValueRatio = getLoanToValueRatio(loanId);\\n        health = loanToValueRatio >= liquidationLoanToValueRatio\\n            ? Health.Liquidation\\n            : loanToValueRatio >= marginCallLoanToValueRatio\\n            ? Health.MarginCall\\n            : Health.Ok;\\n    }\\n}\\n\",\"keccak256\":\"0xa3884a353b1b47b59563c8a61b9afba278d0acf1428680783e2e70feb97717bc\",\"license\":\"BUSL-1.1\"},\"contracts/Governance.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.7;\\n\\nerror GovernedOnlyGovernorAllowedToCall();\\nerror GovernedOnlyPendingGovernorAllowedToCall();\\nerror GovernedGovernorZeroAddress();\\nerror GovernedCantGoverItself();\\n\\nabstract contract Governed {\\n    address public governor;\\n    address public pendingGovernor;\\n\\n    event PendingGovernanceTransition(address indexed governor, address indexed newGovernor);\\n    event GovernanceTransited(address indexed governor, address indexed newGovernor);\\n\\n    modifier onlyGovernor() {\\n        if (msg.sender != governor) {\\n            revert GovernedOnlyGovernorAllowedToCall();\\n        }\\n        _;\\n    }\\n\\n    constructor() {\\n        governor = msg.sender;\\n        emit PendingGovernanceTransition(address(0), governor);\\n        emit GovernanceTransited(address(0), governor);\\n    }\\n\\n    function transitGovernance(address newGovernor) external {\\n        if (newGovernor == address(0)) {\\n            revert GovernedGovernorZeroAddress();\\n        }\\n        if (newGovernor == address(this)) {\\n            revert GovernedCantGoverItself();\\n        }\\n\\n        pendingGovernor = newGovernor;\\n        emit PendingGovernanceTransition(governor, newGovernor);\\n    }\\n\\n    function acceptGovernance() external {\\n        if (msg.sender != pendingGovernor) {\\n            revert GovernedOnlyPendingGovernorAllowedToCall();\\n        }\\n\\n        governor = pendingGovernor;\\n        emit GovernanceTransited(governor, pendingGovernor);\\n    }\\n}\\n\",\"keccak256\":\"0x144bdf7b3aad44cc0084cacb3d6ac9c68a19484d2a0f0021a40ee03129c9b462\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.7;\\n\\ninterface IERC20 {\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n}\\n\\ninterface IMintableAndBurnableERC20 is IERC20 {\\n    function mint(address to, uint256 amount) external;\\n\\n    function burn(address from, uint256 amount) external;\\n}\\n\",\"keccak256\":\"0x05eafc19c3f6a255dd44fd2f0d282871c31a5f2606165d9c1eb9a7fc908ccca4\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IPriceOracle.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.7;\\n\\nimport \\\"./../interfaces/IERC20.sol\\\";\\nimport \\\"./../libraries/FixedPointMath.sol\\\";\\n\\n/// @notice Thrown when oracle doesn't provide price for `token` token.\\n/// @param token The address of the token contract.\\nerror PriceOracleTokenUnknown(IERC20 token);\\n/// @notice Thrown when oracle provide stale price `price` for `token` token.\\n/// @param token The address of the token contract.\\n/// @param price Provided price.\\nerror PriceOracleStalePrice(IERC20 token, uint256 price);\\n/// @notice Thrown when oracle provide negative, zero or in other ways invalid price `price` for `token` token.\\n/// @param token The address of the token contract.\\n/// @param price Provided price.\\nerror PriceOracleInvalidPrice(IERC20 token, int256 price);\\n\\ninterface IPriceOracle {\\n    /// @notice Gets normalized to 18 decimals price for the `token` token.\\n    /// @param token The address of the token contract.\\n    /// @return normalizedPrice Normalized price.\\n    function getNormalizedPrice(IERC20 token) external view returns (uint256 normalizedPrice);\\n}\\n\",\"keccak256\":\"0x03a00db043da3c063a85d39f68dfa0c9e88702ef817f185e11f35d64ff89b41c\",\"license\":\"BUSL-1.1\"},\"contracts/libraries/Address.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.7;\\n\\nerror CallToNonContract(address target);\\n\\nlibrary Address {\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        if (!isContract(target)) {\\n            revert CallToNonContract(target);\\n        }\\n\\n        (bool success, bytes memory returnData) = target.call(data);\\n        return verifyCallResult(success, returnData, errorMessage);\\n    }\\n\\n    function delegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        if (!isContract(target)) {\\n            revert CallToNonContract(target);\\n        }\\n\\n        (bool success, bytes memory returnData) = target.delegatecall(data);\\n        return verifyCallResult(success, returnData, errorMessage);\\n    }\\n\\n    function isContract(address account) internal view returns (bool) {\\n        uint256 codeSize;\\n        assembly {\\n            codeSize := extcodesize(account)\\n        }\\n\\n        return codeSize > 0;\\n    }\\n\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returnData,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returnData;\\n        } else {\\n            if (returnData.length > 0) {\\n                assembly {\\n                    let returnDataSize := mload(returnData)\\n                    revert(add(returnData, 32), returnDataSize)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaa6360c0519df7ce842de6853c4772bd8b4a0c94bd1f9cff5e8c0788771f7ba8\",\"license\":\"BUSL-1.1\"},\"contracts/libraries/AmountNormalization.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.7;\\n\\nimport \\\"./../interfaces/IERC20.sol\\\";\\n\\nlibrary AmountNormalization {\\n    uint8 internal constant DECIMALS = 18;\\n\\n    function normalizeAmount(IERC20 self, uint256 denormalizedAmount) internal view returns (uint256 normalizedAmount) {\\n        uint256 scale = 10**(DECIMALS - self.decimals());\\n        if (scale != 1) {\\n            return denormalizedAmount * scale;\\n        }\\n        return denormalizedAmount;\\n    }\\n\\n    function denormalizeAmount(IERC20 self, uint256 normalizedAmount)\\n        internal\\n        view\\n        returns (uint256 denormalizedAmount)\\n    {\\n        uint256 scale = 10**(DECIMALS - self.decimals());\\n        if (scale != 1) {\\n            return normalizedAmount / scale;\\n        }\\n        return normalizedAmount;\\n    }\\n}\\n\",\"keccak256\":\"0xefd7cbf9a84146fab4696f029b7cb1d05cf6728dec37bc4a0fbf889b88b57d3f\",\"license\":\"BUSL-1.1\"},\"contracts/libraries/CollateralToken.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.7;\\n\\nimport \\\"./FixedPointMath.sol\\\";\\nimport \\\"./Loan.sol\\\";\\nimport {IERC20} from \\\"./../interfaces/IERC20.sol\\\";\\nimport {IPriceOracle} from \\\"./../interfaces/IPriceOracle.sol\\\";\\n\\nlibrary CollateralToken {\\n    using FixedPointMath for uint256;\\n\\n    struct Data {\\n        IERC20 collateralToken;\\n        IPriceOracle priceOracle;\\n        uint256 stabilityFee;\\n        uint256 stabilizationFee;\\n        uint256 exchangeFee;\\n        uint256 investmentFee;\\n        uint256 initialLoanToValueRatio;\\n        uint256 marginCallLoanToValueRatio;\\n        uint256 liquidationLoanToValueRatio;\\n        uint256 collateralAmount;\\n    }\\n\\n    uint256 internal constant ONE = 100e16;\\n\\n    function calculateLoanByPrincipalAmount(Data memory self, uint256 principalAmount)\\n        public\\n        view\\n        returns (Loan.Data memory)\\n    {\\n        uint256 collateralTokenPrice = self.priceOracle.getNormalizedPrice(self.collateralToken);\\n\\n        uint256 restOfIssuance = principalAmount.mul(ONE - self.initialLoanToValueRatio).div(\\n            self.initialLoanToValueRatio\\n        );\\n        uint256 stabilizationFee = restOfIssuance.mul(self.stabilizationFee);\\n        uint256 exchangeFee = restOfIssuance.mul(self.exchangeFee);\\n        uint256 investmentFee = restOfIssuance.mul(self.investmentFee);\\n\\n        uint256 collateralAmount = principalAmount.div(self.initialLoanToValueRatio.mul(collateralTokenPrice));\\n        uint256 stabilityFee = self.stabilityFee.mul(principalAmount).div(collateralTokenPrice);\\n\\n        return\\n            Loan.Data({\\n                id: 0,\\n                isActive: true,\\n                borrower: msg.sender,\\n                collateralToken: self.collateralToken,\\n                priceOracle: self.priceOracle,\\n                stabilityFee: stabilityFee,\\n                stabilizationFee: stabilizationFee,\\n                exchangeFee: exchangeFee,\\n                investmentFee: investmentFee,\\n                principalAmount: principalAmount,\\n                collateralAmount: collateralAmount,\\n                lastDepositAt: block.timestamp,\\n                lastRepaymentAt: block.timestamp\\n            });\\n    }\\n\\n    function calculateLoanByCollateralAmount(Data memory self, uint256 collateralAmount)\\n        public\\n        view\\n        returns (Loan.Data memory)\\n    {\\n        uint256 collateralTokenPrice = self.priceOracle.getNormalizedPrice(self.collateralToken);\\n        uint256 principalAmount = collateralAmount.mul(self.initialLoanToValueRatio).mul(collateralTokenPrice);\\n\\n        uint256 restOfIssuance = principalAmount.mul(ONE - self.initialLoanToValueRatio).div(\\n            self.initialLoanToValueRatio\\n        );\\n        uint256 stabilizationFee = restOfIssuance.mul(self.stabilizationFee);\\n        uint256 exchangeFee = restOfIssuance.mul(self.exchangeFee);\\n        uint256 investmentFee = restOfIssuance.mul(self.investmentFee);\\n\\n        uint256 stabilityFee = self.stabilityFee.mul(principalAmount).div(collateralTokenPrice);\\n\\n        return\\n            Loan.Data({\\n                id: 0,\\n                isActive: true,\\n                borrower: msg.sender,\\n                collateralToken: self.collateralToken,\\n                priceOracle: self.priceOracle,\\n                stabilityFee: stabilityFee,\\n                stabilizationFee: stabilizationFee,\\n                exchangeFee: exchangeFee,\\n                investmentFee: investmentFee,\\n                principalAmount: principalAmount,\\n                collateralAmount: collateralAmount,\\n                lastDepositAt: block.timestamp,\\n                lastRepaymentAt: block.timestamp\\n            });\\n    }\\n\\n    function getCollateralValue(Data memory self) internal view returns (uint256 collateralValue) {\\n        uint256 collateralTokenPrice = self.priceOracle.getNormalizedPrice(self.collateralToken);\\n        collateralValue = self.collateralAmount.mul(collateralTokenPrice);\\n    }\\n}\\n\",\"keccak256\":\"0xca8eb1f0dcb48c116fc517bc9e7d6b13c636c1bf70b3c94e453d5343d91a22d8\",\"license\":\"BUSL-1.1\"},\"contracts/libraries/EnumerableAddressSet.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.7;\\n\\nlibrary EnumerableAddressSet {\\n    struct Set {\\n        address[] elements;\\n        mapping(address => uint256) indexes;\\n    }\\n\\n    function add(Set storage self, address element) internal returns (bool) {\\n        if (contains(self, element)) {\\n            return false;\\n        }\\n\\n        self.elements.push(element);\\n        self.indexes[element] = self.elements.length;\\n\\n        return true;\\n    }\\n\\n    function remove(Set storage self, address element) internal returns (bool) {\\n        uint256 elementIndex = indexOf(self, element);\\n        if (elementIndex == 0) {\\n            return false;\\n        }\\n\\n        uint256 indexToRemove = elementIndex - 1;\\n        uint256 lastIndex = count(self) - 1;\\n        if (indexToRemove != lastIndex) {\\n            address lastElement = self.elements[lastIndex];\\n            self.elements[indexToRemove] = lastElement;\\n            self.indexes[lastElement] = elementIndex;\\n        }\\n        self.elements.pop();\\n        delete self.indexes[element];\\n\\n        return true;\\n    }\\n\\n    function indexOf(Set storage self, address element) internal view returns (uint256) {\\n        return self.indexes[element];\\n    }\\n\\n    function contains(Set storage self, address element) internal view returns (bool) {\\n        return indexOf(self, element) != 0;\\n    }\\n\\n    function count(Set storage self) internal view returns (uint256) {\\n        return self.elements.length;\\n    }\\n}\\n\",\"keccak256\":\"0x760d57ee43b7a4268f5f5a259041450ad9be13f8b08811ce107d360d142eb84d\",\"license\":\"BUSL-1.1\"},\"contracts/libraries/FixedPointMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.7;\\n\\nerror FixedPointMathMulDivOverflow(uint256 prod1, uint256 denominator);\\n\\n/// @title Fixed point math implementation\\nlibrary FixedPointMath {\\n    uint256 internal constant SCALE = 1e18;\\n    /// @dev Largest power of two divisor of scale.\\n    uint256 internal constant SCALE_LPOTD = 262144;\\n    /// @dev Scale inverted mod 2**256.\\n    uint256 internal constant SCALE_INVERSE =\\n        78156646155174841979727994598816262306175212592076161876661508869554232690281;\\n\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 result) {\\n        uint256 prod0;\\n        uint256 prod1;\\n        assembly {\\n            let mm := mulmod(a, b, not(0))\\n            prod0 := mul(a, b)\\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n        }\\n\\n        if (prod1 >= SCALE) {\\n            revert FixedPointMathMulDivOverflow(prod1, SCALE);\\n        }\\n\\n        uint256 remainder;\\n        uint256 roundUpUnit;\\n        assembly {\\n            remainder := mulmod(a, b, SCALE)\\n            roundUpUnit := gt(remainder, 499999999999999999)\\n        }\\n\\n        if (prod1 == 0) {\\n            assembly {\\n                result := add(div(prod0, SCALE), roundUpUnit)\\n            }\\n            return result;\\n        }\\n\\n        assembly {\\n            result := add(\\n                mul(\\n                    or(\\n                        div(sub(prod0, remainder), SCALE_LPOTD),\\n                        mul(sub(prod1, gt(remainder, prod0)), add(div(sub(0, SCALE_LPOTD), SCALE_LPOTD), 1))\\n                    ),\\n                    SCALE_INVERSE\\n                ),\\n                roundUpUnit\\n            )\\n        }\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256 result) {\\n        result = mulDiv(a, SCALE, b);\\n    }\\n\\n    /// @notice Calculates \\u230aa \\u00d7 b \\u00f7 denominator\\u230b with full precision.\\n    /// @dev Credit to Remco Bloemen under MIT license https://2\\u03c0.com/21/muldiv.\\n    function mulDiv(\\n        uint256 a,\\n        uint256 b,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        uint256 prod0;\\n        uint256 prod1;\\n        assembly {\\n            let mm := mulmod(a, b, not(0))\\n            prod0 := mul(a, b)\\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n        }\\n\\n        if (prod1 >= denominator) {\\n            revert FixedPointMathMulDivOverflow(prod1, denominator);\\n        }\\n\\n        if (prod1 == 0) {\\n            assembly {\\n                result := div(prod0, denominator)\\n            }\\n            return result;\\n        }\\n\\n        uint256 remainder;\\n        assembly {\\n            remainder := mulmod(a, b, denominator)\\n\\n            prod1 := sub(prod1, gt(remainder, prod0))\\n            prod0 := sub(prod0, remainder)\\n        }\\n\\n        unchecked {\\n            uint256 lpotdod = denominator & (~denominator + 1);\\n            assembly {\\n                denominator := div(denominator, lpotdod)\\n                prod0 := div(prod0, lpotdod)\\n                lpotdod := add(div(sub(0, lpotdod), lpotdod), 1)\\n            }\\n            prod0 |= prod1 * lpotdod;\\n\\n            uint256 inverse = (3 * denominator) ^ 2;\\n            inverse *= 2 - denominator * inverse;\\n            inverse *= 2 - denominator * inverse;\\n            inverse *= 2 - denominator * inverse;\\n            inverse *= 2 - denominator * inverse;\\n            inverse *= 2 - denominator * inverse;\\n            inverse *= 2 - denominator * inverse;\\n\\n            result = prod0 * inverse;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2f335c64cfec6ebf78a441dbc1e58b739653160d643e1ebec297314660c1c5d4\",\"license\":\"MIT\"},\"contracts/libraries/Loan.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.7;\\n\\nimport \\\"./FixedPointMath.sol\\\";\\nimport {IERC20} from \\\"./../interfaces/IERC20.sol\\\";\\nimport {IPriceOracle} from \\\"./../interfaces/IPriceOracle.sol\\\";\\n\\nlibrary Loan {\\n    using FixedPointMath for uint256;\\n\\n    struct Data {\\n        uint256 id;\\n        bool isActive;\\n        address borrower;\\n        IERC20 collateralToken;\\n        IPriceOracle priceOracle;\\n        uint256 stabilityFee;\\n        uint256 stabilizationFee;\\n        uint256 exchangeFee;\\n        uint256 investmentFee;\\n        uint256 principalAmount;\\n        uint256 collateralAmount;\\n        uint256 lastDepositAt;\\n        uint256 lastRepaymentAt;\\n    }\\n\\n    function getCollateralValue(Data memory self) internal view returns (uint256 collateralValue) {\\n        uint256 collateralTokenPrice = self.priceOracle.getNormalizedPrice(self.collateralToken);\\n        collateralValue = self.collateralAmount.mul(collateralTokenPrice);\\n    }\\n\\n    function calculateLoanToValueRatio(Data memory self) internal view returns (uint256 loanToValueRatio) {\\n        if (self.principalAmount == 0) {\\n            return 0;\\n        }\\n        if (self.collateralAmount == 0) {\\n            return type(uint256).max;\\n        }\\n\\n        loanToValueRatio = self.principalAmount.div(getCollateralValue(self));\\n    }\\n}\\n\",\"keccak256\":\"0x6b0e43f02e611a9a37c0ebc94d8fedf792be67fcfd8a82b2a688be6f161a106a\",\"license\":\"BUSL-1.1\"},\"contracts/libraries/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.7;\\n\\nlibrary Math {\\n    function abs(int256 a) internal pure returns (uint256) {\\n        return a >= 0 ? uint256(a) : uint256(-a);\\n    }\\n}\\n\",\"keccak256\":\"0x2973ca63e612fe980953ebcc908f0f45343765647394f0c0db11c2aec5bf3052\",\"license\":\"MIT\"},\"contracts/libraries/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.7;\\n\\nerror ReentrancyGuardReentrantCall();\\n\\nabstract contract ReentrancyGuard {\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private status;\\n\\n    modifier nonReentrant() {\\n        if (status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        status = ENTERED;\\n\\n        _;\\n\\n        status = NOT_ENTERED;\\n    }\\n\\n    constructor() {\\n        status = NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x1adea780cdefb27ad21c300b45b7e957414ca2dbe36dd19e9098f9b778d2bad3\",\"license\":\"BUSL-1.1\"},\"contracts/libraries/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.7;\\n\\nimport \\\"./../interfaces/IERC20.sol\\\";\\nimport \\\"./Address.sol\\\";\\n\\nerror SafeERC20NoReturnData();\\n\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        callWithOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, amount));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        callWithOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, amount));\\n    }\\n\\n    function callWithOptionalReturn(IERC20 token, bytes memory data) internal {\\n        address tokenAddress = address(token);\\n\\n        bytes memory returnData = tokenAddress.functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returnData.length > 0) {\\n            if (!abi.decode(returnData, (bool))) {\\n                revert SafeERC20NoReturnData();\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9d9993130858224db05b5986cea6a94c2d0e177bd7d8258ecc4bfae3780704e1\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x610140604052666a94d74f430000600355670bcbce7f1b150000600455670214e8348c4f00006005556000600655670a688906bd8b0000600755670b84c09a3b930000600855662386f26fc100006009553480156200005d57600080fd5b5060405162003fca38038062003fca83398101604081905262000080916200013e565b600080546001600160a01b0319163390811782556040519091907fc606c9af1451cadeb333f6ff7b24a5540974f4e800bac274fa7fff9edc305cb1908290a3600080546040516001600160a01b0390911691907f564590b81987d147246f63910a8e1ee4eb09c4d64cc75ee975a8ffedfcc2210e908290a360016002556001600160601b0319606096871b811660805294861b851660a05292851b841660c05290841b831660e052831b82166101005290911b1661012052620001eb565b60008060008060008060c087890312156200015857600080fd5b86516200016581620001d2565b60208801519096506200017881620001d2565b60408801519095506200018b81620001d2565b60608801519094506200019e81620001d2565b6080880151909350620001b181620001d2565b60a0880151909250620001c481620001d2565b809150509295509295509295565b6001600160a01b0381168114620001e857600080fd5b50565b60805160601c60a05160601c60c05160601c60e05160601c6101005160601c6101205160601c613cf1620002d96000396000818161073401526110840152600081816104030152610fd901526000818161038401528181610a620152610b9101526000818161043301528181610ec001526119dd0152600081816103380152611c1e01526000818161070401528181610b6201528181610c2f01528181610f5901528181611009015281816110b40152818161112c0152818161162b0152818161172d015281816117a601528181611871015281816119470152818161251401526126500152613cf16000f3fe608060405234801561001057600080fd5b50600436106102d35760003560e01c806387eae81911610186578063d988ef20116100e3578063e3056a3411610097578063ee0e54cb11610071578063ee0e54cb14610726578063f20ec9c21461072f578063fb4ca35b1461075657600080fd5b8063e3056a34146106d9578063e3930249146106ec578063e9cbd822146106ff57600080fd5b8063e16da9f8116100c8578063e16da9f81461062f578063e1ec3c6814610642578063e2bbb158146106c657600080fd5b8063d988ef20146105ef578063dfe8f6711461060f57600080fd5b8063c78bede81161013a578063cffbc2971161011f578063cffbc29714610512578063d876d98e146105d3578063d8aed145146105dc57600080fd5b8063c78bede8146104ea578063cf176225146104fd57600080fd5b8063af76a7ef1161016b578063af76a7ef146104bc578063b26025aa146104cf578063b38e4816146104d757600080fd5b806387eae819146104965780638fa1552e146104a957600080fd5b80634433c5e811610234578063570ca735116101e857806377c4572d116101cd57806377c4572d146104685780637d7c2a1c1461047b578063863a03e01461048357600080fd5b8063570ca7351461042e578063631aa9e21461045557600080fd5b80634b8a3529116102195780634b8a3529146103de5780634c12d471146103fe5780635261fcc41461042557600080fd5b80634433c5e8146103c25780634721f2db146103cb57600080fd5b8063361416e11161028b5780634046ebae116102705780634046ebae1461037f578063415f1240146103a657806342580dbe146103b957600080fd5b8063361416e1146103635780633f8189ea1461036c57600080fd5b8063238efcbc116102bc578063238efcbc146103295780632630c12f146103335780632ecd3be41461035a57600080fd5b80630c340a24146102d85780631cec9e7514610308575b600080fd5b6000546102eb906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61031b6103163660046136d5565b610769565b6040519081526020016102ff565b61033161084d565b005b6102eb7f000000000000000000000000000000000000000000000000000000000000000081565b61031b60055481565b61031b60035481565b61033161037a3660046136d5565b6108c3565b6102eb7f000000000000000000000000000000000000000000000000000000000000000081565b6103316103b43660046136d5565b61092f565b61031b60045481565b61031b60085481565b6103316103d93660046135cd565b610d0e565b6103f16103ec3660046135cd565b610e1c565b6040516102ff91906139dd565b6102eb7f000000000000000000000000000000000000000000000000000000000000000081565b61031b60065481565b6102eb7f000000000000000000000000000000000000000000000000000000000000000081565b6103316104633660046135b0565b6114e6565b6103316104763660046136d5565b611588565b6103316115f4565b6103316104913660046135b0565b611915565b6103316104a43660046135cd565b611a76565b6103f16104b73660046135cd565b611ddb565b6103316104ca3660046136d5565b611ef6565b61031b611f62565b6103f16104e53660046135cd565b61204f565b6103316104f83660046135b0565b612119565b610505612229565b6040516102ff91906138d3565b61057e6105203660046135b0565b600c6020526000908152604090208054600182015460028301546003840154600485015460058601546006870154600788015460088901546009909901546001600160a01b039889169997909816979596949593949293919290918a565b604080516001600160a01b039b8c1681529a90991660208b0152978901969096526060880194909452608087019290925260a086015260c085015260e0840152610100830152610120820152610140016102ff565b61031b60075481565b6103316105ea366004613707565b6123db565b6106026105fd3660046135b0565b6126f8565b6040516102ff9190613922565b61062261061d3660046136d5565b6128b2565b6040516102ff9190613965565b61033161063d366004613729565b6128eb565b6106556106503660046136d5565b6129ce565b604080519d8e529b151560208e01526001600160a01b039a8b169b8d019b909b5297891660608c01529790951660808a015260a089019390935260c088019190915260e08701526101008601526101208501526101408401919091526101608301526101808201526101a0016102ff565b6103316106d4366004613707565b612a58565b6001546102eb906001600160a01b031681565b61031b6106fa3660046135cd565b612c2b565b6102eb7f000000000000000000000000000000000000000000000000000000000000000081565b61031b60095481565b6102eb7f000000000000000000000000000000000000000000000000000000000000000081565b6103316107643660046136d5565b612c5c565b600080600a838154811061077f5761077f613ca3565b6000918252602091829020604080516101a081018252600c90930290910180548352600181015460ff81161515948401949094526001600160a01b036101009485900481169284019290925260028101548216606084015260038101549091166080830152600481015460a0830152600581015460c0830152600681015460e083015260078101549282019290925260088201546101208201526009820154610140820152600a820154610160820152600b90910154610180820152905061084681612cc8565b9392505050565b6001546001600160a01b031633146108785760405163aec80d4b60e01b815260040160405180910390fd5b600154600080546001600160a01b0319166001600160a01b03909216918217815560405182917f564590b81987d147246f63910a8e1ee4eb09c4d64cc75ee975a8ffedfcc2210e91a3565b6000546001600160a01b031633146108ee576040516305e7700560e51b815260040160405180910390fd5b60085460408051918252602082018390527fa466548b1a7b7c581a6b5b6e38ebed0f41846451118fb8582b71f8605b960cd8910160405180910390a1600855565b60028054141561095257604051633ee5aeb560e01b815260040160405180910390fd5b60028055600a548190811015806109905750600a818154811061097757610977613ca3565b600091825260209091206001600c90920201015460ff16155b156109b65760405163140e7e6560e01b8152600481018290526024015b60405180910390fd5b8160026109c2826128b2565b60028111156109d3576109d3613c77565b146109f45760405163953d439560e01b8152600481018290526024016109ad565b6000600a8481548110610a0957610a09613ca3565b600091825260208083206009600c9384029091018181015460028201546001600160a01b031686529390925260408420018054919450919290610a4d908490613bc3565b909155505060098101546002820154610aac917f000000000000000000000000000000000000000000000000000000000000000091610a97916001600160a01b0390911690612d11565b60028401546001600160a01b03169190612dbf565b604080516101a08101825282548152600183015460ff8116151560208301526001600160a01b036101009182900481169383019390935260028401548316606083015260038401549092166080820152600483015460a0820152600583015460c0820152600683015460e082015260078301549181019190915260088201546101208201526009820154610140820152600a820154610160820152600b820154610180820152600090610b5e90612e37565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639dc29fac7f00000000000000000000000000000000000000000000000000000000000000008460060154856005015485610bc59190613bc3565b610bcf9190613bc3565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015610c1557600080fd5b505af1158015610c29573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639dc29fac30846008015484610c6d9190613bc3565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015610cb357600080fd5b505af1158015610cc7573d6000803e3d6000fd5b50505060018301805460ff191690555060405185907fc9e9d7cf3944e82f1fe222573e1c9acf5a2f6cd29aa9639bc8078065f091bb6b90600090a250506001600255505050565b6000546001600160a01b03163314610d39576040516305e7700560e51b815260040160405180910390fd5b6001600160a01b0382166000908152600e6020526040902054610d7a57604051630d7b7ed160e21b81526001600160a01b03831660048201526024016109ad565b6001600160a01b0382166000908152600c6020526040902060078101548210610dc85760405163f314704f60e01b81526001600160a01b0384166004820152602481018390526044016109ad565b6006810180549083905560408051828152602081018590526001600160a01b038616917fc6a8c526618a1ece6f5d33564501b92330c354faa23902079359e52c8efd72f3910160405180910390a250505050565b610e2461350b565b600280541415610e4757604051633ee5aeb560e01b815260040160405180910390fd5b600280556001600160a01b0383166000908152600e60205260409020548390610e8e57604051637712c41760e01b81526001600160a01b03821660048201526024016109ad565b82610eac57604051630c96f21160e21b815260040160405180910390fd5b6000610eb8858561204f565b9050610f11337f0000000000000000000000000000000000000000000000000000000000000000610eff8460a00151896001600160a01b0316612d1190919063ffffffff16565b6001600160a01b038916929190612ed1565b610f373330610eff846101400151896001600160a01b0316612d1190919063ffffffff16565b60c08101516040516340c10f1960e01b815230600482015260248101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340c10f1990604401600060405180830381600087803b158015610fa557600080fd5b505af1158015610fb9573d6000803e3d6000fd5b5050505060e08101516040516340c10f1960e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015260248201929092527f0000000000000000000000000000000000000000000000000000000000000000909116906340c10f1990604401600060405180830381600087803b15801561104f57600080fd5b505af1158015611063573d6000803e3d6000fd5b505050506101008101516040516340c10f1960e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015260248201929092527f0000000000000000000000000000000000000000000000000000000000000000909116906340c10f1990604401600060405180830381600087803b1580156110fa57600080fd5b505af115801561110e573d6000803e3d6000fd5b50506040516340c10f1960e01b8152336004820152602481018790527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031692506340c10f199150604401600060405180830381600087803b15801561117a57600080fd5b505af115801561118e573d6000803e3d6000fd5b5050600a80548085526001808201835560009283528551600c8084027fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a88101929092556020808901517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a9840180546040808d01516001600160a01b039081166101009081027fffffffffffffffffffffff0000000000000000000000000000000000000000ff961515969096167fffffffffffffffffffffff000000000000000000000000000000000000000000909416939093179490941790925560608c01517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2aa870180549185166001600160a01b031992831617905560808d01517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2ab880180549186169190921617905560a08c01517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2ac87015560c08c01517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2ad87015560e08c01517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2ae8701558b01517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2af8601556101208b01517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2b08601556101408b0180517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2b18701556101608c01517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2b28701556101808c01517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2b390960195909555338852600b83528088208054968701815588528288209095018690559251928d1686525290832060090180549295509093509190611468908490613a24565b90915550506101408201516001600160a01b0387166000818152600c60209081526040918290206006015482518a8152918201949094529081019290925290339083907f1c719a9a8ef2d44db7255e8d65b4a18a23f44758d6ebc0d6b80fe018d25433fb9060600160405180910390a4506001600255949350505050565b6001600160a01b03811661150d5760405163604b48b960e11b815260040160405180910390fd5b6001600160a01b038116301415611537576040516306b3e95d60e21b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fc606c9af1451cadeb333f6ff7b24a5540974f4e800bac274fa7fff9edc305cb19190a350565b6000546001600160a01b031633146115b3576040516305e7700560e51b815260040160405180910390fd5b60075460408051918252602082018390527fd2a3e4f854a80a895407f8743c1363ac14b698c432d22d8c65519e13a9e4983d910160405180910390a1600755565b60028054141561161757604051633ee5aeb560e01b815260040160405180910390fd5b600280556000611625611f62565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561168257600080fd5b505afa158015611696573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ba91906136ee565b905060006116c88383613b6b565b905060006116d582612f0f565b905060006116e38285612f27565b905060095481101561170857604051630d9edbf360e21b815260040160405180910390fd5b600083131561185557604051632770a7eb60e21b8152306004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690639dc29fac90604401600060405180830381600087803b15801561177957600080fd5b505af192505050801561178a575060015b611850576040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b1580156117f057600080fd5b505afa158015611804573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061182891906136ee565b90506118348184613bc3565b604051633b20441960e21b81526004016109ad91815260200190565b6118d6565b6040516340c10f1960e01b8152306004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340c10f1990604401600060405180830381600087803b1580156118bd57600080fd5b505af11580156118d1573d6000803e3d6000fd5b505050505b6040518381527fa3cc94864c69eaba081615f691669aa27c9f8697ad249e6c01a4d792b2aace949060200160405180910390a150506001600255505050565b6000546001600160a01b03163314611940576040516305e7700560e51b815260040160405180910390fd5b60008190507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b0316148061199c57506001600160a01b0381166000908152600e602052604090205415155b156119c4576040516233d0a560e71b81526001600160a01b03831660048201526024016109ad565b6040516370a0823160e01b8152306004820152611a72907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b038516906370a082319060240160206040518083038186803b158015611a2957600080fd5b505afa158015611a3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a6191906136ee565b6001600160a01b0385169190612dbf565b5050565b6000546001600160a01b03163314611aa1576040516305e7700560e51b815260040160405180910390fd5b6001600160a01b0382166000908152600e602052604090205415611ae35760405163685e705960e01b81526001600160a01b03831660048201526024016109ad565b6007548110611b175760405163f314704f60e01b81526001600160a01b0383166004820152602481018290526044016109ad565b6000826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015611b5257600080fd5b505afa158015611b66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b8a9190613755565b905060ff8116611bb8576040516363a36df360e11b81526001600160a01b03841660048201526024016109ad565b601260ff82161115611bf157604051637e2b406160e11b81526001600160a01b038416600482015260ff821660248201526044016109ad565b611bfc600d84612f3c565b15611dd657604051806101400160405280846001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020016003548152602001600454815260200160055481526020016006548152602001838152602001600754815260200160085481526020016000815250600c6000856001600160a01b03166001600160a01b0316815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e0820151816007015561010082015181600801556101208201518160090155905050826001600160a01b03167f55dcc5a02a669292f3baba7762915a1182901a9c28a30cc15d3325afcbb4bccc60405160405180910390a26040805160008152602081018490526001600160a01b038516917fc6a8c526618a1ece6f5d33564501b92330c354faa23902079359e52c8efd72f3910160405180910390a25b505050565b611de361350b565b6001600160a01b038084166000908152600c6020908152604091829020825161014081018452815485168152600182015490941691840191909152600281015483830152600381015460608401526004808201546080850152600582015460a0850152600682015460c0850152600782015460e085015260088201546101008501526009909101546101208401529051635751bfb360e11b81527309052b4fa7490Efffbad06dF69D2d8b406BE1B939263aea37f6692611ea5928791016139c0565b6101a06040518083038186803b158015611ebe57600080fd5b505af4158015611ed2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108469190613614565b6000546001600160a01b03163314611f21576040516305e7700560e51b815260040160405180910390fd5b60095460408051918252602082018390527f5eb53b71d73d0607121e658859e0125d7bbbf83c4288d44c18438d4fe94d1e07910160405180910390a1600955565b6000805b600d5481101561204b5761202d600c6000600d6000018481548110611f8d57611f8d613ca3565b60009182526020808320909101546001600160a01b0390811684528382019490945260409283019091208251610140810184528154851681526001820154909416918401919091526002810154918301919091526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e0830152600881015461010083015260090154610120820152612fac565b6120379083613a24565b91508061204381613c29565b915050611f66565b5090565b61205761350b565b6001600160a01b038084166000908152600c6020908152604091829020825161014081018452815485168152600182015490941691840191909152600281015483830152600381015460608401526004808201546080850152600582015460a0850152600682015460c0850152600782015460e08501526008820154610100850152600990910154610120840152905163719eae4d60e11b81527309052b4fa7490Efffbad06dF69D2d8b406BE1B939263e33d5c9a92611ea5928791016139c0565b6000546001600160a01b03163314612144576040516305e7700560e51b815260040160405180910390fd5b6001600160a01b0381166000908152600e602052604090205461218557604051630d7b7ed160e21b81526001600160a01b03821660048201526024016109ad565b612190600d82613043565b15612226576001600160a01b0381166000818152600c602052604080822080546001600160a01b03199081168255600182018054909116905560028101839055600381018390556004810183905560058101839055600681018390556007810183905560088101839055600901829055517f6d08717837ebdfd34a4ddffe3e4566e0a68e8dde2464854e9242a8f7e6399a339190a25b50565b600d546060908067ffffffffffffffff81111561224857612248613cb9565b6040519080825280602002602001820160405280156122e157816020015b6122ce60405180610140016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001906001900390816122665790505b50915060005b818110156123d657600c6000600d600001838154811061230957612309613ca3565b60009182526020808320909101546001600160a01b0390811684528382019490945260409283019091208251610140810184528154851681526001820154909416918401919091526002810154918301919091526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e083015260088101546101008301526009015461012082015283518490839081106123b8576123b8613ca3565b602002602001018190525080806123ce90613c29565b9150506122e7565b505090565b6002805414156123fe57604051633ee5aeb560e01b815260040160405180910390fd5b60028055600a5482908110158061243c5750600a818154811061242357612423613ca3565b600091825260209091206001600c90920201015460ff16155b1561245d5760405163140e7e6560e01b8152600481018290526024016109ad565b826002612469826128b2565b600281111561247a5761247a613c77565b141561249c5760405163a0d66fa360e01b8152600481018290526024016109ad565b826124ba5760405163336644ab60e21b815260040160405180910390fd5b6000600a85815481106124cf576124cf613ca3565b90600052602060002090600c02019050838160080160008282546124f39190613bc3565b9091555050604051632770a7eb60e21b8152336004820152602481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690639dc29fac90604401600060405180830381600087803b15801561256057600080fd5b505af1158015612574573d6000803e3d6000fd5b505050506008810154156125c25742600b82015560405184815285907f552544cb36551120f07c66c5cd4b2987725a0c72198587f2ce796099bb66c58c9060200160405180910390a26126ec565b60098082015460028301546001600160a01b03166000908152600c602052604081209092018054919290916125f8908490613bc3565b909155505060018101546009820154600283015461262e926001600160a01b03610100909104811692610a979290911690612d11565b6005810154604051632770a7eb60e21b815230600482015260248101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690639dc29fac90604401600060405180830381600087803b15801561269c57600080fd5b505af11580156126b0573d6000803e3d6000fd5b50505060018201805460ff191690555060405185907f33a382daad6aace935340a474d09fec82af4bec7e2b69518d283231b03a65f2490600090a25b50506001600255505050565b6001600160a01b0381166000908152600b60205260409020546060908067ffffffffffffffff81111561272d5761272d613cb9565b60405190808252806020026020018201604052801561276657816020015b61275361350b565b81526020019060019003908161274b5790505b50915060005b818110156128ab576001600160a01b0384166000908152600b602052604090208054600a9190839081106127a2576127a2613ca3565b9060005260206000200154815481106127bd576127bd613ca3565b6000918252602091829020604080516101a081018252600c90930290910180548352600181015460ff81161515948401949094526001600160a01b036101009485900481169284019290925260028101548216606084015260038101549091166080830152600481015460a0830152600581015460c0830152600681015460e083015260078101549282019290925260088201546101208201526009820154610140820152600a820154610160820152600b90910154610180820152835184908390811061288d5761288d613ca3565b602002602001018190525080806128a390613c29565b91505061276c565b5050919050565b6000806128be83610769565b90506008548110156128e2576007548110156128db576000610846565b6001610846565b60029392505050565b6000546001600160a01b03163314612916576040516305e7700560e51b815260040160405180910390fd5b670de0b6b3a76400008161292a8486613a24565b6129349190613a24565b146129635760405163649b3a5160e11b81526004810184905260248101839052604481018290526064016109ad565b600454600554600654604080519384526020840187905283019190915260608201849052608082015260a081018290527f1f7068a9be898db6fcd350ac2ff32fc5f1e6fc46c8e6cc973cde53793ff3ab5e9060c00160405180910390a1600492909255600555600655565b600a81815481106129de57600080fd5b60009182526020909120600c9091020180546001820154600283015460038401546004850154600586015460068701546007880154600889015460098a0154600a8b0154600b909b0154999b5060ff89169a6101009099046001600160a01b039081169a988116999716979596949593949293919290918d565b600280541415612a7b57604051633ee5aeb560e01b815260040160405180910390fd5b60028055600a54829081101580612ab95750600a8181548110612aa057612aa0613ca3565b600091825260209091206001600c90920201015460ff16155b15612ada5760405163140e7e6560e01b8152600481018290526024016109ad565b826002612ae6826128b2565b6002811115612af757612af7613c77565b1415612b195760405163a0d66fa360e01b8152600481018290526024016109ad565b82612b3757604051639c0ac67360e01b815260040160405180910390fd5b6000600a8581548110612b4c57612b4c613ca3565b60009182526020909120600c909102016002810154909150612b79906001600160a01b0316333087612ed1565b6002810154600090612b94906001600160a01b03168661317c565b905080826009016000828254612baa9190613a24565b909155505042600a83015560028201546001600160a01b03166000908152600c602052604081206009018054839290612be4908490613a24565b909155505060405181815286907fa3af609bf46297028ce551832669030f9effef2b02606d02cbbcc40fe6b47c559060200160405180910390a25050600160025550505050565b600b6020528160005260406000208181548110612c4757600080fd5b90600052602060002001600091509150505481565b6000546001600160a01b03163314612c87576040516305e7700560e51b815260040160405180910390fd5b60035460408051918252602082018390527fde9fa07b6ca9d540214c05366e57cb33adf8f132014d9d1b2802a5b89a99512a910160405180910390a1600355565b600081610120015160001415612ce057506000919050565b610140820151612cf35750600019919050565b612d0b612cff83612e37565b61012084015190612f27565b92915050565b600080836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015612d4d57600080fd5b505afa158015612d61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d859190613755565b612d90906012613bda565b612d9b90600a613aa1565b905080600114612db757612daf8184613a3c565b915050612d0b565b509092915050565b6040516001600160a01b038316602482015260448101829052611dd690849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b03199093169290921790915261321a565b60808101516060820151604051630787c49960e21b81526001600160a01b03918216600482015260009283921690631e1f12649060240160206040518083038186803b158015612e8657600080fd5b505afa158015612e9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ebe91906136ee565b61014084015190915061084690826132a4565b6040516001600160a01b0380851660248301528316604482015260648101829052612f099085906323b872dd60e01b90608401612deb565b50505050565b60008082121561204b57612f2282613c44565b612d0b565b600061084683670de0b6b3a764000084613374565b6001600160a01b038116600090815260018301602052604081205415612f6457506000612d0b565b508154600180820184556000848152602080822090930180546001600160a01b0319166001600160a01b03959095169485179055845493815293810190915260409092205590565b60208101518151604051630787c49960e21b81526001600160a01b03918216600482015260009283921690631e1f12649060240160206040518083038186803b158015612ff857600080fd5b505afa15801561300c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061303091906136ee565b61012084015190915061084690826132a4565b6001600160a01b03811660009081526001830160205260408120548061306d576000915050612d0b565b600061307a600183613bc3565b905060006001613088875490565b6130929190613bc3565b905080821461311e5760008660000182815481106130b2576130b2613ca3565b60009182526020909120015487546001600160a01b03909116915081908890859081106130e1576130e1613ca3565b600091825260208083209190910180546001600160a01b0319166001600160a01b0394851617905592909116815260018801909152604090208390555b855486908061312f5761312f613c8d565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b038716825260018881019091526040822091909155935050505092915050565b600080836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156131b857600080fd5b505afa1580156131cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131f09190613755565b6131fb906012613bda565b61320690600a613aa1565b905080600114612db757612daf8184613b4c565b6040805180820190915260208082527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564908201528290600090613269906001600160a01b03841690859061342f565b805190915015612f09578080602001905181019061328791906135f9565b612f0957604051639b8d506160e01b815260040160405180910390fd5b60008080600019848609848602925082811083820303915050670de0b6b3a764000081106132f65760405163072fa3c960e31b815260048101829052670de0b6b3a764000060248201526044016109ad565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff8111826133305780670de0b6b3a7640000850401945050505050612d0b565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600080806000198587098587029250828110838203039150508381106133b75760405163072fa3c960e31b815260048101829052602481018590526044016109ad565b806133c757508290049050610846565b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b6060833b61345b5760405163dc5dd7fd60e01b81526001600160a01b03851660048201526024016109ad565b600080856001600160a01b03168560405161347691906138b7565b6000604051808303816000865af19150503d80600081146134b3576040519150601f19603f3d011682016040523d82523d6000602084013e6134b8565b606091505b50915091506134c88282866134d2565b9695505050505050565b606083156134e1575081610846565b8251156134f15782518060208501fd5b8160405162461bcd60e51b81526004016109ad919061398d565b604051806101a001604052806000815260200160001515815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b805161359b81613ccf565b919050565b8051801515811461359b57600080fd5b6000602082840312156135c257600080fd5b813561084681613ccf565b600080604083850312156135e057600080fd5b82356135eb81613ccf565b946020939093013593505050565b60006020828403121561360b57600080fd5b610846826135a0565b60006101a0828403121561362757600080fd5b61362f6139ec565b8251815261363f602084016135a0565b602082015261365060408401613590565b604082015261366160608401613590565b606082015261367260808401613590565b608082015260a0838101519082015260c0808401519082015260e080840151908201526101008084015190820152610120808401519082015261014080840151908201526101608084015190820152610180928301519281019290925250919050565b6000602082840312156136e757600080fd5b5035919050565b60006020828403121561370057600080fd5b5051919050565b6000806040838503121561371a57600080fd5b50508035926020909101359150565b60008060006060848603121561373e57600080fd5b505081359360208301359350604090920135919050565b60006020828403121561376757600080fd5b815160ff8116811461084657600080fd5b80516001600160a01b03168252602081015161379f60208401826001600160a01b03169052565b5060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152505050565b80518252602081015161380f602084018215159052565b50604081015161382a60408401826001600160a01b03169052565b50606081015161384560608401826001600160a01b03169052565b50608081015161386060808401826001600160a01b03169052565b5060a0818101519083015260c0808201519083015260e08082015190830152610100808201519083015261012080820151908301526101408082015190830152610160808201519083015261018090810151910152565b600082516138c9818460208701613bfd565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b8181101561391657613902838551613778565b9284019261014092909201916001016138ef565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015613916576139518385516137f8565b928401926101a0929092019160010161393e565b602081016003831061398757634e487b7160e01b600052602160045260246000fd5b91905290565b60208152600082518060208401526139ac816040850160208701613bfd565b601f01601f19169190910160400192915050565b61016081016139cf8285613778565b826101408301529392505050565b6101a08101612d0b82846137f8565b6040516101a0810167ffffffffffffffff81118282101715613a1e57634e487b7160e01b600052604160045260246000fd5b60405290565b60008219821115613a3757613a37613c61565b500190565b600082613a5957634e487b7160e01b600052601260045260246000fd5b500490565b600181815b80851115613a99578160001904821115613a7f57613a7f613c61565b80851615613a8c57918102915b93841c9390800290613a63565b509250929050565b600061084660ff841683600082613aba57506001612d0b565b81613ac757506000612d0b565b8160018114613add5760028114613ae757613b03565b6001915050612d0b565b60ff841115613af857613af8613c61565b50506001821b612d0b565b5060208310610133831016604e8410600b8410161715613b26575081810a612d0b565b613b308383613a5e565b8060001904821115613b4457613b44613c61565b029392505050565b6000816000190483118215151615613b6657613b66613c61565b500290565b60008083128015600160ff1b850184121615613b8957613b89613c61565b837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018313811615613bbd57613bbd613c61565b50500390565b600082821015613bd557613bd5613c61565b500390565b600060ff821660ff841680821015613bf457613bf4613c61565b90039392505050565b60005b83811015613c18578181015183820152602001613c00565b83811115612f095750506000910152565b6000600019821415613c3d57613c3d613c61565b5060010190565b6000600160ff1b821415613c5a57613c5a613c61565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461222657600080fdfea164736f6c6343000807000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102d35760003560e01c806387eae81911610186578063d988ef20116100e3578063e3056a3411610097578063ee0e54cb11610071578063ee0e54cb14610726578063f20ec9c21461072f578063fb4ca35b1461075657600080fd5b8063e3056a34146106d9578063e3930249146106ec578063e9cbd822146106ff57600080fd5b8063e16da9f8116100c8578063e16da9f81461062f578063e1ec3c6814610642578063e2bbb158146106c657600080fd5b8063d988ef20146105ef578063dfe8f6711461060f57600080fd5b8063c78bede81161013a578063cffbc2971161011f578063cffbc29714610512578063d876d98e146105d3578063d8aed145146105dc57600080fd5b8063c78bede8146104ea578063cf176225146104fd57600080fd5b8063af76a7ef1161016b578063af76a7ef146104bc578063b26025aa146104cf578063b38e4816146104d757600080fd5b806387eae819146104965780638fa1552e146104a957600080fd5b80634433c5e811610234578063570ca735116101e857806377c4572d116101cd57806377c4572d146104685780637d7c2a1c1461047b578063863a03e01461048357600080fd5b8063570ca7351461042e578063631aa9e21461045557600080fd5b80634b8a3529116102195780634b8a3529146103de5780634c12d471146103fe5780635261fcc41461042557600080fd5b80634433c5e8146103c25780634721f2db146103cb57600080fd5b8063361416e11161028b5780634046ebae116102705780634046ebae1461037f578063415f1240146103a657806342580dbe146103b957600080fd5b8063361416e1146103635780633f8189ea1461036c57600080fd5b8063238efcbc116102bc578063238efcbc146103295780632630c12f146103335780632ecd3be41461035a57600080fd5b80630c340a24146102d85780631cec9e7514610308575b600080fd5b6000546102eb906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61031b6103163660046136d5565b610769565b6040519081526020016102ff565b61033161084d565b005b6102eb7f000000000000000000000000000000000000000000000000000000000000000081565b61031b60055481565b61031b60035481565b61033161037a3660046136d5565b6108c3565b6102eb7f000000000000000000000000000000000000000000000000000000000000000081565b6103316103b43660046136d5565b61092f565b61031b60045481565b61031b60085481565b6103316103d93660046135cd565b610d0e565b6103f16103ec3660046135cd565b610e1c565b6040516102ff91906139dd565b6102eb7f000000000000000000000000000000000000000000000000000000000000000081565b61031b60065481565b6102eb7f000000000000000000000000000000000000000000000000000000000000000081565b6103316104633660046135b0565b6114e6565b6103316104763660046136d5565b611588565b6103316115f4565b6103316104913660046135b0565b611915565b6103316104a43660046135cd565b611a76565b6103f16104b73660046135cd565b611ddb565b6103316104ca3660046136d5565b611ef6565b61031b611f62565b6103f16104e53660046135cd565b61204f565b6103316104f83660046135b0565b612119565b610505612229565b6040516102ff91906138d3565b61057e6105203660046135b0565b600c6020526000908152604090208054600182015460028301546003840154600485015460058601546006870154600788015460088901546009909901546001600160a01b039889169997909816979596949593949293919290918a565b604080516001600160a01b039b8c1681529a90991660208b0152978901969096526060880194909452608087019290925260a086015260c085015260e0840152610100830152610120820152610140016102ff565b61031b60075481565b6103316105ea366004613707565b6123db565b6106026105fd3660046135b0565b6126f8565b6040516102ff9190613922565b61062261061d3660046136d5565b6128b2565b6040516102ff9190613965565b61033161063d366004613729565b6128eb565b6106556106503660046136d5565b6129ce565b604080519d8e529b151560208e01526001600160a01b039a8b169b8d019b909b5297891660608c01529790951660808a015260a089019390935260c088019190915260e08701526101008601526101208501526101408401919091526101608301526101808201526101a0016102ff565b6103316106d4366004613707565b612a58565b6001546102eb906001600160a01b031681565b61031b6106fa3660046135cd565b612c2b565b6102eb7f000000000000000000000000000000000000000000000000000000000000000081565b61031b60095481565b6102eb7f000000000000000000000000000000000000000000000000000000000000000081565b6103316107643660046136d5565b612c5c565b600080600a838154811061077f5761077f613ca3565b6000918252602091829020604080516101a081018252600c90930290910180548352600181015460ff81161515948401949094526001600160a01b036101009485900481169284019290925260028101548216606084015260038101549091166080830152600481015460a0830152600581015460c0830152600681015460e083015260078101549282019290925260088201546101208201526009820154610140820152600a820154610160820152600b90910154610180820152905061084681612cc8565b9392505050565b6001546001600160a01b031633146108785760405163aec80d4b60e01b815260040160405180910390fd5b600154600080546001600160a01b0319166001600160a01b03909216918217815560405182917f564590b81987d147246f63910a8e1ee4eb09c4d64cc75ee975a8ffedfcc2210e91a3565b6000546001600160a01b031633146108ee576040516305e7700560e51b815260040160405180910390fd5b60085460408051918252602082018390527fa466548b1a7b7c581a6b5b6e38ebed0f41846451118fb8582b71f8605b960cd8910160405180910390a1600855565b60028054141561095257604051633ee5aeb560e01b815260040160405180910390fd5b60028055600a548190811015806109905750600a818154811061097757610977613ca3565b600091825260209091206001600c90920201015460ff16155b156109b65760405163140e7e6560e01b8152600481018290526024015b60405180910390fd5b8160026109c2826128b2565b60028111156109d3576109d3613c77565b146109f45760405163953d439560e01b8152600481018290526024016109ad565b6000600a8481548110610a0957610a09613ca3565b600091825260208083206009600c9384029091018181015460028201546001600160a01b031686529390925260408420018054919450919290610a4d908490613bc3565b909155505060098101546002820154610aac917f000000000000000000000000000000000000000000000000000000000000000091610a97916001600160a01b0390911690612d11565b60028401546001600160a01b03169190612dbf565b604080516101a08101825282548152600183015460ff8116151560208301526001600160a01b036101009182900481169383019390935260028401548316606083015260038401549092166080820152600483015460a0820152600583015460c0820152600683015460e082015260078301549181019190915260088201546101208201526009820154610140820152600a820154610160820152600b820154610180820152600090610b5e90612e37565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639dc29fac7f00000000000000000000000000000000000000000000000000000000000000008460060154856005015485610bc59190613bc3565b610bcf9190613bc3565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015610c1557600080fd5b505af1158015610c29573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639dc29fac30846008015484610c6d9190613bc3565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015610cb357600080fd5b505af1158015610cc7573d6000803e3d6000fd5b50505060018301805460ff191690555060405185907fc9e9d7cf3944e82f1fe222573e1c9acf5a2f6cd29aa9639bc8078065f091bb6b90600090a250506001600255505050565b6000546001600160a01b03163314610d39576040516305e7700560e51b815260040160405180910390fd5b6001600160a01b0382166000908152600e6020526040902054610d7a57604051630d7b7ed160e21b81526001600160a01b03831660048201526024016109ad565b6001600160a01b0382166000908152600c6020526040902060078101548210610dc85760405163f314704f60e01b81526001600160a01b0384166004820152602481018390526044016109ad565b6006810180549083905560408051828152602081018590526001600160a01b038616917fc6a8c526618a1ece6f5d33564501b92330c354faa23902079359e52c8efd72f3910160405180910390a250505050565b610e2461350b565b600280541415610e4757604051633ee5aeb560e01b815260040160405180910390fd5b600280556001600160a01b0383166000908152600e60205260409020548390610e8e57604051637712c41760e01b81526001600160a01b03821660048201526024016109ad565b82610eac57604051630c96f21160e21b815260040160405180910390fd5b6000610eb8858561204f565b9050610f11337f0000000000000000000000000000000000000000000000000000000000000000610eff8460a00151896001600160a01b0316612d1190919063ffffffff16565b6001600160a01b038916929190612ed1565b610f373330610eff846101400151896001600160a01b0316612d1190919063ffffffff16565b60c08101516040516340c10f1960e01b815230600482015260248101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340c10f1990604401600060405180830381600087803b158015610fa557600080fd5b505af1158015610fb9573d6000803e3d6000fd5b5050505060e08101516040516340c10f1960e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015260248201929092527f0000000000000000000000000000000000000000000000000000000000000000909116906340c10f1990604401600060405180830381600087803b15801561104f57600080fd5b505af1158015611063573d6000803e3d6000fd5b505050506101008101516040516340c10f1960e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015260248201929092527f0000000000000000000000000000000000000000000000000000000000000000909116906340c10f1990604401600060405180830381600087803b1580156110fa57600080fd5b505af115801561110e573d6000803e3d6000fd5b50506040516340c10f1960e01b8152336004820152602481018790527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031692506340c10f199150604401600060405180830381600087803b15801561117a57600080fd5b505af115801561118e573d6000803e3d6000fd5b5050600a80548085526001808201835560009283528551600c8084027fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a88101929092556020808901517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a9840180546040808d01516001600160a01b039081166101009081027fffffffffffffffffffffff0000000000000000000000000000000000000000ff961515969096167fffffffffffffffffffffff000000000000000000000000000000000000000000909416939093179490941790925560608c01517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2aa870180549185166001600160a01b031992831617905560808d01517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2ab880180549186169190921617905560a08c01517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2ac87015560c08c01517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2ad87015560e08c01517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2ae8701558b01517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2af8601556101208b01517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2b08601556101408b0180517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2b18701556101608c01517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2b28701556101808c01517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2b390960195909555338852600b83528088208054968701815588528288209095018690559251928d1686525290832060090180549295509093509190611468908490613a24565b90915550506101408201516001600160a01b0387166000818152600c60209081526040918290206006015482518a8152918201949094529081019290925290339083907f1c719a9a8ef2d44db7255e8d65b4a18a23f44758d6ebc0d6b80fe018d25433fb9060600160405180910390a4506001600255949350505050565b6001600160a01b03811661150d5760405163604b48b960e11b815260040160405180910390fd5b6001600160a01b038116301415611537576040516306b3e95d60e21b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fc606c9af1451cadeb333f6ff7b24a5540974f4e800bac274fa7fff9edc305cb19190a350565b6000546001600160a01b031633146115b3576040516305e7700560e51b815260040160405180910390fd5b60075460408051918252602082018390527fd2a3e4f854a80a895407f8743c1363ac14b698c432d22d8c65519e13a9e4983d910160405180910390a1600755565b60028054141561161757604051633ee5aeb560e01b815260040160405180910390fd5b600280556000611625611f62565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561168257600080fd5b505afa158015611696573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ba91906136ee565b905060006116c88383613b6b565b905060006116d582612f0f565b905060006116e38285612f27565b905060095481101561170857604051630d9edbf360e21b815260040160405180910390fd5b600083131561185557604051632770a7eb60e21b8152306004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690639dc29fac90604401600060405180830381600087803b15801561177957600080fd5b505af192505050801561178a575060015b611850576040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b1580156117f057600080fd5b505afa158015611804573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061182891906136ee565b90506118348184613bc3565b604051633b20441960e21b81526004016109ad91815260200190565b6118d6565b6040516340c10f1960e01b8152306004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340c10f1990604401600060405180830381600087803b1580156118bd57600080fd5b505af11580156118d1573d6000803e3d6000fd5b505050505b6040518381527fa3cc94864c69eaba081615f691669aa27c9f8697ad249e6c01a4d792b2aace949060200160405180910390a150506001600255505050565b6000546001600160a01b03163314611940576040516305e7700560e51b815260040160405180910390fd5b60008190507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b0316148061199c57506001600160a01b0381166000908152600e602052604090205415155b156119c4576040516233d0a560e71b81526001600160a01b03831660048201526024016109ad565b6040516370a0823160e01b8152306004820152611a72907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b038516906370a082319060240160206040518083038186803b158015611a2957600080fd5b505afa158015611a3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a6191906136ee565b6001600160a01b0385169190612dbf565b5050565b6000546001600160a01b03163314611aa1576040516305e7700560e51b815260040160405180910390fd5b6001600160a01b0382166000908152600e602052604090205415611ae35760405163685e705960e01b81526001600160a01b03831660048201526024016109ad565b6007548110611b175760405163f314704f60e01b81526001600160a01b0383166004820152602481018290526044016109ad565b6000826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015611b5257600080fd5b505afa158015611b66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b8a9190613755565b905060ff8116611bb8576040516363a36df360e11b81526001600160a01b03841660048201526024016109ad565b601260ff82161115611bf157604051637e2b406160e11b81526001600160a01b038416600482015260ff821660248201526044016109ad565b611bfc600d84612f3c565b15611dd657604051806101400160405280846001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020016003548152602001600454815260200160055481526020016006548152602001838152602001600754815260200160085481526020016000815250600c6000856001600160a01b03166001600160a01b0316815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e0820151816007015561010082015181600801556101208201518160090155905050826001600160a01b03167f55dcc5a02a669292f3baba7762915a1182901a9c28a30cc15d3325afcbb4bccc60405160405180910390a26040805160008152602081018490526001600160a01b038516917fc6a8c526618a1ece6f5d33564501b92330c354faa23902079359e52c8efd72f3910160405180910390a25b505050565b611de361350b565b6001600160a01b038084166000908152600c6020908152604091829020825161014081018452815485168152600182015490941691840191909152600281015483830152600381015460608401526004808201546080850152600582015460a0850152600682015460c0850152600782015460e085015260088201546101008501526009909101546101208401529051635751bfb360e11b815273__$5fe12db1329d7e41995fe042c0d943eb24$__9263aea37f6692611ea5928791016139c0565b6101a06040518083038186803b158015611ebe57600080fd5b505af4158015611ed2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108469190613614565b6000546001600160a01b03163314611f21576040516305e7700560e51b815260040160405180910390fd5b60095460408051918252602082018390527f5eb53b71d73d0607121e658859e0125d7bbbf83c4288d44c18438d4fe94d1e07910160405180910390a1600955565b6000805b600d5481101561204b5761202d600c6000600d6000018481548110611f8d57611f8d613ca3565b60009182526020808320909101546001600160a01b0390811684528382019490945260409283019091208251610140810184528154851681526001820154909416918401919091526002810154918301919091526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e0830152600881015461010083015260090154610120820152612fac565b6120379083613a24565b91508061204381613c29565b915050611f66565b5090565b61205761350b565b6001600160a01b038084166000908152600c6020908152604091829020825161014081018452815485168152600182015490941691840191909152600281015483830152600381015460608401526004808201546080850152600582015460a0850152600682015460c0850152600782015460e08501526008820154610100850152600990910154610120840152905163719eae4d60e11b815273__$5fe12db1329d7e41995fe042c0d943eb24$__9263e33d5c9a92611ea5928791016139c0565b6000546001600160a01b03163314612144576040516305e7700560e51b815260040160405180910390fd5b6001600160a01b0381166000908152600e602052604090205461218557604051630d7b7ed160e21b81526001600160a01b03821660048201526024016109ad565b612190600d82613043565b15612226576001600160a01b0381166000818152600c602052604080822080546001600160a01b03199081168255600182018054909116905560028101839055600381018390556004810183905560058101839055600681018390556007810183905560088101839055600901829055517f6d08717837ebdfd34a4ddffe3e4566e0a68e8dde2464854e9242a8f7e6399a339190a25b50565b600d546060908067ffffffffffffffff81111561224857612248613cb9565b6040519080825280602002602001820160405280156122e157816020015b6122ce60405180610140016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001906001900390816122665790505b50915060005b818110156123d657600c6000600d600001838154811061230957612309613ca3565b60009182526020808320909101546001600160a01b0390811684528382019490945260409283019091208251610140810184528154851681526001820154909416918401919091526002810154918301919091526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e083015260088101546101008301526009015461012082015283518490839081106123b8576123b8613ca3565b602002602001018190525080806123ce90613c29565b9150506122e7565b505090565b6002805414156123fe57604051633ee5aeb560e01b815260040160405180910390fd5b60028055600a5482908110158061243c5750600a818154811061242357612423613ca3565b600091825260209091206001600c90920201015460ff16155b1561245d5760405163140e7e6560e01b8152600481018290526024016109ad565b826002612469826128b2565b600281111561247a5761247a613c77565b141561249c5760405163a0d66fa360e01b8152600481018290526024016109ad565b826124ba5760405163336644ab60e21b815260040160405180910390fd5b6000600a85815481106124cf576124cf613ca3565b90600052602060002090600c02019050838160080160008282546124f39190613bc3565b9091555050604051632770a7eb60e21b8152336004820152602481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690639dc29fac90604401600060405180830381600087803b15801561256057600080fd5b505af1158015612574573d6000803e3d6000fd5b505050506008810154156125c25742600b82015560405184815285907f552544cb36551120f07c66c5cd4b2987725a0c72198587f2ce796099bb66c58c9060200160405180910390a26126ec565b60098082015460028301546001600160a01b03166000908152600c602052604081209092018054919290916125f8908490613bc3565b909155505060018101546009820154600283015461262e926001600160a01b03610100909104811692610a979290911690612d11565b6005810154604051632770a7eb60e21b815230600482015260248101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690639dc29fac90604401600060405180830381600087803b15801561269c57600080fd5b505af11580156126b0573d6000803e3d6000fd5b50505060018201805460ff191690555060405185907f33a382daad6aace935340a474d09fec82af4bec7e2b69518d283231b03a65f2490600090a25b50506001600255505050565b6001600160a01b0381166000908152600b60205260409020546060908067ffffffffffffffff81111561272d5761272d613cb9565b60405190808252806020026020018201604052801561276657816020015b61275361350b565b81526020019060019003908161274b5790505b50915060005b818110156128ab576001600160a01b0384166000908152600b602052604090208054600a9190839081106127a2576127a2613ca3565b9060005260206000200154815481106127bd576127bd613ca3565b6000918252602091829020604080516101a081018252600c90930290910180548352600181015460ff81161515948401949094526001600160a01b036101009485900481169284019290925260028101548216606084015260038101549091166080830152600481015460a0830152600581015460c0830152600681015460e083015260078101549282019290925260088201546101208201526009820154610140820152600a820154610160820152600b90910154610180820152835184908390811061288d5761288d613ca3565b602002602001018190525080806128a390613c29565b91505061276c565b5050919050565b6000806128be83610769565b90506008548110156128e2576007548110156128db576000610846565b6001610846565b60029392505050565b6000546001600160a01b03163314612916576040516305e7700560e51b815260040160405180910390fd5b670de0b6b3a76400008161292a8486613a24565b6129349190613a24565b146129635760405163649b3a5160e11b81526004810184905260248101839052604481018290526064016109ad565b600454600554600654604080519384526020840187905283019190915260608201849052608082015260a081018290527f1f7068a9be898db6fcd350ac2ff32fc5f1e6fc46c8e6cc973cde53793ff3ab5e9060c00160405180910390a1600492909255600555600655565b600a81815481106129de57600080fd5b60009182526020909120600c9091020180546001820154600283015460038401546004850154600586015460068701546007880154600889015460098a0154600a8b0154600b909b0154999b5060ff89169a6101009099046001600160a01b039081169a988116999716979596949593949293919290918d565b600280541415612a7b57604051633ee5aeb560e01b815260040160405180910390fd5b60028055600a54829081101580612ab95750600a8181548110612aa057612aa0613ca3565b600091825260209091206001600c90920201015460ff16155b15612ada5760405163140e7e6560e01b8152600481018290526024016109ad565b826002612ae6826128b2565b6002811115612af757612af7613c77565b1415612b195760405163a0d66fa360e01b8152600481018290526024016109ad565b82612b3757604051639c0ac67360e01b815260040160405180910390fd5b6000600a8581548110612b4c57612b4c613ca3565b60009182526020909120600c909102016002810154909150612b79906001600160a01b0316333087612ed1565b6002810154600090612b94906001600160a01b03168661317c565b905080826009016000828254612baa9190613a24565b909155505042600a83015560028201546001600160a01b03166000908152600c602052604081206009018054839290612be4908490613a24565b909155505060405181815286907fa3af609bf46297028ce551832669030f9effef2b02606d02cbbcc40fe6b47c559060200160405180910390a25050600160025550505050565b600b6020528160005260406000208181548110612c4757600080fd5b90600052602060002001600091509150505481565b6000546001600160a01b03163314612c87576040516305e7700560e51b815260040160405180910390fd5b60035460408051918252602082018390527fde9fa07b6ca9d540214c05366e57cb33adf8f132014d9d1b2802a5b89a99512a910160405180910390a1600355565b600081610120015160001415612ce057506000919050565b610140820151612cf35750600019919050565b612d0b612cff83612e37565b61012084015190612f27565b92915050565b600080836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015612d4d57600080fd5b505afa158015612d61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d859190613755565b612d90906012613bda565b612d9b90600a613aa1565b905080600114612db757612daf8184613a3c565b915050612d0b565b509092915050565b6040516001600160a01b038316602482015260448101829052611dd690849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b03199093169290921790915261321a565b60808101516060820151604051630787c49960e21b81526001600160a01b03918216600482015260009283921690631e1f12649060240160206040518083038186803b158015612e8657600080fd5b505afa158015612e9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ebe91906136ee565b61014084015190915061084690826132a4565b6040516001600160a01b0380851660248301528316604482015260648101829052612f099085906323b872dd60e01b90608401612deb565b50505050565b60008082121561204b57612f2282613c44565b612d0b565b600061084683670de0b6b3a764000084613374565b6001600160a01b038116600090815260018301602052604081205415612f6457506000612d0b565b508154600180820184556000848152602080822090930180546001600160a01b0319166001600160a01b03959095169485179055845493815293810190915260409092205590565b60208101518151604051630787c49960e21b81526001600160a01b03918216600482015260009283921690631e1f12649060240160206040518083038186803b158015612ff857600080fd5b505afa15801561300c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061303091906136ee565b61012084015190915061084690826132a4565b6001600160a01b03811660009081526001830160205260408120548061306d576000915050612d0b565b600061307a600183613bc3565b905060006001613088875490565b6130929190613bc3565b905080821461311e5760008660000182815481106130b2576130b2613ca3565b60009182526020909120015487546001600160a01b03909116915081908890859081106130e1576130e1613ca3565b600091825260208083209190910180546001600160a01b0319166001600160a01b0394851617905592909116815260018801909152604090208390555b855486908061312f5761312f613c8d565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b038716825260018881019091526040822091909155935050505092915050565b600080836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156131b857600080fd5b505afa1580156131cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131f09190613755565b6131fb906012613bda565b61320690600a613aa1565b905080600114612db757612daf8184613b4c565b6040805180820190915260208082527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564908201528290600090613269906001600160a01b03841690859061342f565b805190915015612f09578080602001905181019061328791906135f9565b612f0957604051639b8d506160e01b815260040160405180910390fd5b60008080600019848609848602925082811083820303915050670de0b6b3a764000081106132f65760405163072fa3c960e31b815260048101829052670de0b6b3a764000060248201526044016109ad565b600080670de0b6b3a76400008688099150506706f05b59d3b1ffff8111826133305780670de0b6b3a7640000850401945050505050612d0b565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600080806000198587098587029250828110838203039150508381106133b75760405163072fa3c960e31b815260048101829052602481018590526044016109ad565b806133c757508290049050610846565b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b6060833b61345b5760405163dc5dd7fd60e01b81526001600160a01b03851660048201526024016109ad565b600080856001600160a01b03168560405161347691906138b7565b6000604051808303816000865af19150503d80600081146134b3576040519150601f19603f3d011682016040523d82523d6000602084013e6134b8565b606091505b50915091506134c88282866134d2565b9695505050505050565b606083156134e1575081610846565b8251156134f15782518060208501fd5b8160405162461bcd60e51b81526004016109ad919061398d565b604051806101a001604052806000815260200160001515815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b805161359b81613ccf565b919050565b8051801515811461359b57600080fd5b6000602082840312156135c257600080fd5b813561084681613ccf565b600080604083850312156135e057600080fd5b82356135eb81613ccf565b946020939093013593505050565b60006020828403121561360b57600080fd5b610846826135a0565b60006101a0828403121561362757600080fd5b61362f6139ec565b8251815261363f602084016135a0565b602082015261365060408401613590565b604082015261366160608401613590565b606082015261367260808401613590565b608082015260a0838101519082015260c0808401519082015260e080840151908201526101008084015190820152610120808401519082015261014080840151908201526101608084015190820152610180928301519281019290925250919050565b6000602082840312156136e757600080fd5b5035919050565b60006020828403121561370057600080fd5b5051919050565b6000806040838503121561371a57600080fd5b50508035926020909101359150565b60008060006060848603121561373e57600080fd5b505081359360208301359350604090920135919050565b60006020828403121561376757600080fd5b815160ff8116811461084657600080fd5b80516001600160a01b03168252602081015161379f60208401826001600160a01b03169052565b5060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152505050565b80518252602081015161380f602084018215159052565b50604081015161382a60408401826001600160a01b03169052565b50606081015161384560608401826001600160a01b03169052565b50608081015161386060808401826001600160a01b03169052565b5060a0818101519083015260c0808201519083015260e08082015190830152610100808201519083015261012080820151908301526101408082015190830152610160808201519083015261018090810151910152565b600082516138c9818460208701613bfd565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b8181101561391657613902838551613778565b9284019261014092909201916001016138ef565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015613916576139518385516137f8565b928401926101a0929092019160010161393e565b602081016003831061398757634e487b7160e01b600052602160045260246000fd5b91905290565b60208152600082518060208401526139ac816040850160208701613bfd565b601f01601f19169190910160400192915050565b61016081016139cf8285613778565b826101408301529392505050565b6101a08101612d0b82846137f8565b6040516101a0810167ffffffffffffffff81118282101715613a1e57634e487b7160e01b600052604160045260246000fd5b60405290565b60008219821115613a3757613a37613c61565b500190565b600082613a5957634e487b7160e01b600052601260045260246000fd5b500490565b600181815b80851115613a99578160001904821115613a7f57613a7f613c61565b80851615613a8c57918102915b93841c9390800290613a63565b509250929050565b600061084660ff841683600082613aba57506001612d0b565b81613ac757506000612d0b565b8160018114613add5760028114613ae757613b03565b6001915050612d0b565b60ff841115613af857613af8613c61565b50506001821b612d0b565b5060208310610133831016604e8410600b8410161715613b26575081810a612d0b565b613b308383613a5e565b8060001904821115613b4457613b44613c61565b029392505050565b6000816000190483118215151615613b6657613b66613c61565b500290565b60008083128015600160ff1b850184121615613b8957613b89613c61565b837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018313811615613bbd57613bbd613c61565b50500390565b600082821015613bd557613bd5613c61565b500390565b600060ff821660ff841680821015613bf457613bf4613c61565b90039392505050565b60005b83811015613c18578181015183820152602001613c00565b83811115612f095750506000910152565b6000600019821415613c3d57613c3d613c61565b5060010190565b6000600160ff1b821415613c5a57613c5a613c61565b5060000390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461222657600080fdfea164736f6c6343000807000a",
  "libraries": {
    "AmountNormalization": "0xD920F6E5211c4764De2777678039C8EDc5B5FD7C",
    "EnumerableAddressSet": "0x028e981f8A68b2CA37EA04553eE5B7632b8ab931",
    "FixedPointMath": "0xdAc45f69cde02c3c6A185cb0f7Ac778b88c82bC6",
    "Loan": "0x3EA1b01EaA9F3230A22D91a3a1741eA91BA7aD12",
    "Math": "0x3602B61D2b5583cd386ab5199682f3bAb16a7Ace",
    "SafeERC20": "0xD0f43313872F58a4342E58750CA368EE6722413B",
    "CollateralToken": "0x09052b4fa7490Efffbad06dF69D2d8b406BE1B93"
  },
  "devdoc": {
    "author": "Andrey Gulitsky",
    "errors": {
      "CoinsSafeBorrowZeroAmount()": [
        {
          "details": "Thrown when borrowing a zero amount of stablecoin."
        }
      ],
      "CoinsSafeCollateralTokenAlreadyListed(address)": [
        {
          "details": "Thrown when trying to list collateral token that's already listed.",
          "params": {
            "token": "The address of the collateral token contract."
          }
        }
      ],
      "CoinsSafeCollateralTokenNotListed(address)": [
        {
          "details": "Thrown when trying to unlist collateral token that's not listed.",
          "params": {
            "token": "The address of the collateral token contract."
          }
        }
      ],
      "CoinsSafeCollateralTokenTooLargeDecimals(address,uint8)": [
        {
          "details": "Thrown when trying to list collateral token that has too large decimals.",
          "params": {
            "token": "The address of the collateral token contract."
          }
        }
      ],
      "CoinsSafeCollateralTokenZeroDecimals(address)": [
        {
          "details": "Thrown when trying to list collateral token that has zero decimals.",
          "params": {
            "token": "The address of the collateral token contract."
          }
        }
      ],
      "CoinsSafeDepositZeroAmount()": [
        {
          "details": "Thrown when depositing a zero amount of collateral token."
        }
      ],
      "CoinsSafeInactiveLoan(uint256)": [
        {
          "details": "Thrown when trying to interact with inactive loan with `id` id.",
          "params": {
            "id": "The loan id."
          }
        }
      ],
      "CoinsSafeInitialLoanToValueRatioTooHigh(address,uint256)": [
        {
          "details": "Thrown when trying to set initial loan-to-value ratio that higher than margin call or liquidation ones.",
          "params": {
            "initialLoanToValueRatio": "The initial loan-to-value ratio that was tried to set.",
            "token": "The address of the collateral token contract."
          }
        }
      ],
      "CoinsSafeLoanIsSubjectToLiquidation(uint256)": [
        {
          "details": "Thrown when trying to interact with loan with `id` id that is subject to liquidation.",
          "params": {
            "id": "The loan id."
          }
        }
      ],
      "CoinsSafeLoanNotSubjectToLiquidation(uint256)": [
        {
          "details": "Thrown when trying to liquidate healthy loan with `id` id.",
          "params": {
            "id": "The loan id."
          }
        }
      ],
      "CoinsSafeNoNeedToRebalance()": [
        {
          "details": "Thrown when there's no need to rebalance the platform."
        }
      ],
      "CoinsSafePlatformFeesDontSumUpToOne(uint256,uint256,uint256)": [
        {
          "details": "Thrown when trying to set platform fees that don't sum up to one.",
          "params": {
            "exchangeFee": "The stabilization fee that was tried to set.",
            "investmentFee": "The stabilization fee that was tried to set.",
            "stabilizationFee": "The stabilization fee that was tried to set."
          }
        }
      ],
      "CoinsSafeRepayZeroAmount()": [
        {
          "details": "Thrown when repaying a zero amount of stablecoin."
        }
      ],
      "CoinsSafeStabilizationFundOutOfFunds(uint256)": [
        {
          "details": "Thrown when trying to rebalance the platform and there is a shortage of funds to burn.",
          "params": {
            "shortage": "Shoratge of funds to burn."
          }
        }
      ],
      "CoinsSafeTokenNotAllowedAsCollateral(address)": [
        {
          "details": "Thrown when interacting with a token that's not allowed as collateral.",
          "params": {
            "token": "The address of the collateral token contract."
          }
        }
      ],
      "CoinsSafeTokenNotAllowedToBeSalvaged(address)": [
        {
          "details": "Thrown when trying to salvage one of allowed collateral tokens or stablecoin.",
          "params": {
            "token": "The address of the token contract."
          }
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "borrow(address,uint256)": {
        "details": "The caller must have allowed this contract to spend a sufficient amount of collateral tokens to cover initial loan-to-value ratio.",
        "params": {
          "amount": "The amount of stablecoin to borrow and issue.",
          "collateralToken": "The address of the collateral token contract."
        }
      },
      "deposit(uint256,uint256)": {
        "details": "The caller must have allowed this contract to spend `amount` of collateral tokens.",
        "params": {
          "amount": "The amount of collateral token to deposit.",
          "loanId": "The loan id."
        }
      },
      "repay(uint256,uint256)": {
        "params": {
          "amount": "The amount of stablecoin to repay.",
          "loanId": "The loan id."
        }
      }
    },
    "title": "Core smart contract of CoinSafe platform",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "borrow(address,uint256)": {
        "notice": "Increases loan's principal on `collateralToken` collateral token and mints `amount` of stablecoin."
      },
      "deposit(uint256,uint256)": {
        "notice": "Deposits `amount` of collateral token to loan with `id` id."
      },
      "repay(uint256,uint256)": {
        "notice": "Decreases principal of loan with `id` id by `amount` of stablecoin."
      }
    },
    "notice": "You should use this contract to interact with the CoinsSafe platform.Only this contract can issue stablecoins.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3431,
        "contract": "contracts/CoinsSafe.sol:CoinsSafe",
        "label": "governor",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 3433,
        "contract": "contracts/CoinsSafe.sol:CoinsSafe",
        "label": "pendingGovernor",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 4963,
        "contract": "contracts/CoinsSafe.sol:CoinsSafe",
        "label": "status",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 858,
        "contract": "contracts/CoinsSafe.sol:CoinsSafe",
        "label": "stabilityFee",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 861,
        "contract": "contracts/CoinsSafe.sol:CoinsSafe",
        "label": "stabilizationFee",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 864,
        "contract": "contracts/CoinsSafe.sol:CoinsSafe",
        "label": "exchangeFee",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 867,
        "contract": "contracts/CoinsSafe.sol:CoinsSafe",
        "label": "investmentFee",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 870,
        "contract": "contracts/CoinsSafe.sol:CoinsSafe",
        "label": "marginCallLoanToValueRatio",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 873,
        "contract": "contracts/CoinsSafe.sol:CoinsSafe",
        "label": "liquidationLoanToValueRatio",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 876,
        "contract": "contracts/CoinsSafe.sol:CoinsSafe",
        "label": "rebalancingThreshold",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 880,
        "contract": "contracts/CoinsSafe.sol:CoinsSafe",
        "label": "loans",
        "offset": 0,
        "slot": "10",
        "type": "t_array(t_struct(Data)4785_storage)dyn_storage"
      },
      {
        "astId": 885,
        "contract": "contracts/CoinsSafe.sol:CoinsSafe",
        "label": "loanIds",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 891,
        "contract": "contracts/CoinsSafe.sol:CoinsSafe",
        "label": "collateralTokens",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_contract(IERC20)3690,t_struct(Data)4126_storage)"
      },
      {
        "astId": 894,
        "contract": "contracts/CoinsSafe.sol:CoinsSafe",
        "label": "collateralTokensSet",
        "offset": 0,
        "slot": "13",
        "type": "t_struct(Set)4372_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Data)4785_storage)dyn_storage": {
        "base": "t_struct(Data)4785_storage",
        "encoding": "dynamic_array",
        "label": "struct Loan.Data[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)3690": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IPriceOracle)3743": {
        "encoding": "inplace",
        "label": "contract IPriceOracle",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_contract(IERC20)3690,t_struct(Data)4126_storage)": {
        "encoding": "mapping",
        "key": "t_contract(IERC20)3690",
        "label": "mapping(contract IERC20 => struct CollateralToken.Data)",
        "numberOfBytes": "32",
        "value": "t_struct(Data)4126_storage"
      },
      "t_struct(Data)4126_storage": {
        "encoding": "inplace",
        "label": "struct CollateralToken.Data",
        "members": [
          {
            "astId": 4106,
            "contract": "contracts/CoinsSafe.sol:CoinsSafe",
            "label": "collateralToken",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)3690"
          },
          {
            "astId": 4109,
            "contract": "contracts/CoinsSafe.sol:CoinsSafe",
            "label": "priceOracle",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IPriceOracle)3743"
          },
          {
            "astId": 4111,
            "contract": "contracts/CoinsSafe.sol:CoinsSafe",
            "label": "stabilityFee",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 4113,
            "contract": "contracts/CoinsSafe.sol:CoinsSafe",
            "label": "stabilizationFee",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 4115,
            "contract": "contracts/CoinsSafe.sol:CoinsSafe",
            "label": "exchangeFee",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 4117,
            "contract": "contracts/CoinsSafe.sol:CoinsSafe",
            "label": "investmentFee",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 4119,
            "contract": "contracts/CoinsSafe.sol:CoinsSafe",
            "label": "initialLoanToValueRatio",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 4121,
            "contract": "contracts/CoinsSafe.sol:CoinsSafe",
            "label": "marginCallLoanToValueRatio",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 4123,
            "contract": "contracts/CoinsSafe.sol:CoinsSafe",
            "label": "liquidationLoanToValueRatio",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 4125,
            "contract": "contracts/CoinsSafe.sol:CoinsSafe",
            "label": "collateralAmount",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_struct(Data)4785_storage": {
        "encoding": "inplace",
        "label": "struct Loan.Data",
        "members": [
          {
            "astId": 4758,
            "contract": "contracts/CoinsSafe.sol:CoinsSafe",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 4760,
            "contract": "contracts/CoinsSafe.sol:CoinsSafe",
            "label": "isActive",
            "offset": 0,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 4762,
            "contract": "contracts/CoinsSafe.sol:CoinsSafe",
            "label": "borrower",
            "offset": 1,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 4765,
            "contract": "contracts/CoinsSafe.sol:CoinsSafe",
            "label": "collateralToken",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IERC20)3690"
          },
          {
            "astId": 4768,
            "contract": "contracts/CoinsSafe.sol:CoinsSafe",
            "label": "priceOracle",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IPriceOracle)3743"
          },
          {
            "astId": 4770,
            "contract": "contracts/CoinsSafe.sol:CoinsSafe",
            "label": "stabilityFee",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 4772,
            "contract": "contracts/CoinsSafe.sol:CoinsSafe",
            "label": "stabilizationFee",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 4774,
            "contract": "contracts/CoinsSafe.sol:CoinsSafe",
            "label": "exchangeFee",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 4776,
            "contract": "contracts/CoinsSafe.sol:CoinsSafe",
            "label": "investmentFee",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 4778,
            "contract": "contracts/CoinsSafe.sol:CoinsSafe",
            "label": "principalAmount",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 4780,
            "contract": "contracts/CoinsSafe.sol:CoinsSafe",
            "label": "collateralAmount",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 4782,
            "contract": "contracts/CoinsSafe.sol:CoinsSafe",
            "label": "lastDepositAt",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 4784,
            "contract": "contracts/CoinsSafe.sol:CoinsSafe",
            "label": "lastRepaymentAt",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "384"
      },
      "t_struct(Set)4372_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableAddressSet.Set",
        "members": [
          {
            "astId": 4367,
            "contract": "contracts/CoinsSafe.sol:CoinsSafe",
            "label": "elements",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 4371,
            "contract": "contracts/CoinsSafe.sol:CoinsSafe",
            "label": "indexes",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_uint256)"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
